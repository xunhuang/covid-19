{"version":3,"sources":["Splash.js","AppModule.js","models/Countries.js","GeoLocation.js","CountryContext.js","MyTabs.js","CovidUI.js","MentalHealthTab.js","Util.js","SearchBox.js","CreditHover.js","graphs/DataCredit.js","FooterDialogue.js","Footer.js","components/chrome/DonateLink.js","components/chrome/SocialMediaButtons.js","ContentWrapping.js","USInfoTopWidget.js","Routes.js","CovidAnalysis.js","NPRProjection.js","TestingData.js","HospitalizationData.js","VaccineData.js","graphs/DataSeries.js","math/FitVirusCV19.js","models/DataSeries.js","UnitedStates.js","graphs/Summary.js","graphs/AntSwitch.js","MapCountyGeneric.js","MapStateGeneric.js","DateRangeSlider.js","WorldContext.js","models/BasicDataComponent.js","models/NameComponent.js","models/PopulationComponent.js","models/Path.js","MapWorldGeneric.js","MapUS.js","graphs/GraphAxisScales.js","components/graphs/AdvancedGraph.js","graphs/GraphCountyHospitalization.js","graphs/GraphHospitalizationProjection.js","graphs/AtAGlance.js","graphs/GraphVaccination.js","graphs/ChildrenAtAGlance.js","graphs/CovidCompare.js","graphs/GraphDaysToDoubleOverTime.js","graphs/GraphGrowthRateOverTime.js","graphs/GraphRecoveryAndDeath.js","graphs/GraphTestingEffort.js","graphs/GraphDaily.js","graphs/Graphs.js","Map.js","TableSortHelper.js","ListAllStates.js","Title.js","PageUS.js","CountyListRender.js","PageState.js","Hospitals.js","PageCounty.js","PageMetro.js","models/ChildrenComponent.js","models/DivisionTypesComponent.js","models/GeographyComponent.js","models/ProjectionsComponent.js","models/SearchIndexComponent.js","models/World.js","models/Earth.js","components/chrome/SearchInput.js","components/chrome/AppBar.js","components/chrome/Discussion.js","components/tables/SortableTable.js","components/tables/DivisionTable.js","pages/PageRegion.js","Page404.js","Theme.js","App.js","serviceWorker.js","index.js","../covidmodule/index.js","PublicAllData.js","../covidmodule/CountyInfo.js","../covidmodule/Util.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","title","display","color","background","padding","margin","borderRadius","subtitle","rootSplash","justifyContent","alignItems","width","height","Splash","props","classes","className","Toolbar","Typography","variant","noWrap","firebase","require","firebaseConfig","initializeApp","logger","analytics","firestore","Cookies","superagent","defaultValue","location","country","Countries","state","county","coordinates","longitude","latitude","fetchPrecisePoliticalLocation","a","fetchLocationUsingMethods","askForExactLocation","fetchApproxIPLocationGoogle","apiKey","set","expires","saved","getLocationFromCookie","fetchApproxIPLocationIPDataCo","ipdataco_key","ipdataco_key2","ipdataco_key3","fetchApproxIPLocationIPGEOLOCATION","methods","safeMethods","concat","coordinateFindingError","method","coords","getPoliticalLocationFromCoordinates","getCensusLocationFromCoordinates","getGlobalLocationFromCoordinates","locationFindingError","result","undefined","get","query","lat","lon","format","then","res","c","body","results","county_name","s","state_code","stateName","state_name","logEvent","catch","err","country_name","googleMapsEndpoint","length","address_components","countryName","long_name","console","log","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","error","cookie","getJSON","key","post","lng","url","ipgeolocation_key","Error","country_code","country_code2","region","state_prov","region_code","apikey","CountryContext","React","createContext","TabPanel","children","value","index","other","component","role","hidden","id","aria-labelledby","Box","p","LinkTab","withStyles","root","textTransform","fontWeight","typography","fontWeightRegular","minHeight","fontFamily","join","opacity","fontWeightBold","selected","Tab","disableRipple","MyTabs","history","useHistory","tabs","labels","selectedTabIdx","selectedTabName","URLSearchParams","search","urlQueryKey","urlQueryValues","findIndex","name","useState","tabvalue","setTabvalue","labelcomp","map","l","label","tabscomp","tab","d","Tabs","onChange","event","newValue","searchParams","toString","push","aria-label","sectionHeader","palette","secondary","main","SectionHeader","MentalHealthResources","inline","ResourceSectionOne","List","item","i","ListItem","onClick","window","open","Url","ListItemAvatar","Avatar","src","ThumbnailURL","ListItemText","primary","Title","Fragment","Subtitle","MentalHealthResourceSection","withRouter","resmap","reduce","m","section","tablist","shortNumber","states","moment","myShortNumber","n","isNaN","replace","Number","isFinite","filterDataToRecent","data","numDays","cutoff","subtract","filter","fulldate","isAfter","getOldestMomentInData","evaluationFunc","currentOldest","forEach","element","elementMoment","makeCountyFromDescription","myCountry","stateCountyDescription","stateForTwoLetterName","countyForName","myGoodWholeNumber","toFixed","myGoodShortNumber","CookieGetLastCounty","getDefaultCounty","county_info","CookieSetLastCounty","useStickyState","cookieId","isCookieStale","expiration","readCookie","setState","newState","getRefLines","source","stayhome","vKeyRefLines","date","unix","stayHomeOrder","StartDate","EndDate","findLocation","link","marginLeft","marginRight","gpsIcon","SearchBox","useContext","counties","allStates","flatMap","allCounties","display_name","total","totalConfirmed","newCases","twoLetterName","metros","allMetros","metro","search_list_final","sort","b","x","y","mobilePropsBar","xs","sm","mobilePropsButton","webPropsBar","xl","md","webPropsButton","Grid","container","justify","direction","isMobile","classNamePrefix","styles","menu","provided","zIndex","placeholder","isDisabled","isLoading","isClearable","isRtl","isSearchable","options","param","route","routeTo","target","findLocationAndRedirect","fontSize","countyDescr","newCountyObj","params","to","CreditPopover","list","contributers","substring","DataCreditWidget","sources","href","rel","spacing","closeButton","right","top","grey","DialogTitle","onClose","disableTypography","IconButton","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","asDialogue","Component","handleClose","buttonText","Dialog","maxWidth","fullWidth","dividers","autoFocus","topContainer","marginTop","paddingBottom","footerLink","textAlign","linkContainer","iconRoot","githubIcon","creditParagraph","Footer","footerLinkProps","footerLinks","handleClick","openedPopoverId","setOpenedPopoverId","popoverId","preventDefault","linkPair","e","DonateLink","Link","message","SocialMediaButtons","useLocation","pathname","bgStyle","backgroundColor","fill","FacebookShareButton","FacebookIcon","TwitterShareButton","TwitterIcon","RedditShareButton","RedditIcon","WhatsappShareButton","WhatsappIcon","EmailShareButton","EmailIcon","Button","Icon","buttonClassName","quote","size","round","iconFillColor","iconColor","WhatsNewData","row","paddingRight","tagline","paddingTop","alignSelf","flexDirection","keepclam","searchContainer","paddingLeft","qpContainer","borderWidth","qpBox","flex","supportUs","buyUsACoffee","newsDate","newsTitle","commentPaper","overflow","maxHeight","WhatsNewSection","Date","toDate","slice","wrap","Feature","RouterLink","commentary","DonateButton","Banner","showNews","us_summary","summary","url_shared","match","socialMediaRow","generatedTime","QPArea","setOpen","qpid","withHeader","comp","disqusConfig","identifier","healthDiscussion","Paper","elevation","DiscussionEmbed","shortname","config","appId","tagSticky","left","tagContainer","flexWrap","tagContainerNoBeds","rowNoBeds","tag","textDecoration","tagSelected","tagTitle","tagSection","alignContent","topTag","smallTag","mainTag","table","timestamp","USInfoTopWidget","useTheme","squish","useMediaQuery","breakpoints","down","tags","cursor","parent","showBeds","Tag","shortName","hospitals","newcases","confirmed","count","bedCount","linearRegression","log2","Math","getGrowthRateLinearRegression","fips","slope","getDoubleDays7DayLinearRegression","exp","keys","Object","key7days","firstday","prepared_data","k","diff","daysToDouble","processForTimeSeries","fn","getKeysSortedByDate","getDay2DoubleTimeSeries","getGrowthRateTimeSeries","trimLastDaysData","cached","fetchNPRProjectionData","cachedStates","cachedUS","testingUSURL","addfulldate","sourceData","t","floor","padStart","fetchTestingDataStates","stateShortName","fetchTestingDataUS","fetchTestingDataStatesTable","fetchHospitalizationDataStates","fetchHospitalizationDataUS","datefield","fetchVaccineDataStates","twoLetterStateShortname","stateURL","rawData","fetchVaccineDataUS","fetchVaccineDataCounty","countyURL","mergeDataSeries","entry1","entry2","map1","e2","mitem","values","makeDataSeriesFromTotal","key_total","key_daily","key_moving","sorteddata","entry","lastentry","moving","sortByFullDate","dailyvalues","column","v","exportColumnValues","avg","ma","computeMovingAverage","exportColumnFromDataSeries","getODE","par","beta","gamma","N","I0","dCdt","C","c0","fitVirusCV19","startdate","date0","startdate_till_now","date00","n0","b0","iniGuess","K0","r","nday","Array","w1","w2","bt","bmax","parestWrapper","every","Clim","flambertw","calcEndPoint","calcClim","Cm","calcInflectionPoint","calcCm","tau1","tau2","tau","tm","integral","calcTm","tspan","calcTend","max","makeTspan","myOde45","add","odefun","y0","t0","integrator","ode45","tmax","step","tmin","dt","fun","fmin","nelderMead","fx","fminsearch","tsol","Csol","NaN","Cc","Csol_new","c1","c2","f1","f2","norm","vec_subtraction","v1","v2","dC","sum","sqrt","nn","nmax","k1","k2","k3","q","K","A","z0","EPSILON","POSITIVE_INFINITY","fzero","range","func","lowerLimit","upperLimit","errorTol","maxIter","tol_act","new_step","prev_step","fa","fb","fc","abs","t1","cb","t2","uniroot","periods","daily","doublingLabel","smoothLabel","formatter","intervalS","converter","pointConverter","DataSeries","raw","period","this","label_","raw_","period_","points_","lastPoint_","suffix","t0_","valueByUnixTimestamp_","ts","lastPoint","points","entries","EmptySeries","secondToLastValue","lastChange","LazyDataSeries","deltaPoints","doublingInterval","daysTo2X","lastLogs","lastDoubleValue","lastDouble","doublings","dropped","inputseries","assert","denominator","series","MOVING_WIN_SIZE","smoothed","SMOOTH_WINDOW_SIZE","population","capita","linear","trendFit","Ca","newstartdate","last","isSame","mdate","valueByUnixTimestamp","tminus1","point","serieses","Map","formatters","Set","has","next","timestampFormatter","generator","generator_","valueMapper","predictionMapper","trend","difference","CovidData","CountyGeoData","geolib","statemap","STATEFP","datesToDataPoints","days","Confirmed","sortByDate","projection","ProjectionMIT","day","death","Death","Recovered","recovery","CovidSummarizable","covidRaw_","Summary","normalizedRaw_","beds","bedsICU","bedsAvail","deathsNew","newpercent","daysToDoubleDeath","LastConfirmed","LastConfirmedNew","summarized","deaths","LastDeath","LastDeathNew","recovered","LastRecovered","recoveredNew","LastRecoveredNew","tests","totalTests","DaysToDouble","DaysToDoubleDeath","generated","Last2WeeksConfirmedDelta","Country","fetchedAllData","metroByStatesByIds_","statesById_","statesByTwoLetterName_","countiesById_","State","FIPS","stateId","countyForId","update","metroByStates","Counties","addMetro","metroForId","Metros","reindex","fetchAllUSData","countydata","stateraw","countyraw","totalTestResults","totalTestPositive","hospitalized","hospitalizedIncreased","from","routes","dataPointsAsync","fromOldDataSourceDataPoints","location_name","hospitalizationAsync","vaccines","geoUrl","covidRaw","country_","CountyInfo","getStateNameFromFips","getStateAbbreviationFromFips","counties_","countiesByName_","metros_","metrosByCounty_","Metro","County","reverse","fromDateStr","doses_admin_total","doses_shipped_total","doses_alloc_total","getStatePopulation","StayHomeOrder","clear","state_fips","state1","parseFloat","xmin","xmax","ymin","ymax","xscale","yscale","scale","rotate","process","toLowerCase","getProjectionConfig_","state_","population_","Population","hospitalization_","hospitalization","ca_county_status","metroContainingCounty","center_","candidates","candidate","getDistance","fetchPublicCountyDataNewTimeSeries","serverdata","cases","fetchPublicCountyDataNew","_fetchServerData","d1","getConfirmedByDate","d2","aspect","innerDiv","change","maybeHospitalization","testData","maybeHospitals","jumpTo","detailed","input","pushChangeTo","pop","AntSwitch","switchBase","transform","common","white","borderColor","border","thumb","boxShadow","track","checked","Switch","stroke","strokeWidth","small","MapNew","countyMapConfig","isZoomed","setTooltipContent","data-tip","projectionConfig","zoom","geography","geographies","geo","county_id","properties","COUNTYFP","colorFunction","rsmKey","onMouseEnter","onMouseLeave","selectionCallback","MapCountyGeneric","memo","setSelectedCounty","getCountyDataPoint","perCapita","skipCapita","colorFunctionPerMillion","toolip","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","marker","MapStates","stateForId","centroid","geoCentroid","cur","indexOf","textAnchor","subject","dx","dy","alignmentBaseline","MapStateGeneric","setSelectedState","mobileDiv","webDiv","DateRangeSlider","startDate","daysBetween","currentDate","defaultMaxValue","maxValue","minOffset","valueState","setValueState","sliderPropsShared","valueLabelFormat","marks","min","valueChanged","handleValueChange","gridProps","IOSSlider","valueLabelDisplay","StyledSlider","valueLabel","mark","Slider","iOSBoxShadow","active","rail","markActive","WorldContext","BasicDataComponent","died","confirmed_","active_","recovered_","died_","doublingInterval_","NameComponent","name_","PopulationComponent","Path","components","string","level","pattern","parse","startsWith","path","substr","split","MapWorld","world","center","pos","ISO_A2","getMultiple","english","MapWorldGeneric","gridPadding","minWidth","dateLabel","logColors","d3","clamp","ColorScale","domain","confirmedWorld","confirmedPerMillion","confirmedNew","confirmedNewWorld","confirmedNewPerMillion","confirmedNewPerMillionWorld","deathWorld","deathPerMillion","deathPerMillionWorld","timeToDouble","testsPerMillions","CountyNavButtons","ToggleButtonGroup","exclusive","ToggleButton","CountryButton","MapUS","setPerCapita","selectedCounty","subtabs","MapUSConfirmed","MapUSConfirmedNew","MapStateDeath","MapDaysToDouble","MapUSTestCoverage","MapWorldConfirmed","MapWorldConfirmedNew","MapWorldDeath","desired","getURLParam","isDataFetched","showPastNumDays","subtab","setSubtab","ChosenMap","buttonGroup","newvalue","dataFetched","setDataFetched","showPastDays","setShowPastDays","oldestMoment","useEffect","fetchAllUSCountyData","align","val","dailygrowth","dateOrLastValue","basic","dateOrLastValueNew","getConfirmedNewByDate","getDeathsByDate","baseToggleButtonStyles","logScale","scaleSymlog","marginBottom","slider","expand","cookieStaleWhen","verticalScale","AdvancedGraph","axisScales","setStateSticky","scales","expandedSerieses","expanded","covidspecial","s_for_display","showMovingAverage","nDayAverage","dropLastPoint","stipple","last2PointSeries","suffixLabel","derived","original","seriesInfo","expandSeriesesToMap","allSerieses","alignT0","flatten","yAxisFormatter","seriesesAndEnvelopes","allLabels","known","setKnown","initial","setSelected","includes","showControls","displays","newScale","newstate","spec","future","filterData","specs","vRefLines","hRefLines","defaultProps","useDisplayStyles","option","Display","useLegendStyles","fade","action","icon","Legend","style","Chart","ordered","YAxis0Color","YAxis1Color","rightAxis","idx","ReferenceLine","Label","lines","gethRefLines","ResponsiveContainer","LineChart","today","enddate","ReferenceArea","x1","x2","fillOpacity","getvRefAreas","Tooltip","valueFormatter","labelFormatter","XAxis","dataKey","tickFormatter","YAxis","yAxisId","tick","orientation","CartesianGrid","strokeDasharray","lineForSpec","specToElements","Line","baseLine","type","isAnimationActive","dot","GraphCountyHospitalization","icu","icu_avail","icu_capacity","hrefs","GraphAllBedProjectionState","GraphAllBedProjectionUS","GraphHospitalization","setData","onVentilatorCurrently","maybeHospitalizationProjectionTabFor","graph","GraphVaccinationState","GraphVaccinationUSA","vaccineDataAsync","administered","GraphVaccinationCounty","dailymoving","GraphVaccination","admin","vaccineAdminSeries","setLabel","DailyConfirmedNew","dataSeries","setDataSeries","confirmDataSeriesAsync","doubling","dailyGrowth","dailyGrowthRate","DailyDeathNew","deathDataSeriesAsync","AtAGlance","newconfirm","newdeath","serverityIndex","ChildrenAtAGlance","child","PerCapitaCompare","USData","setUSdata","all","colors","color_index","dataPoints","dataColumn","CovidCompare","GraphDaysToDoubleOverTime","mydata","setMydata","daysToDoubleTimeSeries","bottom","tickItem","verticalAlign","GraphGrowthRateOverTime","show2weeks","growthRateTimeSeries","handle2WeeksToggle","show30days","BasicGraphRecoveryAndDeath","handleLogScaleToggle","CaveatStateGraph","customtooltip","CustomTooltip","tested","positive","negative","totalPositve","totalTested","totalNegative","totalPending","payload","testsThatDay","positiveThatDay","negativeThatDay","pending","formatYAxis","PostiveRate7Days","setSourceData","testingAsync","totalTestResults_series","totalPositve_series","positveDaily","testsDialy","rate","divide","GraphTestingWidget","widget","chart","GraphTestingWidget1","useAreaChart","testTotalArray","testPostives","testNegatives","neg","total_tests","total_positives","total_negatives","AreaChart","Area","stackId","content","GraphDaily","confirmedSeries","setConfimedSeries","deathSeries","setDeathSeries","hosptializationCurrentlySeries","setHospitalizationCurrentSeries","hospitalizationCurrentlyAsync","RibbonBadge","badge","Badge","UnhookedGraphSection","getDesiredState","showRibbon","maybeDaily","factory","maybeTesting","maybeAncestor","ancestor","testing","maybeFindTesting","maybeTestingTabFor","maybeMap","maybeMapTabFor","maybeRecovery","maybeRecoveryAndDeathTabFor","headings","TabContent","desire","scrollButtons","badgeContent","tabContent","getUnvalidated","GraphSection","detailedToggles","descendingComparator","orderBy","stableSort","array","comparator","stabilizedThis","el","order","getComparator","EnhancedTableHead","headCells","onRequestSort","TableHead","TableRow","headCell","TableCell","numeric","sortDirection","TableSortLabel","property","ListAllStates","ListAllStatesPerCapita","ListAllStatesTesting","prepareDataForDisplay","newrow","newEntry","statename","partsPerMil","deathsPerMil","AllStateListCapita","setOrder","setOrderBy","extendlist","Table","disablePadding","TableBody","scope","AllStateListRender","newcolumn","prepareStatesTestingDataForDisplay","stateCode","getStateNameByStateCode","positiveNumber","positiveRate","negativeNumber","negativeRate","testCoverage","AllStateListTesting","testingStatesTableAsync","states_data","record","NEGATIVE_INFINITY","stateObject","desc","Helmet","PageUS","default_county_info","Util","NearbyCounties","allNearby","nearby","countylist","ListCountiesForMetro","positiveCountiesIn","CountiesForStateWidget","ListStateCountiesCapita","prepCountyDataForDisplay","CountyListRender","CountyListRenderCapita","PageState","topcounty","DetailCaseListWidget","HOSPITAL_NAME","localeCompare","HQ_CITY","NUM_LICENSED_BEDS","NUM_STAFFED_BEDS","NUM_ICU_BEDS","snapshotToArray","snapshot","returnArr","childSnapshot","db","collection","where","querySnapshot","CountyHospitalsWidget","county_hospitals","setHospitals","fetchCountyHospitals","CA_statusMap","text","CA","CountySpecificNew","countyData","setCountyData","fetchNewCountyInfo","community","textStyle","school","healthwebsites","site","PageCounty","BonusDashboards","PageMetro","metroByStatesForId","def","any","ChildrenComponent","children_","DivisionTypesComponent","divisions","divisions_","GeographyComponent","position_","ProjectionsComponent","SearchIndexComponent","termsToNames","namesToPaths","termsToNames_","namesToPaths_","lettersToTerms_","term","first","terms","trim","whitelist","matchTerm_","opt_whitelist","matchingTerms","matchingNames","possibleTerm","World","componentsByPath","frontier","componentType","ensure_","asStr","componentTypes","constructor","haveTarget","fetched","fetch","delete","dataKeys","cachedData","SEARCH_INDEX_PATH","fetchWorldData","BasicEarthSource","baseData","have","equals","buildSearchIndex_","matches","ourComponents","basicComponentsFor_","projectionsComponentsFor_","division","divisionUnder","divisionRoot","childrenPaths","childrenComponents","childPath","fromTimestamps","projections","namesToPath","ancestorTerms","fullName","divisionPath","passTerms","singular","plural","shape","searchIcon","pointerEvents","divider","iconButton","resultsContainer","userSelect","resultsList","outline","lineHeight","RESULT_HEIGHT","textOverflow","whiteSpace","SearchInput","setResults","resultRenderer","onChoice","ClickAwayListener","onClickAway","InputBase","placerholder","onGeolocate","Divider","disableHeight","rowCount","rowHeight","rowRenderer","appBar","nameAndSearch","appName","donations","light","expander","socialButtons","socialButton","actions","flexShrink","AppBar","NavigatingSearchInput","locationLookup","allMatches","Discussion","setSource","scrollPane","hide","squishText","hyphens","SortableTable","columns","rows","defaultSortColumn","orderingBy","setOrderingBy","defaultDirection","setDirection","sortFn","emptyLast","preferred","compareOn","attempt","compareStable","sorted","createUpdateSort","opposite","hideSortIcon","shortLabel","short","contextKey","renderShortNumber","valueFor","ak","bk","DivisionTableMain","picked","pickLowest","quantifier","lastValue","newConfirmed","confirmedChange","DivisionTableCapita","deathsPerMillion","activePerMillion","recoveredPerMillion","DivisionTableDaysToDouble","confirmedDoublingInterval","deathsDoublingInterval","recoveredDoublingInterval","DivisionTab","PageRegion","parentDivision","showNearby","showMap","types","theirGeography","distance","useTitleStyles","noOverflow","node","parentLink","numbers","number","borderLeft","borderTop","confirmNumbers","find","deathsNumbers","main1GTag","WilsonTitle","tagclasses","names","getNames","parentCursor","parentName","useSummaryStyle","LocationSummaryTitle","useGraphStyles","comparisons","comparisonSearch","hover","chip","Graphs","comparingWith","setComparingWith","Chip","onDelete","copied","splice","removeComparison","DailyChangeGraph","DailyTotalGraph","DoublingGraph","Graph","isCompareMode","setScale","serieseDef","seriesGen","fitVirusCV19Prediction","dropFirst","pointLargerEqualThan","graphSeries","compareSeriesSelector","colorIndex","Page404","bgcolor","compactTheme","createMuiTheme","overrides","MuiTableCell","sizeSmall","MuiToggleButton","MainApp","earth","setEarth","setCountry","myCounty","setMyCounty","nonUSCountry","setNonUSCountry","ROW_special","createBasicEarthAsync","fetchApproximatePoliticalLocation","Provider","SafeRoutes","UnhookedSafeRoutes","successStateFor","info","errored","exact","status","App","ThemeProvider","Boolean","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","exports","county_fips","JSON","request","zlib","streamToString","stream","chunks","on","chunk","Buffer","headers","unzippedStream","origin","pipe","createGunzip","jsonString","findCountyStrict","state_two_letter","countyname","STATE_TWO_LETTER_TO_POPULATIONS","STATE_FIPS_TO_NAME","fipsToState","STATE_SHORTNAME_TO_FIPS","abbreviation","STATE_Name_To_FIPS","two_letter_state_name","getFipsFromStateName","getFipsFromStateShortName","state_name_short","getAllStateFips","getFipsFromStateCountyName","pad","normalize_date","parseInt","getValueFromLastDate","comment","num","newnum","nv","mergeTwoMapValues","m1","m2"],"mappings":"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","file":"static/js/main.6365c25b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n        flexGrow: 1,\n    },\n    title: {\n        display: 'block',\n        color: '#FFFFFF',\n        background: '#00aeef',\n        padding: 25,\n        margin: 25,\n        borderRadius: 20,\n\n    },\n    subtitle: {\n        display: 'block',\n        color: '#00aeef',\n        padding: 5,\n        margin: 5,\n    },\n    rootSplash: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"60vh\",\n        flexGrow: 1,\n    },\n}));\n\nconst Splash = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.rootSplash}>\n            <div>\n                <Toolbar>\n                    <div className={classes.grow}> </div>\n                    <Typography className={classes.title} variant=\"h2\" noWrap>\n                        Vaccinate!\n        </Typography>\n                    <div className={classes.grow}> </div>\n                </Toolbar>\n                <Toolbar>\n                    <div className={classes.grow}> </div>\n                    <Typography className={classes.subtitle} variant=\"h5\" noWrap>\n                        #Wear_A_Mask\n          </Typography>\n                    <div className={classes.grow}> </div>\n                </Toolbar>\n                <Toolbar>\n                    <div className={classes.grow}> </div>\n                    <Typography className={classes.subtitle} variant=\"h5\" noWrap>\n                        this too shall pass\n          </Typography>\n                    <div className={classes.grow}> </div>\n                </Toolbar>\n            </div>\n        </div>);\n}\n\nexport { Splash }\n","const firebase = require('firebase/app');\nrequire(\"firebase/firestore\");\nrequire(\"firebase/analytics\");\nconst firebaseConfig = require('./firebaseConfig.json');\nfirebase.initializeApp(firebaseConfig);\nconst logger = firebase.analytics();\nconst firedb = firebase.firestore();\n\nexport { logger, firedb, firebase }\n","export default {\n  US: \"United States of America\",\n}\n","import { logger } from \"./AppModule\"\nimport Countries from \"./models/Countries\"\n\nconst Cookies = require(\"js-cookie\");\nconst superagent = require(\"superagent\");\n\nconst firebaseConfig = require('./firebaseConfig.json');\n\nconst cookieId = \"covidLocation\"\n\nconst defaultValue = {\n  location: {\n    country: Countries.US,\n    state: \"CA\",\n    county: \"Santa Clara\",\n  },\n  coordinates: {\n    longitude: -73.968723,\n    latitude: 40.775191,\n  },\n}\n\n// Gets user's country, and if in US and availble, their county/state\nexport async function fetchPrecisePoliticalLocation() {\n  const location = await fetchLocationUsingMethods([\n    () => askForExactLocation(),\n    () => fetchApproxIPLocationGoogle(firebaseConfig.apiKey),\n  ]);\n  Cookies.set(cookieId, location, {\n    expires: 1000,\n  });\n  return location;\n}\n\n// Uses IP address to get country, and if availble, approximate country/state\nexport async function fetchApproximatePoliticalLocation() {\n  const saved = getLocationFromCookie();\n  if (saved) {\n    return saved;\n  }\n\n  const location =  await fetchLocationUsingMethods([\n    () => fetchApproxIPLocationIPDataCo(firebaseConfig.ipdataco_key),\n    () => fetchApproxIPLocationIPDataCo(firebaseConfig.ipdataco_key2),\n    () => fetchApproxIPLocationIPDataCo(firebaseConfig.ipdataco_key3),\n    () => fetchApproxIPLocationIPGEOLOCATION(),\n    () => fetchApproxIPLocationGoogle(),\n  ]);\n\n  Cookies.set(cookieId, location, {\n    expires: 1000,\n  });\n  return location;\n}\n\nasync function fetchLocationUsingMethods(methods) {\n  const safeMethods = methods.concat([\n    () => coordinateFindingError(),\n  ]);\n\n  let coords;\n  for (const method of safeMethods) {\n    try {\n      coords = await method();\n      break;\n    } catch (err) {\n      continue;\n    }\n  }\n  return await getPoliticalLocationFromCoordinates(coords);\n}\n\nasync function getPoliticalLocationFromCoordinates(coordinates) {\n  for (const method of [\n    () => getCensusLocationFromCoordinates(coordinates),\n    () => getGlobalLocationFromCoordinates(coordinates, firebaseConfig.apiKey),\n    () => locationFindingError(),\n  ]) {\n    const result = await method();\n    if (result) {\n      return result;\n    }\n  }\n  return undefined;\n}\n\nasync function getCensusLocationFromCoordinates(coordinates) {\n  return await superagent\n    .get(\"https://geo.fcc.gov/api/census/area\")\n    .query({\n      lat: coordinates.latitude,\n      lon: coordinates.longitude,\n      format: \"json\",\n    }).then(res => {\n      const c = res.body.results[0].county_name;\n      const s = res.body.results[0].state_code;\n      const stateName = res.body.results[0].state_name;\n      logger.logEvent(\"CensusCountyLookupSuccess\", {\n        location: coordinates,\n        country: Countries.US,\n        county: c,\n        state: s,\n        stateName: stateName,\n      });\n      return {\n        country: Countries.US,\n        county: c,\n        state: s,\n        stateName: stateName,\n      };\n    })\n    .catch(err => {\n      logger.logEvent(\"CensusCountyLookupFailed\", coordinates);\n      return null;\n    });\n}\n\nasync function getGlobalLocationFromCoordinates(coordinates, apiKey) {\n  // some providers have countries already set.\n  if (coordinates.country_name) {\n    return {\n      country: coordinates.country_name,\n    }\n  }\n\n  const googleMapsEndpoint = `https://maps.googleapis.com/maps/api/geocode/json`\n    + `?latlng=${coordinates.latitude},${coordinates.longitude}`\n    + `&result_type=country`\n    + `&key=${apiKey}`;\n  return await superagent\n    .get(googleMapsEndpoint)\n    .then(res => {\n      const results = res.body.results\n      if (!results || results.length < 1) {\n        return null;\n      }\n      const address_components = results[0].address_components;\n      if (!address_components || address_components.length < 1) {\n        return null;\n      }\n      const countryName = address_components[0].long_name;\n      console.log(results)\n      return {\n        country: countryName\n      }\n    })\n    .catch(err => {\n      logger.logEvent(\"GoogleMapsPoliticalLocationLookupFailed\", coordinates);\n      return null;\n    });\n}\n\nfunction locationFindingError() {\n  logger.logEvent(\"LocationFromCoordNotFoundAfterAPI\");\n  return defaultValue.location;\n}\n\nfunction askForExactLocation() {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(\n      position => resolve({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n      }),\n      error => reject(error)\n    );\n  });\n}\n\nfunction getLocationFromCookie() {\n  const cookie = Cookies.getJSON(cookieId);\n  if (cookie && (cookie.country || cookie.county) ) {\n    logger.logEvent(\"LocationFoundInCookie\", cookie);\n    return cookie;\n  } else {\n    return null;\n  }\n}\n\nasync function fetchApproxIPLocationGoogle(key) {\n  return await superagent\n    .post(`https://www.googleapis.com/geolocation/v1/geolocate?key=${firebaseConfig.apiKey}`)\n    .then(res => {\n      console.log(res);\n      return {\n        longitude: res.body.location.lng,\n        latitude: res.body.location.lat,\n      }\n    });\n}\n\n// this one is not very good - while at Alameda, it says it's in santa clara, I guess\n// with google we are paying for precision.\n\nasync function fetchApproxIPLocationIPGEOLOCATION() {\n  const url = `https://api.ipgeolocation.io/ipgeo?apiKey=${firebaseConfig.ipgeolocation_key}`;\n  return await superagent\n    .get(url)\n    .then(res => {\n      if (!res.body.longitude) {\n        throw new Error('Bad result');\n      }\n      console.log(\"ipgeolocation\")\n      console.log(res.body);\n      return {\n        longitude: res.body.longitude,\n        latitude: res.body.latitude,\n        country_code: res.body.country_code2,\n        country_name: res.body.country_name,\n        region: res.body.state_prov,\n        region_code: res.body.region_code\n      };\n    });\n}\n\nasync function fetchApproxIPLocationIPDataCo(apikey) {\n  const url = `https://api.ipdata.co/?api-key=${apikey}`;\n  return await superagent\n    .get(url)\n    .then(res => {\n      if (!res.body || !res.body.longitude) {\n        throw new Error('Bad result');\n      }\n      console.log(\"ipgdata\")\n      console.log(res.body);\n      return {\n        longitude: res.body.longitude,\n        latitude: res.body.latitude,\n        country_code: res.body.country_code,\n        country_name: res.body.country_name,\n        region: res.body.region,\n        region_code: res.body.region_code,\n      };\n    });\n}\n\nfunction coordinateFindingError() {\n  logger.logEvent(\"LocationNoFoundAfterAPI\");\n  return defaultValue.coordinates;\n}\n","import React from 'react';\n\nexport const CountryContext = React.createContext(undefined);\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom'\nimport { withStyles } from \"@material-ui/core/styles\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={1}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `nav-tab-${index}`,\n        'aria-controls': `nav-tabpanel-${index}`,\n    };\n}\n\nconst LinkTab = withStyles((theme) => ({\n    root: {\n        textTransform: 'none',\n        // minWidth: 72,\n        fontWeight: theme.typography.fontWeightRegular,\n        // marginRight: theme.spacing(4),\n        background: \"#c3c3c3\",\n        borderRadius: 25,\n        margin: 2,\n        minHeight: 0,\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:hover': {\n            color: '#40a9ff',\n            opacity: 1,\n        },\n        '&$selected': {\n            color: '#0090ff',\n            background: \"#ffffff\",\n            fontWeight: theme.typography.fontWeightBold,\n        },\n        '&:focus': {\n            color: '#00a9ff',\n        },\n    },\n    selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\n\nconst MyTabs = (props) => {\n    const history = useHistory();\n\n    const tabs = props.tabs;\n    const labels = props.labels;\n    let selectedTabIdx = 0;\n    if (history) {\n        // e.g. {'graph': 'cases', 'table': 'testing'}\n        let searchParams = new URLSearchParams(history.location.search);\n        // e.g. 'testing'\n        let selectedTabName = searchParams.get(props.urlQueryKey);\n        selectedTabIdx = props.urlQueryValues.findIndex(name => name === selectedTabName);\n        if (selectedTabIdx === -1) {\n            // The active tab is not specified in the url query\n            selectedTabIdx = 0;\n        }\n    }\n\n    const [tabvalue, setTabvalue] = React.useState(selectedTabIdx);\n\n    const handleChange = (event, newValue) => {\n        setTabvalue(newValue);\n        // Change url without reloading the page\n        let searchParams = new URLSearchParams(history.location.search);\n        searchParams.set(props.urlQueryKey, props.urlQueryValues[newValue]);\n        history.location.search = searchParams.toString();\n        history.push(history.location)\n    }\n    const labelcomp = labels.map((l, c) =>\n        <LinkTab label={l} key={c} {...a11yProps(c)} />\n    );\n    const tabscomp = tabs.map((tab, d) =>\n        <TabPanel value={tabvalue} index={d} key={d}>\n            {tab}\n        </TabPanel>\n    );\n    return <>\n        <Tabs\n            variant=\"scrollable\"\n            value={tabvalue}\n            onChange={handleChange}\n            aria-label=\"\"\n        >\n            {labelcomp}\n        </Tabs>\n        {tabscomp}\n    </>;\n}\n\nexport { MyTabs }\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    sectionHeader: {\n        \"border-left\": `.1rem solid ${theme.palette.secondary.main}`,\n        \"border-bottom\": \".1rem solid #f3f3f3\",\n        margin: 3,\n        padding: 3,\n    }\n}));\n\nconst SectionHeader = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.sectionHeader}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport { SectionHeader }\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MyTabs } from \"./MyTabs.js\"\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport { withRouter } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar';\n\nconst MentalHealthResources = require(\"./data/mentalhealth.json\");\n\nconst useStyles = makeStyles(theme => ({\n    inline: {\n        display: 'inline',\n        // fontWeight: \"fontWeightBold\",\n    },\n}));\n\nconst ResourceSectionOne = (props) => {\n    const classes = useStyles();\n    return <List>\n        {props.tab.map((item, i) =>\n            <ListItem onClick={() => { window.open(item.Url) }} key={i}>\n                <ListItemAvatar>\n                    <Avatar variant=\"rounded\" src={item.ThumbnailURL} />\n                </ListItemAvatar>\n                <ListItemText\n                    primary={item.Title}\n                    secondary={\n                        <React.Fragment>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textPrimary\"\n                            >\n                                {item.Subtitle}\n                            </Typography>\n                        </React.Fragment>\n                    }\n                />\n            </ListItem>\n        )}\n    </List >;\n};\nconst MentalHealthResourceSection = withRouter((props) => {\n    const resmap = MentalHealthResources.reduce((m, item) => {\n        let section = m[item.Tab];\n        if (!section) {\n            section = [];\n        }\n        section.push(item);\n        m[item.Tab] = section;\n        return m;\n    }, {})\n    const tablist = [\n        <ResourceSectionOne tab={resmap[1]} />,\n        <ResourceSectionOne tab={resmap[2]} />,\n        <ResourceSectionOne tab={resmap[3]} />,\n    ]\n    let tabs = <MyTabs\n        labels={[\"Meditation\", `Stress Mgmt`, `Education/Kids`]}\n        urlQueryKey=\"resources\"\n        urlQueryValues={['medication', 'stressmgmt', 'kids']}\n        tabs={tablist}\n    />;\n    return tabs;\n});\nexport { MentalHealthResourceSection }\n","import { useState } from 'react'\n\nvar shortNumber = require('short-number');\nconst Cookies = require(\"js-cookie\");\nconst states = require('us-state-codes');\nconst moment = require(\"moment\");\n\nfunction myShortNumber(n) {\n  if (!n) {\n    return \"0\";\n  }\n  if (isNaN(n)) {\n    n = n.replace(/,/g, '');\n    n = Number(n);\n  } else if (!isFinite(n)) {\n    return \"∞\";\n  }\n  return shortNumber(n);\n}\n\nfunction filterDataToRecent(data, numDays) {\n  const cutoff = moment().subtract(numDays + 1, 'days')\n  return data.filter(d => {\n    return moment(d.fulldate, \"MM/DD/YYYY\").isAfter(cutoff)\n  });\n}\n\nfunction getOldestMomentInData(data, evaluationFunc = (data) => true) {\n  let currentOldest = moment();\n  data.forEach(element => {\n    if (evaluationFunc(element)) {\n      const elementMoment = moment(element.fulldate, \"MM/DD/YYYY\")\n      currentOldest = currentOldest.isAfter(elementMoment) ? elementMoment : currentOldest\n    }\n  })\n  return currentOldest\n}\n\nfunction makeCountyFromDescription(myCountry, stateCountyDescription) {\n  const state = myCountry.stateForTwoLetterName(stateCountyDescription.state);\n  return state.countyForName(stateCountyDescription.county);\n}\n\nfunction myGoodWholeNumber(n) {\n  if (Number.isNaN(n) || !isFinite(n)) {\n    return \"-\";\n  }\n  return n.toFixed(0);\n}\n\n\nfunction myGoodShortNumber(n) {\n  if (Number.isNaN(n) || !isFinite(n)) {\n    return \"-\";\n  }\n  return myShortNumber(n);\n}\n\nfunction CookieGetLastCounty() {\n  let county_info = Cookies.getJSON(\"LastCounty\");\n  return county_info;\n}\n\nfunction getDefaultCounty() {\n  let county_info = CookieGetLastCounty();\n  if (county_info) {\n    return county_info;\n  }\n  return {\n    county: \"Santa Clara\",\n    state: \"CA\",\n  }\n}\nfunction getDefaultCountyForState(state) {\n  let county_info = CookieGetLastCounty();\n  if (county_info) {\n    if (county_info.state === state.twoLetterName) {\n      return state.countyForName(county_info.county);\n    }\n  }\n\n  // cookie county not match, return the top county\n  let counties =\n    state\n      .allCounties()\n      .sort((a, b) => b.totalConfirmed() - a.totalConfirmed());\n  let topcounty = counties[0];\n  if (!topcounty) {\n    // some \"state\" like Puerto Rico has no counties\n    return;\n  }\n  if (topcounty.name === \"Statewide Unallocated\") {\n    topcounty = counties[1];\n  }\n  return topcounty;\n}\nfunction CookieSetLastCounty(state, county) {\n  let county_info = {\n    state: state,\n    county: county,\n  }\n\n  Cookies.set(\"LastCounty\", county_info, {\n    expires: 7  // 7 day, people are not supposed to be moving anyways\n  });\n}\n\nfunction getStateNameByStateCode(stateCode) {\n  switch (stateCode) {\n    case \"AS\":\n      return \"American Samoa\";\n    case \"GU\":\n      return \"Guam\";\n    case \"MP\":\n      return \"Northern Marianas\";\n    case \"VI\":\n      return \"Virgin Islands\";\n    default:\n      return states.getStateNameByStateCode(stateCode);\n  }\n}\n\nfunction pad(n) { return n < 10 ? '0' + n : n }\n\nfunction normalize_date(k) {\n  let p = k.split(\"/\");\n  if (p.length !== 3) {\n    return null;\n  }\n  let m = pad(parseInt(p[0]));\n  let d = pad(parseInt(p[1]));\n  let y = p[2];\n  if (y.length === 2) {\n    y = \"20\" + y;\n  }\n  return `${m}/${d}/${y}`;\n}\n\nfunction useStickyState({ defaultValue, cookieId, isCookieStale = (c) => false, expiration = null }) {\n  let readCookie = Cookies.getJSON(cookieId);\n  if (!readCookie || (isCookieStale(readCookie))) {\n    readCookie = defaultValue;\n  }\n\n  const [state, setState] = useState(readCookie);\n\n  const setStateSticky = (newState) => {\n    Cookies.set(cookieId, newState, {\n      expires: expiration\n    });\n    setState(newState);\n  }\n\n  return [state, setStateSticky];\n}\n\n\nexport function getRefLines(source) {\n  const vKeyRefLines = [\n    {\n      date: moment(\"05/25/2020\", \"MM/DD/YYYY\").unix(),\n      label: \"Memorial\",\n    },\n    {\n      date: moment(\"07/04/2020\", \"MM/DD/YYYY\").unix(),\n      label: \"July 4th\",\n    },\n    {\n      date: moment(\"09/07/2020\", \"MM/DD/YYYY\").unix(),\n      label: \"Labor Day\",\n    },\n    {\n      date: moment(\"11/26/2020\", \"MM/DD/YYYY\").unix(),\n      label: \"Thanksgiving\",\n    },\n    {\n      date: moment(\"12/25/2020\", \"MM/DD/YYYY\").unix(),\n      label: \"XMas\",\n    },\n    {\n      date: moment(\"01/01/2021\", \"MM/DD/YYYY\").unix(),\n      label: \"New Year\",\n    },\n    {\n      date: moment(\"02/15/2021\", \"MM/DD/YYYY\").unix(),\n      label: \"President's Day\",\n    },\n    {\n      date: moment(\"01/18/2021\", \"MM/DD/YYYY\").unix(),\n      label: \"MLK\",\n    },\n    {\n      date: moment(\"07/04/2021\", \"MM/DD/YYYY\").unix(),\n      label: \"July 4th\",\n    },\n    {\n      date: moment(\"09/06/2021\", \"MM/DD/YYYY\").unix(),\n      label: \"Labor Day\",\n    },\n    {\n      date: moment(\"12/25/2021\", \"MM/DD/YYYY\").unix(),\n      label: \"XMas\",\n    },\n  ]\n  if (!source) {\n    return vKeyRefLines\n  }\n\n  let stayhome;\n  if (source.stayHomeOrder) {\n    stayhome = source.stayHomeOrder();\n  }\n  if (stayhome) {\n    if (stayhome.StartDate) {\n      vKeyRefLines.push({\n        date: moment(moment(stayhome.StartDate).format(\"MM/DD/YYYY\"), \"MM/DD/YYYY\").unix(),\n        label: \"Stay-Home-Order\",\n      });\n    }\n    if (stayhome.EndDate) {\n      vKeyRefLines.push({\n        date: moment(moment(stayhome.EndDate).format(\"MM/DD/YYYY\"), \"MM/DD/YYYY\").unix(),\n        label: \"Re-Opens\",\n      });\n    }\n  }\n  return vKeyRefLines;\n}\n\nexport {\n  myShortNumber,\n  myGoodShortNumber,\n  myGoodWholeNumber,\n\n  CookieGetLastCounty,\n  CookieSetLastCounty,\n  getDefaultCountyForState,\n  getDefaultCounty,\n  getStateNameByStateCode,\n  normalize_date,\n  makeCountyFromDescription,\n  filterDataToRecent,\n  getOldestMomentInData,\n  useStickyState,\n}\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"./CountryContext\";\nimport Select from 'react-select';\nimport { useHistory } from \"react-router-dom\";\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography'\nimport { Link as MaterialLink } from '@material-ui/core';\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchPrecisePoliticalLocation } from \"./GeoLocation\"\nimport { BrowserView, MobileView, isMobile } from 'react-device-detect'\nimport { makeCountyFromDescription } from \"./Util\"\n\nconst useStyles = makeStyles(theme => ({\n    findLocation: {\n        padding: 2,\n        background: '#00aeef',\n        borderRadius: 15,\n        justifyContent: \"center\",\n        display: \"flex\",\n        color: \"white\",\n    },\n    link: {\n        marginLeft: '1vw',\n        marginRight: '1vw',\n    },\n    gpsIcon: {\n        color: '#00aeef',\n        margin: '0 auto',\n        display: 'grid'\n    },\n}));\n\nconst SearchBox = (props) => {\n    const classes = useStyles();\n    const country = useContext(CountryContext);\n    const counties =\n        country.allStates().flatMap(s => s.allCounties()).map(county => {\n            return {\n                display_name: `${county.name}, ${county.state().name}`,\n                county: county,\n                total: county.totalConfirmed() + county.newCases(),\n            };\n        });\n    const states = country.allStates().map(\n        state => {\n            return {\n                display_name: `${state.name} (${state.twoLetterName})`,\n                state: state,\n                total: state.totalConfirmed() + state.newCases(),\n            }\n        });\n    const metros = country.allMetros().map(\n        metro => {\n            return {\n                display_name: `${metro.name}, ${metro.state().name}`,\n                metro: metro,\n                total: metro.totalConfirmed() + metro.newCases(),\n            }\n        });\n    const search_list = counties.concat(states).concat(metros)\n    let search_list_sorted = search_list.sort((a, b) => {\n        let x = a.total;\n        let y = b.total;\n        if (!x) x = 0;\n        if (!y) y = 0;\n\n        return y - x;\n    });\n    let search_list_final = search_list_sorted\n        .map(c => {\n            return {\n                label: `${c.display_name} (${c.total})`,\n                value: c,\n            };\n        });\n    const history = useHistory();\n\n    const mobilePropsBar = {\n        xs: 10,\n        sm: 11\n    }\n\n    const mobilePropsButton = {\n        xs: 12 - mobilePropsBar.xs,\n        sm: 12 - mobilePropsBar.sm\n    }\n\n    const webPropsBar = {\n        xl: 11,\n        md: 10,\n        sm: 9,\n        xs: 8\n    }\n\n    const webPropsButton = {\n        xl: 12 - webPropsBar.xl,\n        md: 12 - webPropsBar.md,\n        sm: 12 - webPropsBar.sm,\n        xs: 12 - webPropsBar.md\n    }\n\n    return (\n        <Grid container justify=\"space-evenly\" alignItems=\"center\" direction=\"row\">\n            <Grid item {...(isMobile ? mobilePropsBar : webPropsBar)}>\n                <Select\n                    className=\"basic-single\"\n                    classNamePrefix=\"select\"\n                    styles={{\n                        menu: provided => ({ ...provided, zIndex: 9999 })\n                    }}\n                    defaultValue={\"\"}\n                    placeholder={\"Search for a County or a State\"}\n                    isDisabled={false}\n                    isLoading={false}\n                    isClearable={true}\n                    isRtl={false}\n                    isSearchable={true}\n                    name=\"county_or_state_selection\"\n                    options={search_list_final}\n                    onChange={param => {\n                        if (param && param.value) {\n                            let route;\n                            if (param.value.county) {\n                                route = param.value.county.routeTo();\n                            } else if (param.value.metro) {\n                                route = param.value.metro.routeTo();\n                            } else {\n                                route = param.value.state.routeTo();\n                            }\n                            history.push(route);\n                        }\n                    }}\n                />\n            </Grid>\n            <Grid item {...(isMobile ? mobilePropsButton : webPropsButton)}>\n                <BrowserView>\n                    <Typography variant=\"body2\" className={`${classes.findLocation} ${classes.link}`}>\n                        <MaterialLink target=\"_blank\" onClick={() => findLocationAndRedirect(country, history)} className={`${classes.findLocation}`} >\n                            Find My Location\n                        </MaterialLink>\n                    </Typography>\n                </BrowserView>\n                <MobileView>\n                    <MaterialLink onClick={() => findLocationAndRedirect(country, history)} className={classes.gpsIcon}>\n                        <GpsFixedIcon target=\"_blank\" fontSize=\"large\" className={classes.gpsIcon}/>\n                    </MaterialLink>\n                </MobileView>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst findLocationAndRedirect = async (country, history) => {\n    const countyDescr = await fetchPrecisePoliticalLocation();\n    const newCountyObj = makeCountyFromDescription(country, countyDescr);\n    const params = new URLSearchParams(history.location.search);\n    const to = newCountyObj.routeTo() + \"?\" + params.toString();\n    history.push(to);\n}\n\nexport { SearchBox }\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nimport contributers from './data/contributors.json'\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        display: 'block',\n        padding: '1vh'\n    }\n}));\n\nconst CreditPopover = props => {\n    const classes = useStyles();\n\n    const list = contributers.map(element => {\n        return \" \" + element.name\n    });\n\n    return (\n      <Typography variant='body2' color='textSecondary' className={classes.typography}>\n        {list.toString().substring(1, list.toString().length - 1)}\n      </Typography>\n    );\n}\n\nexport default CreditPopover;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\n\nconst DataCreditWidget = (props) => {\n  const sources = [{\n    label: \"Johns Hopkins CSSE\",\n    url: \"https://github.com/CSSEGISandData/COVID-19\",\n  }, {\n    label: \"Wikipedia county info\",\n    url: \"https://en.wikipedia.org/wiki/User:Michael_J/County_table\",\n  }, {\n    label: \"Homeland Infrastructure Foundation-Level Data (HIFLD)\",\n    url: \"https://hifld-geoplatform.opendata.arcgis.com/search?groupIds=2900322cc0b14948a74dca886b7d7cfc\",\n  }, {\n    label: \"Covid tracking API\",\n    url: \"https://covidtracking.com/api/\",\n  }, {\n    label: \"Wikidata query for country and region data\",\n    url: \"https://w.wiki/QJc\",\n  }, {\n    label: \"Wikidata query for stay-at-home orders\",\n    url: \"https://w.wiki/LeZ\",\n  }, {\n    label: \"BNO News\",\n    url: \"https://bnonews.com/index.php/2020/04/the-latest-coronavirus-cases/\",\n  }, {\n    label: \"The Institute for Health Metrics and Evaluation\",\n    url: \"http://www.healthdata.org/covid/data-downloads\",\n  }, {\n    label: \"MSA definition from NLSInfo.org\",\n    url: \"https://www.nlsinfo.org/usersvc/NLSY97/NLSY97Rnd9geocodeCodebookSupplement/gatt101.htm\",\n  }, {\n    label: \"Local Health Departments from Naccho.org\",\n    url: \"https://www.naccho.org/membership/lhd-directory\",\n  }, {\n    label: \"CDC\",\n    url: \"https://www.cdc.gov/\",\n  }, {\n    label: \"HealthData.Gov\",\n    url: \"https://healthdata.gov/dataset/covid-19-diagnostic-laboratory-testing-pcr-testing-time-series\",\n  },\n  ];\n  sources.sort((a, b) => a.label < b.label ? -1 : 1);\n\n  return (\n    <div>\n      <Typography variant=\"body1\">\n        We are incredibly grateful to people working hard to make their data available.\n      </Typography>\n\n      <Typography variant=\"body2\" >\n        {sources.map(({ label, url }) => (\n          <li key={url}>\n            <a target=\"_blank\" href={url} rel=\"noopener noreferrer\">{label}</a>\n          </li>\n        ))}\n      </Typography>\n    </div>\n  );\n};\n\nexport { DataCreditWidget };\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Popover from '@material-ui/core/Popover';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n}));\n\nconst DialogTitle = (props) => {\n    const classes = useStyles()\n\n    const { children, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose\n                ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>)\n                : null\n            }\n        </MuiDialogTitle>\n    );\n};\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst asDialogue = (Component, title, open, handleClose, buttonText = false) => {\n\n    return (\n        <Dialog maxWidth=\"md\" fullWidth={true} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n            <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                {title}\n            </DialogTitle>\n            <DialogContent dividers>\n                <Component/>\n            </DialogContent>\n            {buttonText\n                ? <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        {buttonText}\n                    </Button>\n                  </DialogActions>\n                : null\n            }\n\n        </Dialog>\n  );\n}\n\nconst asPopOver = (\n    Component,\n    open,\n    anchorEl,\n    handleClose,\n    props = {\n        anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'left'\n        },\n        transformOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n        }\n    }) => {\n    return (\n        <Popover\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            {...props}\n        >\n            <Component />\n        </Popover>\n    )\n}\n\nexport { asDialogue, asPopOver }\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link as MaterialLink } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport CreditPopover from './CreditHover'\nimport { DataCreditWidget } from \"./graphs/DataCredit\"\nimport { asDialogue } from \"./FooterDialogue\"\n\nconst useStyles = makeStyles(theme => ({\n    topContainer: {\n        marginTop: '2vh',\n        paddingBottom: '2vh',\n    },\n    footerLink: {\n        textAlign: 'center',\n    },\n    linkContainer: {\n        padding: '1vh'\n    },\n    iconRoot: {\n        textAlign: 'center',\n    },\n    githubIcon: {\n        color: '#00aeef',\n        margin: '0 auto',\n    },\n    creditParagraph: {\n        textAlign: 'center',\n        display: 'block',\n        padding: '1vh'\n    },\n}));\n\nconst Footer = (props) => {\n    const classes = useStyles();\n\n    const footerLinkProps = {\n        variant: 'button',\n        className: classes.footerLink,\n        color: 'textSecondary'\n    };\n    const footerLinks = [\n        [\"Terms of Service\", (event) => window.location.href=\"https://docs.google.com/document/d/10bsmpX1VVi2myFAHtP_gqHeGauDHz_9t1YQnjxMc_ng/edit?usp=sharing\"],\n        [\"Data Credits\", (event) => handleClick(event, 'data-cred')]\n    ];\n\n    const [openedPopoverId, setOpenedPopoverId] = React.useState(null);\n    const handleClick = (event, popoverId) => {\n        event.preventDefault();\n        setOpenedPopoverId(popoverId);\n    };\n    const handleClose = () => {\n        setOpenedPopoverId(null);\n    }\n\n    return (\n        <Grid container className={classes.topContainer} justify=\"space-evenly\" alignItems=\"center\" direction=\"row\" >\n            <Grid item xs={12} sm={1} />\n            <Grid item container xs={12} sm={4} className={classes.linkContainer} justify=\"center\" direction=\"column\">\n                {footerLinks.map(linkPair => {\n                    return (<MaterialLink {...footerLinkProps} key={linkPair[0]} href=\"#\" onClick={linkPair[1]}>{linkPair[0]}</MaterialLink>)\n                })}\n            </Grid>\n            <Grid item xs={12} sm={2}>\n                <Grid container justify=\"center\" className={classes.iconRoot}>\n                    <Grid item xs={3} sm={6}>\n                        <MaterialLink href=\"https://github.com/xunhuang/covid-19\" className={classes.githubIcon}>\n                            <GitHubIcon fontSize=\"large\" />\n                        </MaterialLink>\n                    </Grid>\n                    <Grid item xs={3} sm={6}>\n                        <MaterialLink href=\"https://www.facebook.com/groups/890203761415663\" className={classes.githubIcon}>\n                            <FacebookIcon fontSize=\"large\" />\n                        </MaterialLink>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <Typography variant='caption' color='textSecondary' className={classes.creditParagraph}>\n                    This website is is 100% volunteer developed, open source and funded by user donations.\n                    Click <MaterialLink href=\"#\" onClick={(e) => handleClick(e, 'cred-popover')}>here for volunteers</MaterialLink> that\n                    made significant contributions.\n                </Typography>\n                {asDialogue(CreditPopover, \"Special Thanks To\", openedPopoverId === 'cred-popover', handleClose)}\n                {asDialogue(DataCreditWidget, \"Data Credits\", openedPopoverId === 'data-cred', handleClose)}\n            </Grid>\n            <Grid item xs={12} sm={1} />\n        </Grid>\n    );\n\n}\n\nexport { Footer }\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from '@material-ui/core';\n\nconst DONATION_URL = \"https://ko-fi.com/covid19direct\";\n\nexport const DonateLink = (props) => {\n  return (\n    <Link target=\"_blank\" href={DONATION_URL} className={props.className}>\n      {props.message || 'Buy Us A Coffee'}\n    </Link>\n  );\n}\n\nDonateLink.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {useLocation} from 'react-router-dom'\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  TwitterShareButton,\n  RedditShareButton,\n  WhatsappShareButton,\n  EmailIcon,\n  RedditIcon,\n  FacebookIcon,\n  TwitterIcon,\n  WhatsappIcon,\n} from \"react-share\";\n\nconst QUOTE = \"Best real-time county-level COVID-19 dashboard. Get the latest trends about cases, recovery, testing and hospitalization as well as resources for mental health and well-being.\";\n\nexport const SocialMediaButtons = (props) => {\n  const location = useLocation();\n\n  let url;\n  if (props.url) {\n    url = props.url;\n  } else {\n    url = 'https://covid-19.direct' + location.pathname;\n  }\n\n  const bgStyle = {};\n  if (props.backgroundColor) {\n    bgStyle.fill = props.backgroundColor;\n  }\n\n  return (\n    <div className={props.className}>\n      {[\n        [FacebookShareButton, FacebookIcon],\n        [TwitterShareButton, TwitterIcon],\n        [RedditShareButton, RedditIcon],\n        [WhatsappShareButton, WhatsappIcon],\n        [EmailShareButton, EmailIcon],\n      ].map(([Button, Icon], i) => (\n        <Button className={props.buttonClassName} url={url} quote={QUOTE} key={i}>\n          <Icon\n              size={props.size || '1em'}\n              round={true}\n              bgStyle={bgStyle}\n              iconFillColor={props.iconColor}\n          />\n        </Button>\n      ))}\n    </div>\n  );\n};\n\nSocialMediaButtons.propTypes = {\n  backgroundColor: PropTypes.string,\n  buttonClassName: PropTypes.string,\n  className: PropTypes.string,\n  iconColor: PropTypes.string,\n  quote: PropTypes.string,\n  size: PropTypes.any,\n  url: PropTypes.string,\n};\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"./CountryContext\";\nimport Disqus from \"disqus-react\"\nimport { MyTabs } from \"./MyTabs.js\";\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FacebookProvider, Comments } from 'react-facebook';\nimport { useHistory } from \"react-router-dom\";\nimport { Link as MaterialLink } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport { SectionHeader } from \"./CovidUI\"\nimport { withRouter } from 'react-router-dom'\nimport { Link as RouterLink } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { MentalHealthResourceSection } from './MentalHealthTab';\nimport { SearchBox } from './SearchBox';\nimport { Footer } from './Footer'\nimport { DonateLink } from './components/chrome/DonateLink';\nimport { SocialMediaButtons } from './components/chrome/SocialMediaButtons';\n\nconst Cookies = require(\"js-cookie\");\nconst moment = require(\"moment\");\n\nconst NewsData = require(\"./data/news.json\");\nconst WhatsNewData = require(\"./data/whatsnew.json\");\n\nconst useStyles = makeStyles(theme => ({\n  topContainer: {\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  row: {\n    alignItems: 'baseline',\n    padding: 5,\n  },\n  title: {\n    display: 'block',\n    padding: 2,\n    paddingRight: 10,\n    margin: 2,\n  },\n  tagline: {\n    display: 'flex',\n    padding: 0,\n    paddingTop: 10,\n    paddingRight: 10,\n    margin: 0,\n    alignSelf: \"flex-start\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  keepclam: {\n    display: 'block',\n    color: '#FFFFFF',\n    background: '#00aeef',\n    borderRadius: 0,\n    padding: 2,\n    margin: 2,\n  },\n  searchContainer: {\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  qpContainer: {\n    display: 'none',\n    background: '#e3e3e3',\n    borderWidth: \"1px\",\n    padding: 15,\n    margin: 15,\n  },\n  qpBox: {\n    display: 'flex',\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n  grow: {\n    flex: 1,\n  },\n  supportUs: {\n    padding: 2,\n    margin: 2,\n  },\n  buyUsACoffee: {\n    padding: 2,\n    margin: 2,\n    background: '#00aeef',\n    borderRadius: 15,\n    justifyContent: \"center\",\n    display: \"flex\",\n    color: \"white\",\n  },\n  newsDate: {\n    margin: 6,\n  },\n  newsTitle: {\n    margin: 4,\n  },\n  commentPaper: {\n    overflow: 'auto',\n    width: '97%',\n    padding: 10,\n    display: 'block',\n    margin: '0 auto',\n    maxHeight: \"80vh\",\n  }\n}));\n\nconst WhatsNewSection = (props) => {\n  const classes = useStyles();\n  const data =\n    WhatsNewData.sort((a, b) => moment(b.Date, \"MM/DD/YYYY\").toDate() - moment(a.Date, \"MM/DD/YYYY\").toDate())\n      .slice(0, 5);\n  return <div>\n    <SectionHeader>\n      <Typography variant=\"h5\" noWrap>\n        What's New On Covid-19.Direct\n             </Typography>\n    </SectionHeader>\n    {data.map((item, i) =>\n      <Grid container wrap=\"nowrap\" key={item.Feature}>\n        <Grid item className={classes.newsDate}>\n          <div>{moment(item.Date, \"MM/DD/YYYY\").format(\"M/D\")}</div>\n        </Grid>\n        <Grid item className={classes.newsTitle}>\n          <Typography variant=\"body1\" noWrap>\n            {(item.Link &&\n              <MaterialLink to={item.Link} component={RouterLink}>\n                {item.Feature}\n              </MaterialLink>) ||\n              item.Feature}\n          </Typography>\n\n          <Typography variant=\"body2\" noWrap>\n            {item.commentary}\n          </Typography>\n        </Grid>\n      </Grid >\n    )}\n  </div >;\n};\n\nconst NewsSection = (props) => {\n  const classes = useStyles();\n  const data =\n    NewsData.sort((a, b) => moment(b.Date, \"MM/DD/YYYY\").toDate() - moment(a.Date, \"MM/DD/YYYY\").toDate())\n      .slice(0, 10);\n  return <div>\n    <SectionHeader id=\"news\">\n      <Typography variant=\"h5\" noWrap>\n        News\n             </Typography>\n    </SectionHeader>\n    {data.map((item, i) =>\n      <Grid container alignItems=\"center\" wrap=\"nowrap\" key={item.link}>\n        <Grid item className={classes.newsDate}>\n          <div>{moment(item.Date, \"MM/DD/YYYY\").format(\"M/D\")}</div>\n        </Grid>\n        <Grid item className={classes.newsTitle}>\n          <a href={item.link}> {item.Title}</a>\n        </Grid>\n      </Grid >\n    )}\n  </div >;\n};\n\nconst DonateButton = (props) => {\n  const classes = useStyles();\n  return (\n    <Typography noWrap variant=\"body2\" className={classes.buyUsACoffee}>\n      <DonateLink className={classes.buyUsACoffee} />\n    </Typography>);\n}\n\nconst Banner = withRouter((props) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const country = useContext(CountryContext);\n  const [showNews] = React.useState(false);\n\n  const us_summary = country.summary();\n  const url_shared =\n    \"https://covid-19.direct\" +\n    props.match.url +\n    history.location.search;\n  return (\n    <div>\n      <div className={classes.topContainer}>\n        <span className={classes.title}>\n          <Typography variant=\"h6\" >\n            COVID-19.direct\n            </Typography>\n          <SocialMediaButtons\n            className={classes.socialMediaRow}\n            url={url_shared}\n            size={32}\n          />\n          <Typography variant=\"body2\" noWrap>\n            Updated: {moment(us_summary.generatedTime).format('lll')}\n          </Typography>\n        </span>\n        <span className={classes.grow}></span>\n        {/* <span className={classes.keepclam}> Keep Clam, #StayHome</span> */}\n        <span className={classes.tagline}>\n          {/* <Typography variant=\"body1\" >\n            this too shall pass\n          </Typography> */}\n          <DonateButton />\n          {/* <MaterialLink variant=\"body1\" to=\"/country/\" component={RouterLink} >\n            Beta: Rest of World\n          </MaterialLink>\n */}\n        </span>\n      </div >\n      {showNews &&\n        <WhatsNewSection />\n      }\n    </div >\n  );\n});\n\nconst QPArea = (props) => {\n  const QPID = \"qpid_metro3\";\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(Cookies.get(QPID) === undefined);\n\n  const handleClose = (qpid) => {\n    Cookies.set(qpid, 1, 10000);\n    setOpen(false);\n  }\n\n  if (!open) {\n    return null;\n  }\n\n  return <div className={classes.qpContainer}>\n    <div className={classes.qpBox} >\n      <div>\n        We added NYC and Bay Area as a \"Metro\" area with multiple counties. What new metro areas\n        should we include?\n                    <MaterialLink href=\"#discussion\">\n          Make a suggestion here.\n                    </MaterialLink>\n      </div>\n      <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => { handleClose(QPID) }}>\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  </div>\n}\n\nconst withHeader = (comp, props) => {\n\n  const disqusShortname = \"covid19direct\";\n  const disqusConfig = {\n    url: \"https://covid-19.direct\",\n    identifier: \"article-id\",\n    title: \"main page\"\n  };\n\n  const donationPageUrl = \"https://www.gofundme.com/f/covid19direct-operating-cost\";\n\n  return (props) => {\n    const classes = useStyles();\n    let component = comp({\n      // add addition things here\n      ...props,\n    });\n    let healthDiscussion = <div>\n      <SectionHeader>\n        <Typography variant=\"h5\" noWrap>\n          Resources\n                    </Typography>\n      </SectionHeader>\n      <MentalHealthResourceSection />\n      <SectionHeader id=\"discussion\">\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h5\" noWrap id=\"discussion\">\n              Discussions\n                    </Typography>\n          </Grid>\n          <Grid item xs />\n          <Grid item>\n            <Typography noWrap variant=\"body2\" className={classes.supportUs}>\n              <MaterialLink target=\"_blank\" href={donationPageUrl}>\n                Like our site? Support us!\n                        </MaterialLink>\n            </Typography>\n          </Grid>\n        </Grid>\n      </SectionHeader>\n      <Paper elevation={3} className={classes.commentPaper}>\n        <MyTabs\n          labels={['Disqus', 'FB Comments']}\n          urlQueryKey=\"discussions\"\n          urlQueryValues={['disqus', 'facebook']}\n          tabs={[\n            (\n              <Disqus.DiscussionEmbed\n                shortname={disqusShortname}\n                config={disqusConfig}\n              />\n            ), (\n              <FacebookProvider appId=\"201788627783795\">\n                <Comments href=\"https://covid-19.direct/\" />\n              </FacebookProvider>\n            )\n          ]}\n        />\n      </Paper>\n    </div>;\n\n    let header = <header className=\"App-header\">\n      <Banner />\n      <QPArea />\n      <div className={classes.searchContainer}>\n        <SearchBox />\n      </div>\n      {component}\n      {false && <NewsSection />}\n      {healthDiscussion}\n      <Footer />\n    </header >\n\n    return header;\n  }\n};\n\n\nexport { withHeader }\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { myShortNumber } from \"./Util.js\";\nimport { withRouter } from 'react-router-dom'\nimport { Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles(theme => ({\n    tagSticky: {\n        backgroundColor: \"#FFFFFF\",\n        position: \"sticky\",\n        top: 0,\n        left: 0,\n        zIndex: \"1\",\n    },\n    tagContainer: {\n        padding: theme.spacing(1, 1, 0, 1),\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        // margin: '24px 0',\n    },\n    tagContainerNoBeds: {\n        flexWrap: \"nowrap\",\n    },\n    row: {\n        padding: theme.spacing(1, 1),\n        justifyContent: \"space-between\",\n        display: \"flex\",\n    },\n    rowNoBeds: {\n        justifyContent: \"center\",\n    },\n    tag: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        backgroundColor: \"#f3f3f3\",\n        borderRadius: 10,\n        flexGrow: \"1\",\n        margin: 3,\n        color: \"black\",\n        textDecoration: \"none\",\n    },\n    tagSelected: {\n        color: \"#FFFFFF\",\n        backgroundColor: \"#00aeef\",\n    },\n    tagTitle: {\n        marginTop: 5,\n    },\n    tagSection: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        alignContent: \"flex-end\",\n    },\n    topTag: {\n        fontSize: \"0.5rem\",\n    },\n    smallTag: {\n        fontSize: \"0.5rem\",\n    },\n    mainTag: {\n        fontSize: \"1.0rem\",\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    table: {\n        width: \"100%\"\n    },\n    timestamp: {\n        // fontWeight: \"bold\",\n        padding: theme.spacing(0, 1),\n        textAlign: \"left\",\n    },\n    sectionHeader: {\n        \"border-left\": \".1rem solid #f50057\",\n        margin: 3,\n        padding: 3,\n    }\n}));\n\n\nconst USInfoTopWidget = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const squish = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const tags = [];\n    let cursor = props.source;\n    while (cursor) {\n        tags.push(cursor);\n        cursor = cursor.parent();\n    }\n\n    const showBeds = tags.length < 4 && !squish;\n\n    return <div className={classes.tagSticky} >\n        <div className={`${classes.tagContainer} ${showBeds ? '' : classes.tagContainerNoBeds}`}>\n            {tags.map(source =>\n                <Tag\n                    key={source.routeTo()}\n                    source={source}\n                    squish={squish}\n                    showBeds={showBeds}\n                />\n            )}\n        </div>\n    </div>;\n};\n\nconst Tag = withRouter((props) => {\n    const { source, history, match } = props;\n\n    let title;\n    if (!props.squish || !source.shortName) {\n        title = source.name;\n    } else {\n        title = source.shortName;\n    }\n\n    const routeTo = source.routeTo();\n    const selected = match.url === routeTo;\n    const summary = source.summary();\n    const hospitals = source.hospitals();\n\n    const params = new URLSearchParams(history.location.search);\n    const to = routeTo + \"?\" + params.toString();\n    const classes = useStyles();\n    return <Link className={`${classes.tag} ${selected ? classes.tagSelected : ''}`} to={to}>\n        <div className={classes.tagTitle}> {title} </div>\n        <div className={`${classes.row} ${props.showBeds ? '' : classes.rowNoBeds}`} >\n            <section className={classes.tagSection}>\n                <div className={classes.topTag}>\n                    +{myShortNumber(summary.newcases)}\n                </div>\n                <div className={classes.mainTag}>\n                    {myShortNumber(summary.confirmed)} </div>\n                <div className={classes.smallTag}>\n                    Confirmed </div>\n            </section>\n\n            {props.showBeds && <section className={classes.tagSection}>\n                <Typography className={classes.topTag} variant=\"body2\" noWrap >\n                    {myShortNumber(hospitals.count)} Hosp.\n                </Typography>\n                <div className={classes.mainTag}>\n                    {myShortNumber(hospitals.bedCount)}</div>\n                <div className={classes.smallTag}>\n                    Beds\n                </div>\n            </section>}\n        </div>\n    </Link>;\n});\n\nexport {\n    USInfoTopWidget,\n    // Tag,\n}\n","export default {\n  county: \"/county/:state/:county\",\n  data_credit: \"/credit/data\",\n  metro: \"/metro/:metro\",\n  region: \"/country/*\",\n  state: \"/state/:state\",\n  united_states: \"/US\",\n  united_states_map: \"/US/map\",\n  united_states_recovery: \"/US/Recovery\",\n};\n","const { linearRegression } = require('simple-statistics');\n\nconst moment = require('moment');\nconst log2 = (a) => Math.log(a) / Math.log(2);\n\n/* this includes the last day */\nfunction getGrowthRateLinearRegression(data, fips) {\n  const daysToDouble = getDoubleDays7DayLinearRegression(data, fips);\n  const slope = 1 / daysToDouble;\n  return Math.exp(Math.log(2) * slope) - 1;\n}\n\n/* this includes the last day */\nfunction getDoubleDays7DayLinearRegression(data, fips) {\n  let keys = Object.keys(data).sort((a, b) => moment(a, \"MM/DD/YYYY\").toDate() - moment(b, \"MM/DD/YYYY\").toDate());\n  if (keys.length < 7) {\n    return null;\n  }\n  const key7days = keys.slice(-7);\n  const firstday = moment(key7days[0], \"MM/DD/YYYY\");\n\n  const prepared_data = key7days.map(k => {\n    let delta = moment(k, \"MM/DD/YYYY\").diff(firstday, \"days\");\n    return [delta, log2(data[k])];\n  })\n  if (prepared_data[0][1] <= log2(10)) { // number too small tomake predictions\n    return null;\n  }\n  const { m, } = linearRegression(prepared_data);\n\n  let daysToDouble = 1 / m;\n  if (daysToDouble > 365) {\n    daysToDouble = 365;\n  }\n\n  return daysToDouble;\n}\n\nfunction processForTimeSeries(data, fn) {\n  let keys = getKeysSortedByDate(data);\n  if (keys.length < 7) {\n    return null;\n  }\n  let result = {};\n  for (let i = 0; i < keys.length - 6; i++) {\n    let set = keys.slice(i, i + 7);\n    let window = set.reduce((m, k) => {\n      m[k] = data[k];\n      return m;\n    }, {});\n    let daysToDouble = fn(window);\n    result[set[set.length - 1]] = daysToDouble;\n  }\n  return result;\n}\n\nfunction getDay2DoubleTimeSeries(data) {\n  return processForTimeSeries(data, getDoubleDays7DayLinearRegression);\n}\n\nfunction getGrowthRateTimeSeries(data) {\n  return processForTimeSeries(data, getGrowthRateLinearRegression);\n}\n\nfunction getKeysSortedByDate(data) {\n  return Object.keys(data)\n    .sort((a, b) => moment(a, \"MM/DD/YYYY\").toDate() - moment(b, \"MM/DD/YYYY\").toDate());\n}\n\nfunction trimLastDaysData(data) {\n  let keys = getKeysSortedByDate(data).slice(0, -1);\n  let window = keys.reduce((m, k) => {\n    m[k] = data[k];\n    return m;\n  }, {});\n  return window;\n}\n\nexport { trimLastDaysData, getDay2DoubleTimeSeries, getGrowthRateTimeSeries }","const superagent = require(\"superagent\");\n\nvar cached;\n\nasync function fetchNPRProjectionData() {\n    if (cached) {\n        return cached;\n    }\n    cached = superagent\n        .get(\"/data/npr_projection.json\")\n        .then(res => {\n            return res.body;\n        });\n    return cached;\n}\n\nexport { fetchNPRProjectionData }","const superagent = require(\"superagent\");\n\nvar cachedStates;\nvar cachedUS;\n\nconst testingUSURL = \"https://gowatchit.net/data/testing/USA.json\";\nconst testingUSStatesLastURL = \"https://gowatchit.net/data/testing/states-last.json\";\n\nfunction addfulldate(sourceData) {\n  let data = sourceData.map(t => {\n    let md = t.date % 10000;\n    let m = Math.floor(md / 100);\n    let d = md % 100;\n    t.name = `${m}/${d}`;\n\n    m = m.toString().padStart(2, \"0\");\n    d = d.toString().padStart(2, \"0\");\n    let y = Math.floor(t.date / 10000);\n\n    t.fulldate = `${m}/${d}/${y}`;\n\n    return t;\n  })\n  return data;\n}\n\nasync function fetchTestingDataStates(stateShortName) {\n  // if (cachedStates) {\n  // return cachedStates;\n  // }\n  cachedStates = superagent\n    .get(`https://gowatchit.net/data/testing/${stateShortName}.json`)\n    .then(res => {\n      return addfulldate(res.body);\n    });\n  return cachedStates;\n}\n\nasync function fetchTestingDataUS() {\n  if (cachedUS) {\n    return cachedUS;\n  }\n  cachedUS = superagent\n    .get(testingUSURL)\n    .then(res => {\n      return addfulldate(res.body);\n    });\n  return cachedUS;\n}\n\nexport async function fetchTestingDataStatesTable() {\n  if (cachedUS) {\n    return cachedUS;\n  }\n  cachedUS = superagent\n    .get(testingUSStatesLastURL)\n    .then(res => {\n      return addfulldate(res.body);\n    });\n  return cachedUS;\n}\n\nexport { fetchTestingDataStates, fetchTestingDataUS }\n","const superagent = require(\"superagent\");\n\nvar cachedStates;\nvar cachedUS;\n\nconst hospitalizationURL = \"https://gowatchit.net/data/hospitalization/USA.json\";\n\nfunction addfulldate(sourceData) {\n  let data = sourceData.map(t => {\n    let md = t.date % 10000;\n    let m = Math.floor(md / 100);\n    let d = md % 100;\n    t.name = `${m}/${d}`;\n\n    m = m.toString().padStart(2, \"0\");\n    d = d.toString().padStart(2, \"0\");\n    let y = Math.floor(t.date / 10000);\n\n    t.fulldate = `${m}/${d}/${y}`;\n    return t;\n  })\n  return data;\n}\n\nexport async function fetchHospitalizationDataStates(stateShortName) {\n  // if (cachedStates) {\n  // return cachedStates;\n  // }\n  cachedStates = superagent\n    .get(`https://gowatchit.net/data/hospitalization/${stateShortName}.json`)\n    .then(res => {\n      return addfulldate(res.body);\n    });\n  return cachedStates;\n}\n\nexport async function fetchHospitalizationDataUS() {\n  if (cachedUS) {\n    return cachedUS;\n  }\n  cachedUS = superagent\n    .get(hospitalizationURL)\n    .then(res => {\n      return addfulldate(res.body);\n    });\n  return cachedUS;\n}\n","const superagent = require(\"superagent\");\nconst moment = require('moment');\n\nfunction addfulldate(sourceData, datefield = \"Date\") {\n    let data = sourceData.map(t => {\n        t.fulldate = moment(t[datefield], \"YYYY-MM-DD\").format(\"MM/DD/YYYY\");\n        return t;\n    })\n    return data;\n}\n\nexport async function fetchVaccineDataStates(twoLetterStateShortname) {\n    let stateURL = `https://gowatchit.net/data/vaccine/${twoLetterStateShortname}.json`;\n    let rawData = superagent\n        .get(stateURL)\n        .then(res => {\n            return addfulldate(res.body);\n        });\n    return rawData;\n}\n\nexport async function fetchVaccineDataUS() {\n    let stateURL = `https://gowatchit.net/data/vaccine/USA.json`;\n    let rawData = superagent\n        .get(stateURL)\n        .then(res => {\n            return addfulldate(res.body);\n        });\n    return rawData;\n}\n\nexport async function fetchVaccineDataCounty(fips) {\n    let countyURL = `https://gowatchit.net/data/vaccine/counties/${fips}.json`;\n    let rawData = superagent\n        .get(countyURL)\n        .then(res => {\n            return addfulldate(res.body, \"date\");\n        });\n    return rawData;\n}","import { ma } from 'moving-averages'\nconst moment = require(\"moment\")\n\n/*\n* merge array on \"fulldate\" keys\n*    array1 = [{ fulldate: '12/22/2292\", field1: \"xxx\"} ]\n*    array2 = [{ fulldate: '12/22/2292\", field2: \"xxx\"} ]\n\n* Result\n*\n*    = [{fulldate: '12/22/2292\", field1:\"xxx\", field2: \"xxx\"} ]\n*/\n\nexport function mergeDataSeries(entry1, entry2) {\n  if (!entry2) {\n    return entry1;\n  }\n  let map1 = entry1.reduce((m, a) => {\n    m[a.fulldate] = a;\n    return m;\n  }, {});\n\n  for (let e2 of entry2) {\n    let mitem = map1[e2.fulldate] ?? {};\n    mitem = {\n      ...mitem,\n      ...e2,\n    };\n    map1[e2.fulldate] = mitem;\n  }\n  return Object.values(map1);\n}\n\nexport function makeDataSeriesFromTotal(data, key_total, key_daily, key_moving) {\n  let sorteddata = Object.keys(data).sort((a, b) => moment(a, \"MM/DD/YYYY\").toDate() - (moment(b, \"MM/DD/YYYY\")).toDate());\n  let m = [];\n\n  for (let date of sorteddata) {\n    let entry = data[date];\n    if (entry) {\n      let item = {}\n      item.fulldate = date;\n      item[key_total] = entry;\n      let lastday = moment(date, \"MM/DD/YYYY\").subtract(1, \"days\").format(\"MM/DD/YYYY\");\n      let lastentry = data[lastday];\n      if (lastentry !== null) {\n        item[key_daily] = entry - lastentry;\n        if (item[key_daily] < 0) {\n          item[key_daily] = 0; // really don't like this as this implies data error\n        }\n      }\n      m.push(item);\n    }\n  }\n\n  if (key_moving && m.length > 0) {\n    let moving = computeMovingAverage(m, key_daily, key_moving);\n    m = mergeDataSeries(m, moving);\n  }\n\n  return m;\n}\n\nfunction exportColumnValues(data, column) {\n  let result = [];\n  for (let i = 0; i < data.length; i++) {\n    let v = data[i][column];\n    if (isNaN(v)) {\n      v = 0;\n    }\n    result.push(v);\n  }\n  return result;\n}\n\nconst MOVING_WIN_SIZE = 7;\n\nexport function computeMovingAverage(data, key_daily, key_moving) {\n  let m = sortByFullDate(data);\n  let dailyvalues = exportColumnValues(m, key_daily);\n  let avg = ma(dailyvalues, MOVING_WIN_SIZE);\n  for (let i = 0; i < m.length; i++) {\n    m[i][key_moving] = avg[i];\n  }\n  return m;\n}\n\n/*\n[\n{fulldate: \"02/28/2020\", total: 9, testsThatDay: NaN, testsThatDay_avg: NaN}\n{fulldate: \"02/29/2020\", total: 18, testsThatDay: 9, testsThatDay_avg: NaN}\n{fulldate: \"03/01/2020\", total: 40, testsThatDay: 22, testsThatDay_avg: 14.666666666666666}\n{fulldate: \"03/02/2020\", total: 53, testsThatDay: 13, testsThatDay_avg: 27.333333333333332}\n{fulldate: \"03/03/2020\", total: 100, testsThatDay: 47, testsThatDay_avg: 343.6666666666667}\n: {fulldate: \"03/04/2020\", total: 1071, testsThatDay: 971, testsThatDay_avg: 463.3333333333333}\n: {fulldate: \"03/05/2020\", total: 1443, testsThatDay: 372, testsThatDay_avg: 780}\n: {fulldate: \"03/06/2020\", total: 2440, testsThatDay: 997, testsThatDay_avg: 640}\n]\n\nexportColumnFromDataSeries (data, \"total\") \n\n===> \n\n{ \n \"02/28/2020\", : 9, \n \"02/29/2020\" : 18, \n \"03/01/2020\" : 40\n ...\n}\n\n*/\nexport function exportColumnFromDataSeries(data, column) {\n  let ret = data.reduce((m, b) => {\n    m[b.fulldate] = b[column];\n    return m;\n  }, {})\n  return ret\n}\n\nexport function sortByFullDate(data) {\n  return data.sort((a, b) => moment(a.fulldate, \"MM/DD/YYYY\").toDate() - (moment(b.fulldate, \"MM/DD/YYYY\")).toDate());\n}","import ode45 from 'ode45-cash-karp';\nimport integral from 'integrate-adaptive-simpson';\nimport fmin from 'fmin';\nimport moment from 'moment';\n\n// %ODEFUN SIR model\nfunction getODE(par) {\n  var beta = par[0];\n  var gamma = par[1];\n  var N = par[2];\n  var I0 = par[3];\n  return function (dCdt, C, t) {\n    const c0 = I0 / N;\n    const c = C[0] / N;\n    dCdt[0] = N * (1 - c) * (beta * c + gamma * Math.log((1 - c) / (1 - c0)));\n  }\n}\n\n/* eslint-disable no-unused-vars */\n\nexport function fitVirusCV19(C, startdate) {\n  var date0 = 0;\n  var startdate_till_now = moment().diff(moment.unix(startdate), 'days');\n\n  // default values\n  const Nmax = 12e6;   // max. population size\n\n  // save original data\n  const date00 = date0;\n\n  // find start\n  const nmin = 5\n  var n0 = 0;\n  for (var n = 1; n < C.length; n++) {\n    if (C[n - 1] > C[n]) {\n      throw new Error('Invalid data C(n-1)>C(n)');\n    }\n    if (C[n] === C[n - 1]) {\n      n0 = n;\n      date0 = date0 + 1;\n      continue;\n    }\n    break;\n  }\n  if (n0 === C.length - 1) {\n    throw new Error('Constant data set');\n  }\n  C = C.slice(n0);\n  if (C.length < nmin) {\n    throw new Error('Data set to small');\n  }\n\n  // initial guess\n  while (true) {\n    var b0 = iniGuess(C);\n    if (b0.length === 0) {\n      if (C.length >= nmin) {\n        date0 = date0 + 1;\n        C = C.slice(1);\n        continue;\n      } else {\n        break;\n      }\n    }\n    break;\n  }\n\n  if (b0.length === 0) {\n    return;\n  }\n\n  // ... logistic curve parameters\n  const K0 = b0[0];\n  var r = b0[1];\n  const A = b0[2];\n  const C0 = K0 / (A + 1);\n\n  // ... initial guess\n  var I0 = C0;\n  var N = 2 * K0;\n  var gamma = 2 * r;\n  var beta = 1.5 * gamma;\n\n  // main calculation =======================================================%\n\n  // set infection rate and time intervals \n  const dC = diff(C).map((d) => d < 0 ? 0 : d);\n  const nday = C.length;\n  const tt = [...Array(nday - 1).keys()]; // 0:nday-1\n\n  // initial estimate\n  b0 = [beta, gamma, N, I0];\n\n  // calculate parameters\n\n  // automatic selection of weigths\n  var bmax = Nmax;\n  var b = [];\n  var w1, w2;\n  var bt, fmin, flag;\n  for (var i = 1; i <= 3; i++) {\n    switch (i) {\n      case 1:\n        w1 = 1;\n        w2 = 0;\n        break;\n      case 2:\n        w1 = 0;\n        w2 = 1;\n        break;\n      case 3:\n        w1 = 1;\n        w2 = 1;\n        break;\n      default:\n    }\n    [bt, fmin, flag] = parestWrapper(C, w1, w2)(b0);\n    if (bt.every((x) => x > 0) && bt[2] < bmax) {\n      b = bt;\n      bmax = b[2];\n    }\n  }\n\n  if (b.length === 0) {\n    b = bt;\n  }\n\n  // % unpack results\n  beta = b[0];\n  gamma = b[1];\n  N = b[2];\n  I0 = b[3];\n\n  //   % postprocessing ======================================================== %\n\n  //   %... final value\n  var Clim = calcClim(b);\n\n  //   %... value at inflection point\n  var Cm = calcCm(b);\n\n  //   % contact numer\n  var R0 = beta / gamma; //*(1 - I0/N);\n\n  //   % critical number of S\n  var Sc = gamma * N / beta;\n\n  //   %... parameters of logistic model approximation\n  r = beta - gamma;\n  var K = 2 * (beta - gamma) / (2 * beta - gamma) * N;\n  var t2 = Math.log(2) / r;\n\n  //   %... tangent slope in inflection point\n  var k = (N - Cm) * (beta * Cm / N + gamma * Math.log((N - Cm) / (N - I0)));\n  //   k = real(k);\n\n  //   %... acceleration time\n  var tau1 = Cm / k;\n\n  //   %... deceleration time\n  var tau2 = (Clim - Cm) / k;\n\n  //   %... total duration of accelerated phase\n  var tau = tau1 + tau2;\n\n  //   %... inflection time\n  var tm = calcTm(b, Cm);\n  //   tm = real(tm);\n\n  //   %... end time\n  var tend = calcTend(b, Clim);\n  var tend5 = calcTend(b, Clim, 5);\n\n  //   %... datums\n  //   if fdata   % new 20/04/30 MB\n  //       tp0 = date00;\n  //   else\n  //       tp0 = max(tm - tau1 - tau + date0,date00);\n  //   end\n  var tp0 = Math.max(tm - tau1 - tau + date0, date00);\n  var tp1 = (tm - tau1) + date0;  // begin acceleration\n  var tp2 = (tm) + date0;         // turning point\n  var tp3 = (tm + tau2) + date0;  // end deceleration\n  var tp4 = (tm + tau2) + tau / 2 + date0; // enter final phase\n  var tpend = tend + date0; // end time\n  var tpend5 = tend5 + date0; // end time    \n  //  % tp4 = 2*tm + date0; % enter final phase\n\n  //   %... dense forcast curve\n  var dt = 1; // 0.1;  We want it one per day\n  var ttm = Math.max(tm + 2 * tau, startdate_till_now + 1); // 20/04/02, 20/04/23\n  var tspan = makeTspan(0, dt, ttm);\n  var [t, Ca] = myOde45(getODE(b), tspan, [I0]);;\n\n\n  return [Ca, moment.unix(startdate).add(date0, 'days')];\n}\n/* eslint-enable no-unused-vars */\n\n// --------- HELPER FUNCTIONS ---------------------------------------------------------\n\nfunction myOde45(odefun, tspan, y0) {\n  const dt0 = 1e-3;\n  const t0 = tspan[0];\n  const integrator = ode45(y0, odefun, t0, dt0, { 'tol': 1e-6 });\n  const t = [];\n  const C = [];\n  tspan.forEach(tmax => {\n    while (integrator.step(tmax)) { }\n    t.push(integrator.t)\n    C.push(integrator.y[0])\n  }\n  );\n  return [t, C];\n}\n\nfunction makeTspan(tmin, dt, tmax) {\n  tmax = Math.floor(tmax / dt) * dt;\n  const tspan = [];\n  for (var t = tmin; t <= tmax; t += dt) {\n    tspan.push(t);\n  }\n  return tspan;\n}\n\nfunction parestWrapper(C, w1, w2) {\n  return function (b0) {\n    const fun = function (par) {\n      // upack parameter\n      const I0 = [par[3]];\n\n      // set time span\n      const tspan = makeTspan(0, 1, C.length - 1);\n\n      // solve ODE\n      try {\n        var [tsol, Csol] = myOde45(getODE(par), tspan, I0);;\n        // [tsol,Csol] = ode45(@(t,y) odeFun(t,y,par), tspan, I0);\n      } catch (e) {\n        return NaN;\n      }\n\n      // % check if calculation time equals sample time\n      if (tsol.length !== tspan.length) {\n        return NaN;\n      }\n\n      // % clean data MB 20/04/23\n      var Cc = [];\n      var Csol_new = [];\n      for (var i = 0; i < C.length; i++) {\n        if (!isNaN(C[i])) {\n          Cc.push(C[i]);\n          Csol_new.push(Csol[i]);\n        }\n      }\n\n      // % calculate optimization function\n      const c1 = w1 / (w1 + w2);\n      const c2 = w2 / (w1 + w2);\n      var f1 = 0;\n      var f2 = 0;\n      if (c2 > 0) {\n        f2 = norm(vec_subtraction(diff(Cc), diff(Csol)));\n      }\n      if (c1 > 0) {\n        f1 = norm(vec_subtraction(Cc, Csol));\n      }\n      return c1 * f1 + c2 * f2;\n    }\n    // [b, fmin,flag] = fminsearch(@fun, b0, options);\n    return fminsearch(fun, b0);\n  }\n}\n\nfunction fminsearch(fun, b0) {\n  const res = fmin.nelderMead(fun, b0);\n  return [res.x, res.fx, 0]\n}\n\n// PAREST Parameter estimation\n// function [b,fmin,flag] = parest(b0)\n//     global maxnum\n\n//     warning('on')\n//     if ~isempty(maxnum)\n//         options = optimset('Display','off','MaxIter',maxnum,...\n//             'MaxFunEvals',maxnum);\n//     else\n//         options = optimset('Display','off');\n//     end\n//     [b, fmin,flag] = fminsearch(@fun, b0, options);\n//     warning('off')\n// end\n\n// // FUN Optimization function\n// function optimizationFun(par) {\n//     global C %dC\n//     global w1 w2\n\n//     % upack parameter\n// \tI0 = par(4);\n\n//     % set time span\n//     tspan = 0:length(C)-1;  \n\n//     % solve ODE\n//     try\n//         warning('off')\n//         [tsol,Csol] = ode45(@(t,y) odeFun(t,y,par), tspan, I0);\n//         warning('on')\n//     catch\n//         f = NaN;\n//         warning('on')\n//         return\n//     end\n\n//     % check if calculation time equals sample time\n//     if length(tsol) ~= length(tspan)\n//         f = NaN;\n//         return\n//     end\n\n//     % clean data MB 20/04/23\n//     Cc = C;\n//     Cc(isnan(C)) = [];\n//     Csol(isnan(C)) = [];\n//     Cc = Cc';\n\n//     % calculate optimization function\n//     c1 = w1/(w1 + w2);\n//     c2 = w2/(w1 + w2);\n//     f1 = 0;\n//     f2 = 0;\n//     if c2 > 0\n//         f2 = norm((diff(Cc) - diff(Csol)));\n//     end\n//     if c1 > 0\n//         f1 = norm((Cc - Csol));\n//     end\n//     f =  c1*f1  +  c2*f2;   \n// }\n\nfunction vec_subtraction(v1, v2) {\n  if (v1.length !== v2.length) {\n    return NaN;\n  }\n  const v = [];\n  for (var i = 0; i < v1.length; i++) {\n    v.push(v1[i] - v2[i]);\n  }\n  return v;\n}\n\nfunction diff(C) {\n  var dC = [];\n  for (var i = 1; i < C.length; i++) {\n    dC.push(C[i] - C[i - 1]);\n  }\n  return dC;\n}\n\nfunction norm(C) {\n  var sum = 0;\n  for (var i = 0; i < C.length; i++) {\n    sum += C[i] * C[i];\n  }\n  return Math.sqrt(sum);\n}\n\nfunction calcClim(par) {\n  // %CALCCLIM Calculate number of recoverd individuals after t=inf\n  const beta = par[0];\n  const gamma = par[1];\n  const N = par[2];\n  const I0 = par[3];\n  return calcEndPoint(beta, gamma, I0 / N) * N;\n}\n\nfunction calcCm(par) {\n  // %CALCCM Calculate number of cases at inflection point\n  const beta = par[0];\n  const gamma = par[1];\n  const N = par[2];\n  const I0 = par[3];\n  return calcInflectionPoint(beta, gamma, I0 / N) * N;\n}\n\n// %CALCTM Calculate peak time\nfunction calcTm(par, Cm) {\n  const fun = function (c) {\n    const tt = (1 - c) * (beta * c + gamma * Math.log((1 - c) / (1 - c0)));\n    return 1. / tt;\n  }\n  const beta = par[0];\n  const gamma = par[1];\n  const N = par[2];\n  const c0 = par[3] / N;\n  return integral(fun, c0, Cm / N);\n}\n\n// function res = calcTend(par,Clim,nn)\n// %CALCTM Calculate end time\nfunction calcTend(par, Clim, nn) {\n  nn = nn || 1;  // number of infected left\n\n  const fun = function (c) {\n    const tt = (1 - c) * (beta * c + gamma * Math.log((1 - c) / (1 - c0)));\n    return 1. / tt;\n  }\n  const beta = par[0];\n  const gamma = par[1];\n  const N = par[2];\n  const c0 = par[3] / N;\n  return integral(fun, c0, (Clim - nn) / N);\n}\n\nfunction calcEndPoint(beta, gamma, c0) {\n  // %CALCENDPOINT Calculate end density \n  return 1 + gamma / beta * flambertw(-beta * (1 - c0) * Math.exp(-beta / gamma) / gamma);\n}\n\nfunction calcInflectionPoint(beta, gamma, c0) {\n  // %CALCINFLECTIONPOINT Calculate inflection point for density curve\n  return 1 + (gamma / 2 / beta) * flambertw(-1, -2 * beta * (1 - c0) * Math.exp(-(1 + beta / gamma)) / gamma);\n}\n\n// INIGUESS Initial guess for logistic regression\n// calculate initial K, r, A using data from three equidistant points \n//\n// Input:\n//   C -- data\n//\n// Output:\n//   b0 -- initial guess = [K r A]' or [] if calculation fails\nfunction iniGuess(C) {\n  var b0 = [];\n  const n = C.length;\n\n  if (n <= 5) {\n    return b0;\n  }\n\n  const nmax = n - 5;\n\n  for (var i = 1; i <= nmax; i++) {\n    var k1, k2, k3;\n    // calculate time interval for equidistant points: k-2*m, k-m, k\n    if (((n - i + 1) % 2) === 0) {\n      k1 = i;\n      k3 = n - 1;\n    } else {\n      k1 = i;\n      k3 = n;\n    }\n    k2 = (k1 + k3) / 2;\n    const m = k2 - k1 - 1;\n\n    if (k1 < 1 || k2 < 1 || k3 < 1 || m < 1) {\n      break;\n    }\n\n    if (isNaN(C[k1 - 1]) || isNaN(C[k2 - 1]) || isNaN(C[k3 - 1])) {\n      continue;\n    }\n\n    // % calculate K, r, A ...\n\n    // %.. calculate K\n    const q = C[k2 - 1] ** 2 - C[k3 - 1] * C[k1 - 1];\n    if (q <= 0) {\n      // fprintf('***Warning: iniGuess q = %g  k1 = %d k2= %d k3 = %d \\n',...\n      //          q, k1, k2, k3)\n      continue;\n    }\n    const p = C[k1 - 1] * C[k2 - 1] - 2 * C[k1 - 1] * C[k3 - 1] + C[k2 - 1] * C[k3 - 1];\n    if (p <= 0) {\n      // fprintf('***Warning: iniGuess p = %g\\n',p)\n      continue;\n    }\n    const K = C[k2 - 1] * p / q;\n\n    // % ... calculate r\n    const r = Math.log(C[k3 - 1] * (C[k2 - 1] - C[k1 - 1]) / C[k1 - 1] / (C[k3 - 1] - C[k2 - 1])) / m;\n    if (r < 0) {\n      // fprintf('***Warning: iniGuess r = %g\\n',r)\n      continue;\n    }\n\n    // %... calculate A\n    const A = (C[k3 - 1] - C[k2 - 1]) * (C[k2 - 1] - C[k1 - 1]) / q * (C[k3 - 1] * (C[k2 - 1] - C[k1 - 1]) / C[k1 - 1] / (C[k3 - 1] - C[k2 - 1])) ** ((k3 - m) / m);\n    if (A <= 0) {\n      //     %   fprintf('***Warning: iniGuess A = %g\\n',r)\n      continue;\n    }\n\n    // % this is initial guess\n    b0 = [K, r, A];\n    break;\n  }\n  return b0;\n}\n\nfunction flambertw(n, x) {\n  // The lambert-w-function doesn't work for numbers less than e so manually replicating the fitVirusCV19 code\n  if (typeof (x) === \"undefined\") {\n    x = n;\n    n = 0;\n  }\n\n  const zmax = 1e6;\n  const z0 = -1 / Math.exp(1) + 10 * Number.EPSILON;  // This Epsilon matches the one in MATLAB\n\n  const fun = (y) => y * Math.exp(y) - x;\n\n  switch (n) {\n    case -1:\n      if (x < z0 || x > 0) {\n        return NaN;\n      } else if (x === 0) {\n        return Number.POSITIVE_INFINITY;\n      } else if (x < 0) {\n        return fzero(fun, [-zmax, -1]);\n      }\n      break;\n    case 0:\n      if (x < z0) {\n        return NaN;\n      } else if (x === 0) {\n        return 0;\n      } else if (x < 0) {\n        return fzero(fun, [-1, 0]);\n      } else {\n        return fzero(fun, [0, zmax]);\n      }\n    default:\n      throw new Error('**flamberw: invalid n');\n  }\n}\n\nfunction fzero(fun, range) {\n  return uniroot(fun, range[0], range[1]);\n}\n\n// From https://gist.github.com/borgar/3317728\n/**\n * Searches the interval from <tt>lowerLimit</tt> to <tt>upperLimit</tt>\n * for a root (i.e., zero) of the function <tt>func</tt> with respect to\n * its first argument using Brent's method root-finding algorithm.\n *\n * Translated from zeroin.c in http://www.netlib.org/c/brent.shar.\n *\n * Copyright (c) 2012 Borgar Thorsteinsson <borgar@borgar.net>\n * MIT License, http://www.opensource.org/licenses/mit-license.php\n *\n * @param {function} function for which the root is sought.\n * @param {number} the lower point of the interval to be searched.\n * @param {number} the upper point of the interval to be searched.\n * @param {number} the desired accuracy (convergence tolerance).\n * @param {number} the maximum number of iterations.\n * @returns an estimate for the root within accuracy.\n *\n */\nfunction uniroot(func, lowerLimit, upperLimit, errorTol, maxIter) {\n  var a = lowerLimit\n    , b = upperLimit\n    , c = a\n    , fa = func(a)\n    , fb = func(b)\n    , fc = fa\n    , tol_act   // Actual tolerance\n    , new_step  // Step at this iteration\n    , prev_step // Distance from the last but one to the last approximation\n    , p         // Interpolation step is calculated in the form p/q; division is delayed until the last moment\n    , q\n    ;\n\n  errorTol = errorTol || 0;\n  maxIter = maxIter || 1000;\n\n  while (maxIter-- > 0) {\n\n    prev_step = b - a;\n\n    if (Math.abs(fc) < Math.abs(fb)) {\n      // Swap data for b to be the best approximation\n      a = b;\n      b = c;\n      c = a;\n      fa = fb;\n      fb = fc;\n      fc = fa;\n    }\n\n    tol_act = 1e-15 * Math.abs(b) + errorTol / 2;\n    new_step = (c - b) / 2;\n\n    if (Math.abs(new_step) <= tol_act || fb === 0) {\n      return b; // Acceptable approx. is found\n    }\n\n    // Decide if the interpolation can be tried\n    if (Math.abs(prev_step) >= tol_act && Math.abs(fa) > Math.abs(fb)) {\n      // If prev_step was large enough and was in true direction, Interpolatiom may be tried\n      var t1, cb, t2;\n      cb = c - b;\n      if (a === c) { // If we have only two distinct points linear interpolation can only be applied\n        t1 = fb / fa;\n        p = cb * t1;\n        q = 1.0 - t1;\n      }\n      else { // Quadric inverse interpolation\n        q = fa / fc; t1 = fb / fc; t2 = fb / fa;\n        p = t2 * (cb * q * (q - t1) - (b - a) * (t1 - 1));\n        q = (q - 1) * (t1 - 1) * (t2 - 1);\n      }\n\n      if (p > 0) {\n        q = -q;  // p was calculated with the opposite sign; make p positive\n      }\n      else {\n        p = -p;  // and assign possible minus to q\n      }\n\n      if (p < (0.75 * cb * q - Math.abs(tol_act * q) / 2) &&\n        p < Math.abs(prev_step * q / 2)) {\n        // If (b + p / q) falls in [b,c] and isn't too large it is accepted\n        new_step = p / q;\n      }\n\n      // If p/q is too large then the bissection procedure can reduce [b,c] range to more extent\n    }\n\n    if (Math.abs(new_step) < tol_act) { // Adjust the step to be not less than tolerance\n      new_step = (new_step > 0) ? tol_act : -tol_act;\n    }\n\n    a = b; fa = fb;     // Save the previous approx.\n    b += new_step; fb = func(b);  // Do step to a new approxim.\n\n    if ((fb > 0 && fc > 0) || (fb < 0 && fc < 0)) {\n      c = a; fc = fa; // Adjust c for it to have a sign opposite to that of b\n    }\n  }\n}\n","import { fitVirusCV19 } from \"../math/FitVirusCV19\";\nimport { ma } from 'moving-averages'\nconst moment = require('moment');\nconst { linearRegression } = require('simple-statistics');\n\nconst periods = {\n  daily: {\n    doublingLabel: 'Days to Double',\n    smoothLabel: 'd',\n    formatter: (moment) => moment.format('M/D'),\n    intervalS: 24 * 60 * 60,\n    converter: (data) =>\n      data\n        .map(([timestamp, value]) => [moment.unix(timestamp), value])\n        .sort(([a,], [b,]) => a.diff(b)),\n    pointConverter: ([timestamp, value]) => [moment.unix(timestamp), value],\n  },\n};\n\nconst REGRESSION_WINDOW_SIZE = 6;\nconst SMOOTH_WINDOW_SIZE = 3;\n\n/**\n * A data series is a label with a collection of values at specific moments.\n */\nexport class DataSeries {\n\n  static fromTimestamps(label, raw) {\n    if (raw.length > 0) {\n      return new DataSeries(label, raw, periods.daily);\n    } else {\n      return new EmptySeries(label, periods.daily);\n    }\n  }\n\n  static fromOldDataSourceDataPoints(label, data, column) {\n    let raw = [];\n    for (const point of data) {\n      let ts = moment(point.fulldate, \"MM/DD/YYYY\").unix();\n      let value = point[column];\n      raw.push([ts, value]);\n    }\n    return new DataSeries(label, raw, periods.daily);\n  }\n\n  static fromDateStr(label, data) {\n    let raw = [];\n    for (var key in data) {\n      let ts = moment(key, \"MM/DD/YYYY\").unix();\n      let value = data[key];\n      raw.push([ts, value]);\n    }\n    return new DataSeries(label, raw, periods.daily);\n  }\n\n  static flatten(serieses) {\n    const points = new Map();\n    const formatters = new Set();\n\n    for (const series of serieses) {\n      if (!series) {\n        continue;\n      }\n      formatters.add(series.formatter());\n\n      if (!series.points()) {\n        continue;\n      }\n\n      for (const [moment, value] of series.points()) {\n        const key = moment.unix();\n        if (!points.has(key)) {\n          points.set(key, {});\n        }\n\n        points.get(key)[series.label()] = value;\n      }\n    }\n\n    if (formatters.size > 1) {\n      throw new Error('Multiple formatters are not allowed');\n    } else if (formatters.size === 0) {\n      throw new Error('No formatter found');\n    }\n    const formatter = formatters.values().next().value;\n\n    return {\n      data:\n        [...points.entries()]\n          .sort(([a,], [b,]) => a - b)\n          .map(([timestamp, data]) => ({\n            timestamp,\n            ...data,\n          })),\n      timestampFormatter: (timestamp) => formatter(moment.unix(timestamp)),\n    };\n  }\n\n  static alignT0(serieses) {\n    const points = new Map();\n    for (const series of serieses) {\n      if (!series.points()) {\n        continue;\n      }\n\n      for (const [moment, value] of series.points()) {\n        let t0 = series.t0_;\n        const key = moment.unix() - t0;\n        if (key >= 0) {\n          if (!points.has(key)) {\n            points.set(key, {});\n          }\n          points.get(key)[series.label()] = value;\n        }\n      }\n    }\n\n    return {\n      data:\n        [...points.entries()]\n          .sort(([a,], [b,]) => a - b)\n          .map(([timestamp, data]) => ({\n            timestamp,\n            ...data,\n          })),\n      timestampFormatter: (timestamp) => timestamp / (24 * 60 * 60),\n    };\n  }\n\n  constructor(label, raw, period) {\n    this.label_ = label;\n    this.raw_ = raw;\n    this.period_ = period;\n    this.points_ = undefined;\n    this.lastPoint_ = undefined;\n  }\n\n  label() {\n    return this.label_;\n  }\n\n  suffixLabel(suffix) {\n    this.label_ = `${this.label_} ${suffix}`;\n    return this;\n  }\n\n  setT0(t0) {\n    this.t0_ = t0;\n    return this;\n  }\n\n  formatter() {\n    return this.period_.formatter;\n  }\n\n  setLabel(label) {\n    this.label_ = label;\n    return this;\n  }\n\n  points() {\n    if (!this.points_ && this.raw_.length > 0) {\n      this.points_ = this.period_.converter(this.raw_);\n    }\n    return this.points_;\n  }\n\n  pointLargerEqualThan(x) {\n    for (const [m, v] of this.points_) {\n      if (v >= x) {\n        return [m, v];\n      }\n    }\n    return null;\n  }\n\n  valueByUnixTimestamp(date) {\n    if (!this.valueByUnixTimestamp_ && this.raw_.length > 0) {\n      this.valueByUnixTimestamp_ = this.raw_.reduce(\n        (m, a) => {\n          const [ts, v] = a;\n          m[ts] = v;\n          return m;\n        }, {});\n    }\n    const value = this.valueByUnixTimestamp_[date];\n    return value;\n  }\n\n  lastPoint() {\n    if (!this.lastPoint_ && this.raw_.length > 0) {\n      this.lastPoint_ =\n        this.period_.pointConverter(this.raw_[this.raw_.length - 1]);\n    }\n    return this.lastPoint_;\n  }\n\n  lastValue() {\n    if (this.lastPoint()) {\n      return this.lastPoint()[1];\n    } else {\n      return undefined;\n    }\n  }\n\n  change() {\n    const name = `New ${this.label_}`;\n    this.points(); // To ensure lazy dataseries are loaded\n    const entries = this.points_ || this.raw_;\n    if (entries.length < 1) {\n      return new EmptySeries(name, this.period_);\n    }\n\n    // We often only want to know the change between the last two values, so\n    // pregenerate those.\n    // Every* series has an implicit first value of 0, because places only show\n    // up in the data when they have a case. So account for it.\n    //\n    // *except for projections\n    const secondToLastValue =\n      entries.length >= 2 ? entries[entries.length - 2][1] : 0;\n    if (typeof entries[0][0] === 'number') {\n      this.lastPoint_ = this.period_.pointConverter(entries[entries.length - 1]);\n    } else {\n      this.lastPoint_ = entries[entries.length - 1];\n    }\n    const lastChange = this.lastPoint_[1] - secondToLastValue;\n\n    const generator = () => {\n      const points = this.points();\n      const deltaPoints = [];\n      deltaPoints.push([points[0][0], points[0][1]]);\n      for (let i = 1; i < points.length; ++i) {\n        deltaPoints.push([\n          points[i][0],\n          Math.max(0, points[i][1] - points[i - 1][1]),\n        ]);\n      }\n      return deltaPoints;\n    };\n\n    return new LazyDataSeries(\n      name,\n      generator,\n      [this.lastPoint_[0], lastChange],\n      this.period_);\n  }\n\n  daysTo2X() {\n    let points = this.doublingInterval().points();\n    if (points) {\n      for (let i = points.length - 1; i >= 0; i--) {\n        let v = points[i][1];\n        if (!isNaN(v)) {\n          return v;\n        }\n      }\n    }\n    return 9999;\n  }\n\n  dailyGrowthRate() {\n    return Math.exp(Math.log(2) * (1 / this.daysTo2X())) - 1;\n  }\n\n  doublingInterval() {\n    const name = `${this.label_} ${this.period_.doublingLabel}`;\n\n    const entries = this.points_ || this.raw_;\n    if (entries.length < REGRESSION_WINDOW_SIZE) {\n      return new EmptySeries(name, this.period_);\n    }\n\n    const lastWindow = entries.slice(entries.length - REGRESSION_WINDOW_SIZE);\n    const lastLogs =\n      lastWindow\n        .map(([timestamp, v]) => [timestamp, Math.log2(v)]);\n    const { m } = linearRegression(lastLogs);\n    const value = 1 / (m * this.period_.intervalS);\n    const lastDoubleValue = !isNaN(value) && 0 < value && value <= 100 ? value : NaN;\n    const lastDouble = [this.lastPoint()[0], lastDoubleValue];\n\n    const generator = () => {\n      const points = this.points();\n      const log = points.map(([m, v]) => [m.unix(), Math.log2(v)]);\n      const doublings = [];\n      for (let i = REGRESSION_WINDOW_SIZE; i < points.length - 1; ++i) {\n        const window = log.slice(i - REGRESSION_WINDOW_SIZE, i + 1);\n        const { m } = linearRegression(window);\n        const value = 1 / (m * this.period_.intervalS);\n        doublings.push([\n          points[i][0],\n          !isNaN(value) && 0 < value && value <= 100 ? value : NaN,\n        ]);\n      }\n\n      doublings.push(lastDouble);\n      return doublings;\n    };\n\n    return new LazyDataSeries(name, generator, lastDouble, this.period_);\n  }\n\n  /**\n   * Removes the first point from the series. This is useful for when taking the\n   * change of a series that does not start from 0.\n   */\n  dropFirst() {\n    const points = this.points();\n    if (!points || points.length < 1) {\n      return undefined;\n    }\n\n    const dropped = new DataSeries(this.label_, undefined, this.period_);\n    dropped.points_ = points.slice(1);\n    return dropped;\n  }\n\n  last2PointSeries() {\n    const points = this.points();\n    if (!points || points.length < 2) {\n      return new EmptySeries(\"empty\", this.period_);\n    }\n    const dropped = new DataSeries(this.label_, undefined, this.period_);\n    dropped.points_ = [\n      points[points.length - 2],\n      points[points.length - 1],\n    ];\n    return dropped;\n  }\n\n  dropLastPoint() {\n    const points = this.points();\n    if (!points || points.length < 1) {\n      return undefined;\n    }\n    const dropped = new DataSeries(this.label_, undefined, this.period_);\n    dropped.points_ = points.slice(0, points.length - 1);\n\n    return dropped;\n  }\n\n  divide(inputseries) {\n    console.assert(this.points().length === inputseries.points().length);\n    const points = this.points();\n    const denominator = inputseries.points();\n\n    const result = [];\n    for (let i = 0; i < points.length; i++) {\n      result.push([\n        points[i][0],\n        points[i][1] / denominator[i][1],\n      ]);\n    }\n\n    const series = new DataSeries(\"division\", undefined, this.period_);\n    series.points_ = result;\n    console.log(result);\n    return series;\n  }\n\n  nDayAverage(MOVING_WIN_SIZE) {\n    const name = `${this.label_} (${MOVING_WIN_SIZE}-${this.period_.smoothLabel} avg)`;\n    let points = this.points();\n    if (!points) {\n      return new EmptySeries(name, this.period_);\n    }\n\n    const values = points.map(p => p[1]);\n    let avg = ma(values, MOVING_WIN_SIZE);\n    const smoothed = [];\n\n    for (let i = 0; i < points.length; i++) {\n      smoothed.push([\n        points[i][0],\n        avg[i],\n      ]);\n    }\n\n    const series = new DataSeries(name, undefined, this.period_);\n    series.points_ = smoothed;\n    return series;\n  }\n\n  smooth() {\n    const name = `${this.label_} (${SMOOTH_WINDOW_SIZE} ${this.period_.smoothLabel} avg)`;\n\n    const points = this.points();\n    if (points.length < SMOOTH_WINDOW_SIZE) {\n      return new EmptySeries(name, this.period_);\n    }\n\n    const smoothed = [];\n    for (let i = SMOOTH_WINDOW_SIZE - 1; i < points.length; ++i) {\n      const window = points.slice(i - SMOOTH_WINDOW_SIZE + 1, i + 1)\n      const sum = window.reduce((sum, [, v]) => Math.max(v, 0) + sum, 0);\n      smoothed.push([\n        points[i][0],\n        sum / SMOOTH_WINDOW_SIZE,\n      ]);\n    }\n\n    const series = new DataSeries(name, undefined, this.period_);\n    series.points_ = smoothed;\n    return series;\n  }\n\n  capita(population) {\n    const name = `${this.label_}`;\n\n    const points = this.points();\n    const capita = [];\n    for (let i = 0; i < points.length; ++i) {\n      capita.push([\n        points[i][0],\n        points[i][1] / population,\n      ]);\n    }\n\n    const series = new DataSeries(name, undefined, this.period_);\n    series.points_ = capita;\n    return series;\n  }\n\n  sum() {\n    let sum = 0;\n    for (const [, value] of this.points()) {\n      sum += value;\n    }\n    return sum;\n  }\n\n  trend() {\n    const points = this.points();\n    if (!points || points.length < 8) {\n      return undefined;\n    }\n\n    const linear = trendFit(this.label_, points, this.period_, (v) => v, (p) => p);\n    const log =\n      trendFit(\n        this.label_,\n        points,\n        this.period_,\n        (v) => Math.log2(v),\n        (p) => Math.exp(p * Math.log(2)));\n\n    if (linear.error < log.error) {\n      return linear.series;\n    } else {\n      return log.series;\n    }\n  }\n\n  fitVirusCV19Prediction() {\n    const name = `Prediction for ${this.label_}`;\n\n    const generator = () => {\n      try {\n        const points = this.points();\n        if (points.length < 1) {\n          return new EmptySeries(name, this.period_);\n        }\n        const startdate = points[0][0].unix();\n        const C = points.map((p) => p[1]);\n        const [Ca, newstartdate] = fitVirusCV19(C, startdate);\n        return Ca.map((v, i) => [moment.unix(newstartdate.unix()).add(i, 'days'), v]);\n      } catch {\n        return new EmptySeries(name, this.period_);\n      }\n    };\n\n    return new LazyDataSeries(name, generator, this.lastPoint(), this.period_);\n  }\n\n  today() {\n    const last = this.lastPoint();\n    if (!last) {\n      return undefined;\n    }\n\n    return moment().isSame(last[0], 'day') ? last[1] : undefined;\n  }\n\n  // if ts is in the future, return the last valid datapoint\n  dateOrLastValue(ts) {\n    const [mdate, v] = this.lastPoint();\n    if (mdate.unix() < ts) {\n      return v;\n    } else {\n      return this.valueByUnixTimestamp(ts);\n    }\n  }\n\n  // if ts is in the future, return the last valid datapoint\n  dateOrLastValueNew(ts) {\n    const [mdate] = this.lastPoint();\n    let t0 = (mdate.unix() < ts) ? mdate.unix() : ts;\n    // let tminus1 = moment(t0).subtract(1, \"days\").unix();\n    let tminus1 = t0 - 24 * 60 * 60;\n    let v0 = this.valueByUnixTimestamp(t0);\n    let v1 = this.valueByUnixTimestamp(tminus1);\n    return v0 - v1;\n  }\n}\n\nclass EmptySeries extends DataSeries {\n\n  constructor(label, period) {\n    super(label, [], period);\n  }\n}\n\nclass LazyDataSeries extends DataSeries {\n\n  constructor(label, generator, lastPoint, period) {\n    super(label, undefined, period);\n    this.generator_ = generator;\n    this.lastPoint_ = lastPoint;\n  }\n\n  points() {\n    if (!this.points_) {\n      this.points_ = this.generator_();\n    }\n    return this.points_;\n  }\n}\n\nfunction positiveOrNothing(value) {\n  return value >= 0 ? value : NaN;\n}\n\nfunction trendFit(label, points, period, valueMapper, predictionMapper) {\n  const { m, b } =\n    linearRegression(\n      points.slice(-1 - REGRESSION_WINDOW_SIZE, -1)\n        .map(([moment, v]) => [moment.unix(), valueMapper(v)]));\n  if (isNaN(m) || isNaN(b)) {\n    return { series: undefined, error: 9999999999 };\n  }\n\n  const trend =\n    new DataSeries(`${label} (Trend)`, undefined, period);\n  trend.points_ =\n    points.map(([moment,]) =>\n      [moment, predictionMapper(positiveOrNothing(m * moment.unix() + b))]);\n\n  let error = 0;\n  for (let i = 0; i < points.length; ++i) {\n    const difference = points[i][1] - (trend.points_[i][1] || 0);\n    error += difference * difference;\n  }\n\n  return { series: trend, error };\n}\n","import routes from \"./Routes\";\nimport { reverse } from 'named-urls';\nimport { trimLastDaysData, getDay2DoubleTimeSeries, getGrowthRateTimeSeries } from \"./CovidAnalysis\";\nimport { CountyInfo } from 'covidmodule';\nimport { fetchNPRProjectionData } from \"./NPRProjection\"\nimport { fetchTestingDataStates, fetchTestingDataUS, fetchTestingDataStatesTable } from \"./TestingData\"\nimport { fetchHospitalizationDataStates, fetchHospitalizationDataUS } from \"./HospitalizationData\"\nimport { fetchVaccineDataStates, fetchVaccineDataUS, fetchVaccineDataCounty } from \"./VaccineData\"\nimport { fetchAllUSData, fetchPublicCountyDataNew, fetchPublicCountyDataNewTimeSeries } from \"./PublicAllData\"\nimport { mergeDataSeries, makeDataSeriesFromTotal } from \"./graphs/DataSeries\";\nimport { DataSeries } from './models/DataSeries';\n\nconst CovidData = require('./data/AllData.slim.json');\nconst CountyGeoData = require('./data/county_gps.json');\nconst geolib = require('geolib');\nconst moment = require('moment');\nconst stateBounds = require(\"./data/states-bounding.json\");\n\nconst statemap = stateBounds.reduce((m, b) => {\n  m[b.STATEFP] = b;\n  return m;\n}, {});\n\nconst UNKNOWN_COUNTY_NAME = \"Unknown\";\n\nfunction datesToDataPoints(raw) {\n  const days = Object.keys(raw.Confirmed).sort(sortByDate);\n  let projection = null;\n  if (raw.ProjectionMIT) {\n    projection = makeDataSeriesFromTotal(raw.ProjectionMIT.Confirmed, \"confirmed_projected\", \"confirmed_new_projected\");\n  }\n\n  let data = days.map(day => {\n    const entry = {};\n    entry.confirmed = raw.Confirmed[day];\n    entry.death = raw.Death[day];\n    if (raw.Recovered) {\n      entry.recovery = raw.Recovered[day];\n    }\n    entry.fulldate = day;\n    return entry;\n  });\n\n  data = mergeDataSeries(data, projection);\n  return data;\n}\n\nfunction sortByDate(a, b) {\n  return moment(a, 'MM/DD/YYYY').toDate() - moment(b, 'MM/DD/YYYY').toDate();\n}\n\nexport class CovidSummarizable {\n  constructor(raw) {\n    this.covidRaw_ = raw;\n    if (this.covidRaw_) {\n      if (this.covidRaw_.Summary) {\n        this.normalizedRaw_ = this.covidRaw_.Summary;\n      } else {\n        this.normalizedRaw_ = this.covidRaw_;\n      }\n    }\n  }\n\n  hospitals() {\n    if (!this.normalizedRaw_) {\n      return {\n        'bedCount': \"N/A\",\n        'count': \"N/A\",\n      };\n    }\n\n    return {\n      count: this.normalizedRaw_.hospitals, // to be deprecated\n      bedCount: this.normalizedRaw_.beds,   // to be deprecated\n      bedsICU: this.normalizedRaw_.bedsICU,\n      bedsAvail: this.normalizedRaw_.bedsAvail,\n      hospitals: this.normalizedRaw_.hospitals,\n      beds: this.normalizedRaw_.beds,\n    };\n  }\n\n  summary() {\n    if (!this.normalizedRaw_) {\n      return {\n        confirmed: 0,\n        newcases: 0,\n        deathsNew: 0,\n        death: 0,\n        newpercent: 0,\n        daysToDouble: null,\n        daysToDoubleDeath: null,\n      };\n    }\n\n    const confirmed = this.normalizedRaw_.LastConfirmed;\n    const newcases = this.normalizedRaw_.LastConfirmedNew;\n    const summarized = {\n      confirmed: confirmed,\n      deaths: this.normalizedRaw_.LastDeath,\n      deathsNew: this.normalizedRaw_.LastDeathNew,\n      newcases: newcases,\n      newpercent: newcases / (confirmed - newcases),\n      recovered: this.normalizedRaw_.LastRecovered,\n      recoveredNew: this.normalizedRaw_.LastRecoveredNew,\n      tests: this.normalizedRaw_.totalTests,\n    };\n\n    if (this.normalizedRaw_.DaysToDouble) {\n      summarized.daysToDouble = this.normalizedRaw_.DaysToDouble;\n    }\n    if (this.normalizedRaw_.DaysToDoubleDeath) {\n      summarized.daysToDoubleDeath = this.normalizedRaw_.DaysToDoubleDeath;\n    }\n    if (this.normalizedRaw_.generated) {\n      summarized.generatedTime =\n        (new Date(this.normalizedRaw_.generated)).toString();\n    }\n\n    return summarized;\n  }\n\n  totalConfirmed() {\n    return this.summary().confirmed;\n  }\n\n  serverityIndex() {\n    if (!this.population()) {\n      return 0;\n    }\n    return this.normalizedRaw_.Last2WeeksConfirmedDelta / this.population();\n  }\n}\n\nexport class Country extends CovidSummarizable {\n\n  constructor() {\n    super(CovidData);\n    this.fetchedAllData = false;\n\n    // Metros span state lines, but we have a notion of a hierarchy in\n    // header:\n    // county -> metro (maybe) -> state -> country\n    //\n    // To make this work, we make a Metro object for every state a metro\n    // intersects. metroByStatesByIds_ is a\n    // Map<metro id, Map<state two letter code, Metro>>\n    this.metroByStatesByIds_ = new Map();\n    this.statesById_ = new Map();\n    this.statesByTwoLetterName_ = new Map();\n    this.countiesById_ = new Map();\n    this.name = \"United States\";\n    this.shortName = \"US\";\n\n    for (const [id, data] of Object.entries(this.covidRaw_)) {\n      // Check if this looks like a state FIPS id\n      if (isNaN(id)) {\n        continue;\n      }\n\n      const state = new State(id, data, this);\n      this.statesById_.set(id, state);\n      this.statesByTwoLetterName_.set(state.twoLetterName, state);\n    }\n\n    for (const data of CountyGeoData) {\n      const id = data.FIPS.padStart(5, '0');\n      const stateId = id.substring(0, 2);\n      this.statesById_.get(stateId).countyForId(id).update(data);\n    }\n\n    for (const state of this.statesById_.values()) {\n      for (const county of state.allCounties()) {\n        this.countiesById_.set(county.id, county);\n      }\n    }\n\n    for (const [id, data] of Object.entries(this.covidRaw_.Metros)) {\n      const metroByStates = new Map();\n      this.metroByStatesByIds_.set(id, metroByStates);\n\n      const states = new Set();\n      for (const county of data.Counties) {\n        states.add(this.countiesById_.get(county).state());\n      }\n      states.forEach(state => {\n        state.addMetro(id, data, this);\n        metroByStates.set(state.id, state.metroForId(id));\n      });\n    }\n\n    this.statesById_.forEach(state => state.reindex());\n  }\n\n  async fetchAllUSCountyData() {\n    if (this.fetchedAllData) {\n      return;\n    }\n    let countydata = await fetchAllUSData();\n    for (const [id, stateraw] of Object.entries(countydata)) {\n      // Check if this looks like a state FIPS id\n      if (isNaN(id)) {\n        continue;\n      }\n\n      for (const [fips, countyraw] of Object.entries(stateraw)) {\n        if (isNaN(fips)) {\n          continue;\n        }\n        const county = this.countiesById_.get(fips);\n        county.covidRaw_ = countyraw;\n      }\n    }\n    this.fetchedAllData = true;\n  }\n\n  parent() {\n    return undefined;\n  }\n\n  children() {\n    return this.allStates();\n  }\n\n  testData() {\n    return {\n      totalTests: this.covidRaw_.Summary.totalTestResults,\n      totalTestPositive: this.covidRaw_.Summary.totalTestPositive,\n      hospitalized: this.covidRaw_.Summary.hospitalized,\n      hospitalizedIncreased: this.covidRaw_.Summary.hospitalizedIncreased,\n    }\n  }\n\n  countyForId(id) {\n    return this.countiesById_.get(id);\n  }\n\n  allStates() {\n    return [...this.statesById_.values()];\n  }\n\n  allCounties() {\n    return [...this.countiesById_.values()];\n  }\n\n  metroByStatesForId(id) {\n    return this.metroByStatesByIds_.get(id);\n  }\n\n  allMetros() {\n    return Array.from(this.metroByStatesByIds_.values())\n      .map(\n        metroByStates =>\n          // Only grab one state if it spans state lines\n          metroByStates.values().next().value);\n  }\n\n  stateForId(id) {\n    return this.statesById_.get(id);\n  }\n\n  stateForTwoLetterName(id) {\n    return this.statesByTwoLetterName_.get(id);\n  }\n\n  routeTo() {\n    return routes.united_states;\n  }\n\n  async dataPointsAsync() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n\n  dataPoints() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n\n  async confirmDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Confirmed\", data, \"confirmed\");\n  }\n\n  async deathDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Death\", data, \"death\");\n  }\n\n  async deathsAsync() {\n    return this.covidRaw_.Summary.Death;\n  }\n\n  async projectionsAsync() {\n    let data = await fetchNPRProjectionData();\n    return data.filter(d => d.location_name === \"United States of America\");\n  }\n\n  async testingAsync() {\n    return await fetchTestingDataUS();\n  }\n\n  async hospitalizationAsync() {\n    let data = await fetchHospitalizationDataUS()\n    return data.sort((a, b) => a.date - b.date);\n  }\n\n  async hospitalizationCurrentlyAsync() {\n    let data = await this.hospitalizationAsync();\n    console.log(data);\n    return DataSeries\n      .fromOldDataSourceDataPoints(\n        \"Hospitalized Currently\",\n        data,\n        \"hospitalizedCurrently\"\n      );\n  }\n\n  async vaccineDataAsync() {\n    let vaccines = await fetchVaccineDataUS(this.shortName);\n    return vaccines;\n  }\n\n  async testingStatesTableAsync() {\n    let data = await fetchTestingDataStatesTable();\n    return data;\n  }\n\n  async daysToDoubleTimeSeries() {\n    let confirmed = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  population() {\n    return 331002651;\n  }\n\n  async growthRateTimeSeries() {\n    let confirmed = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  countyMapConfig() {\n    return {\n      geoUrl: \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\",\n      projection: {\n        projection: \"geoAlbersUsa\",\n      }\n    }\n  }\n}\n\nexport class State extends CovidSummarizable {\n  constructor(id, covidRaw, country) {\n    super(covidRaw);\n\n    this.id = id;\n    this.country_ = country;\n    this.name = CountyInfo.getStateNameFromFips(id);\n    this.twoLetterName = Object.values(covidRaw)[0]['StateName']\n    this.shortName = this.twoLetterName;\n\n    if (!this.twoLetterName) {\n      this.twoLetterName = CountyInfo.getStateAbbreviationFromFips(this.id);\n    }\n    this.counties_ = new Map();\n    this.countiesByName_ = new Map();\n    this.metros_ = new Map();\n    this.metrosByCounty_ = new Map();\n\n    // Force load counties so nearby works properly and we get \"Statewide\n    // Unallocated\"s.\n    for (const id of Object.keys(this.covidRaw_)) {\n      // Check if this looks like a county FIPS id\n      if (isNaN(id)) {\n        continue;\n      }\n\n      this.countyForId(id);\n    }\n    this.reindex();\n  }\n\n  fips() {\n    return this.id;\n  }\n\n  country() {\n    return this.country_;\n  }\n\n  parent() {\n    return this.country();\n  }\n\n  children() {\n    return this.allCounties();\n  }\n\n  addMetro(id, data, country) {\n    this.metros_.set(id, new Metro(id, data, this, country));\n  }\n\n  allCounties() {\n    return [...this.counties_.values()];\n  }\n\n  countyForId(id) {\n    if (!this.counties_.has(id)) {\n      this.counties_.set(id, new County(id, this.covidRaw_[id], this));\n    }\n    return this.counties_.get(id);\n  }\n\n  countyForName(name) {\n    return this.countiesByName_.get(name);\n  }\n\n  metroForId(id) {\n    return this.metros_.get(id);\n  }\n\n  metroContainingCounty(county) {\n    return this.metrosByCounty_.get(county);\n  }\n\n  routeTo() {\n    return reverse(routes.state, { state: this.twoLetterName });\n  }\n\n  confirmed() {\n    return this.covidRaw_.Summary.confirmed;\n  }\n\n  testData() {\n    return {\n      totalTests: this.covidRaw_.Summary.totalTests,\n      totalTestPositive: this.covidRaw_.Summary.totalTestPositive,\n      hospitalized: this.covidRaw_.Summary.hospitalized,\n      hospitalizedIncreased: this.covidRaw_.Summary.hospitalizedIncreased,\n    }\n  }\n\n  async dataPointsAsync() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n\n  dataPoints() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n\n  async confirmDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Confirmed\", data, \"confirmed\");\n  }\n\n  async deathDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Death\", data, \"death\");\n  }\n\n  async deathsAsync() {\n    return this.covidRaw_.Summary.Death;\n  }\n\n  newCases() {\n    return this.covidRaw_.Summary.LastConfirmedNew;\n  }\n\n  vaccineAdminSeries() {\n    return DataSeries.fromDateStr(\"Vaccine Administered\", this.covidRaw_.Summary.doses_admin_total);\n  }\n  vaccineShippedSeries() {\n    return DataSeries.fromDateStr(\"Vaccine Shippped\", this.covidRaw_.Summary.doses_shipped_total);\n  }\n  vaccineAllocSeries() {\n    return DataSeries.fromDateStr(\"Vaccine Allocated\", this.covidRaw_.Summary.doses_alloc_total);\n  }\n\n  population() {\n    return CountyInfo.getStatePopulation(this.twoLetterName);\n  }\n\n  async projectionsAsync() {\n    let data = await fetchNPRProjectionData();\n    return data.filter(d => d.location_name === this.name);\n  }\n\n  stayHomeOrder() {\n    return this.covidRaw_.Summary.StayHomeOrder;\n  }\n\n  async testingAsync() {\n    let data = await fetchTestingDataStates(this.twoLetterName);\n    return data.sort((a, b) => a.date - b.date);\n  }\n\n  async hospitalizationAsync() {\n    let data = await fetchHospitalizationDataStates(this.twoLetterName);\n    return data.sort((a, b) => a.date - b.date);\n  }\n\n  async vaccineDataAsync() {\n    let vaccines = await fetchVaccineDataStates(this.shortName);\n    return vaccines;\n  }\n\n  async hospitalizationCurrentlyAsync() {\n    let data = await this.hospitalizationAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\n        \"Hospitalized Currently\",\n        data,\n        \"hospitalizedCurrently\"\n      );\n  }\n\n  reindex() {\n    this.countiesByName_.clear();\n    this.counties_.forEach(county => {\n      if (county.name !== UNKNOWN_COUNTY_NAME) {\n        this.countiesByName_.set(county.name, county);\n      }\n    });\n\n    this.metrosByCounty_.clear();\n    this.metros_.forEach(metro => {\n      metro.counties_.forEach(county => {\n        this.metrosByCounty_.set(county, metro);\n      });\n    });\n  }\n  async daysToDoubleTimeSeries() {\n    let confirmed = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  async growthRateTimeSeries() {\n    let confirmed = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  getProjectionConfig_(state_fips) {\n    let state1 = statemap[state_fips];\n    let x = (parseFloat(state1.xmin) + parseFloat(state1.xmax)) / 2;\n    let y = (parseFloat(state1.ymin) + parseFloat(state1.ymax)) / 2;\n    let xscale =\n      (800 * 180) / (parseFloat(state1.xmax) - parseFloat(state1.xmin));\n    let yscale =\n      (600 * 180) / (parseFloat(state1.ymax) - parseFloat(state1.ymin));\n    let scale = xscale > yscale ? yscale : xscale;\n    scale = scale * 0.3;\n\n    // manually tune some state that doens't show up well.\n    if (state_fips === \"02\") {\n      return {\n        scale: 2000,\n        rotate: [149.4937, -64.2008, 0]\n      };\n    }\n    if (state_fips === \"15\") {\n      return {\n        scale: 5836,\n        rotate: [157.57, -19.65624, 0]\n      };\n    }\n    return {\n      scale: scale,\n      rotate: [-x, -y, 0]\n    };\n  }\n\n  countyMapConfig() {\n    const fips = this.fips();\n    if (fips === \"88\" || fips === \"99\" || fips === \"97\" || fips === \"98\" || fips === \"96\") {\n      return null;\n    }\n    return {\n      geoUrl: process.env.PUBLIC_URL + `/topojson/us-states/${this.twoLetterName}-${this.fips()}-${this.name.toLowerCase().replace(\" \", \"-\")}-counties.json`,\n      projection: {\n        projection: \"geoMercator\",\n        config: this.getProjectionConfig_(this.fips()),\n      }\n    }\n  }\n}\n\nexport class Metro extends CovidSummarizable {\n  constructor(id, covidRaw, state, country) {\n    super(covidRaw);\n\n    this.id = id;\n    this.state_ = state;\n    this.name = covidRaw['Name'];\n    this.counties_ = this.covidRaw_.Counties.map(id => {\n      // not all counties in a metro belong to the same state\n      // can't call state.countyForId() directly\n      return country.countyForId(id);\n    }).filter(c => c); // some county may not have data\n  }\n\n  children() {\n    return this.allCounties();\n  }\n\n  allCounties() {\n    return this.counties_;\n  }\n\n  state() {\n    return this.state_;\n  }\n\n  parent() {\n    return this.state();\n  }\n\n  population() {\n    let p = 0;\n    for (let c of this.counties_) {\n      p = p + c.population();\n    }\n    return p;\n\n  }\n\n  routeTo() {\n    return reverse(routes.metro, { metro: this.id });\n  }\n\n  async dataPointsAsync() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n  dataPoints() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n  async confirmDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Confirmed\", data, \"confirmed\");\n  }\n\n  async deathDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Death\", data, \"death\");\n  }\n  async deathsAsync() {\n    return this.covidRaw_.Summary.Death;\n  }\n\n  newCases() {\n    return this.covidRaw_.Summary.LastConfirmedNew;\n  }\n\n  async daysToDoubleTimeSeries() {\n    let confirmed = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  async growthRateTimeSeries() {\n    let confirmed = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n}\n\nexport class County extends CovidSummarizable {\n  constructor(id, covidRaw, state) {\n    super(covidRaw);\n\n    this.id = id;\n\n    if (covidRaw) {\n      this.name = covidRaw['CountyName'];\n      this.population_ = covidRaw.Population;\n      this.hospitalization_ = covidRaw.hospitalization;\n      this.ca_county_status = covidRaw.ca_county_status;\n\n    } else {\n      this.name = UNKNOWN_COUNTY_NAME;\n    }\n\n    if (this.name === \"New York City\") {\n      this.name = \"New York\";\n    }\n\n    this.state_ = state;\n  }\n\n  ca_status() {\n    return this.ca_county_status;\n  }\n\n  metro() {\n    return this.state_.metroContainingCounty(this);\n  }\n\n  state() {\n    return this.state_;\n  }\n\n  parent() {\n    return this.metro() || this.state();\n  }\n\n  children() {\n    return null;\n  }\n\n  fips() {\n    return this.id;\n  }\n\n  hospitalization() {\n    return this.hospitalization_;\n  }\n\n  nearby() {\n    if (!this.center_) {\n      return undefined;\n    }\n\n    const candidates = [];\n    for (const state of this.state_.country().allStates()) {\n      for (const candidate of state.allCounties()) {\n        // Shouldn't we check to make sure we aren't counting ourselves as\n        // nearby too?\n        if (!candidate.center_) {\n          continue;\n        }\n\n        if (Math.abs(this.center_.lat - candidate.center_.lat) < 1.5\n          && Math.abs(this.center_.lng - candidate.center_.lng) < 1.5) {\n          candidates.push(candidate);\n        }\n      }\n    }\n\n    return candidates.sort((a, b) => {\n      const da =\n        geolib.getDistance({\n          latitude: this.center_.lat,\n          longitude: this.center_.lng,\n        }, {\n          latitude: a.center_.lat,\n          longitude: a.center_.lng,\n        });\n      const db =\n        geolib.getDistance({\n          latitude: this.center_.lat,\n          longitude: this.center_.lng,\n        }, {\n          latitude: b.center_.lat,\n          longitude: b.center_.lng,\n        });\n      return da - db;\n    });\n  }\n\n  routeTo() {\n    return reverse(routes.county, {\n      county: this.name,\n      state: this.state_.twoLetterName,\n    });\n  }\n\n  async _fetchServerData() {\n    let serverdata = await fetchPublicCountyDataNewTimeSeries(this.id);\n    if (serverdata) {\n      this.covidRaw_.Confirmed = serverdata.reduce((m, b) => {\n        m[moment(b.date, \"YYYY-MM-DD\").format(\"MM/DD/YYYY\")] = b.cases;\n        return m;\n      }, {});\n      this.covidRaw_.Death = serverdata.reduce((m, b) => {\n        m[moment(b.date, \"YYYY-MM-DD\").format(\"MM/DD/YYYY\")] = b.deaths;\n        return m;\n      }, {});\n    }\n  }\n\n  async fetchNewCountyInfo() {\n    return await fetchPublicCountyDataNew(this.fips(), this.id);\n  }\n\n  async dataPointsAsync() {\n    if (!this.covidRaw_.Confirmed) {\n      await this._fetchServerData();\n    }\n    return datesToDataPoints(this.covidRaw_);\n  }\n\n  dataPoints() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n\n  async confirmDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Confirmed\", data, \"confirmed\");\n  }\n\n  async deathDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Death\", data, \"death\");\n  }\n\n  getConfirmedByDate(date) {\n    if (!date || !this.covidRaw_) {\n      return this.summary().confirmed;\n    }\n    const confirmed = this.covidRaw_.Confirmed;\n    if (confirmed) {\n      return confirmed[date];\n    }\n    return undefined;\n  }\n\n  getDeathsByDate(date) {\n    if (!date || !this.covidRaw_) {\n      return this.summary().deaths;\n    }\n    const death = this.covidRaw_.Death;\n    if (death) {\n      return death[date];\n    }\n    return undefined;\n  }\n\n  getConfirmedNewByDate(date) {\n    if (!date || !this.covidRaw_) {\n      return this.summary().newcases;\n    }\n    const d1 = this.getConfirmedByDate(date);\n    const d2 = this.getConfirmedByDate(moment(date, \"MM/DD/YYYY\").subtract(1, \"days\").format(\"MM/DD/YYYY\"));\n    if (!d1) {\n      return 0;\n    }\n    if (!d2) {\n      return d1\n    }\n    return d1 - d2;\n  }\n\n  async vaccineDataAsync() {\n    let vaccines = await fetchVaccineDataCounty(this.fips());\n    return vaccines;\n  }\n\n  async deathsAsync() {\n    if (!this.covidRaw_.Death) {\n      await this._fetchServerData();\n    }\n    return this.covidRaw_.Death;\n  }\n\n  population() {\n    return this.population_;\n  }\n\n  stayHomeOrder() {\n    return this.covidRaw_.StayHomeOrder;\n  }\n\n  newCases() {\n    if (!this.covidRaw_) {\n      return 0;\n    }\n\n    return this.covidRaw_.LastConfirmedNew;\n  }\n\n  update(data) {\n    if (data['County']) {\n      this.name = data['County'];\n    }\n\n    this.center_ = {};\n    if (data['Latitude']) {\n      this.center_['lat'] = parseFloat(data['Latitude']);\n    }\n    if (data['Longitude']) {\n      this.center_['lng'] = parseFloat(data['Longitude']);\n    }\n  }\n\n  async daysToDoubleTimeSeries() {\n    if (!this.covidRaw_.Confirmed) {\n      await this._fetchServerData();\n    }\n\n    let confirmed = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Confirmed)\n    );\n    let death = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  async growthRateTimeSeries() {\n    if (!this.covidRaw_.Confirmed) {\n      await this._fetchServerData();\n    }\n\n    let confirmed = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Confirmed)\n    );\n    let death = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport { County } from '../UnitedStates';\nimport { myShortNumber } from '../Util';\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: \"space-around\",\n    },\n    aspect: {\n        flexDirection: \"column\",\n        display: 'flex',\n        flexWrap: 'wrap',\n        padding: '4px',\n        margin: '5px 5px',\n        flexGrow: 1,\n        overflow: 'hidden',\n    },\n    innerDiv: {\n        flexDirection: \"column\",\n        alignContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        // padding: '4px',\n        // margin: '5px 5px',\n        flexGrow: 1,\n    },\n    label: {\n        fontSize: '.7em',\n    },\n    total: {\n        flexGrow: 1,\n        fontSize: '1.1em',\n    },\n    change: {\n        flexGrow: 1,\n        fontSize: '0.5em',\n        minHeight: \"0.5em\"\n    },\n}));\n\nexport const Summary = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const source = props.source;\n    const summary = source.summary();\n\n    let maybeHospitalization = source.testData && source.testData();\n\n    // Where does this even belong...\n    let maybeHospitals = !maybeHospitalization && source.hospitals && source.hospitals();\n    if (!maybeHospitals && source instanceof County) {\n        maybeHospitals = {\n            'bedCount': \"N/A\",\n            'count': \"N/A\",\n        };\n    }\n\n    function jumpTo(target, detailed) {\n        if (target) {\n            pushChangeTo(history, { \"tab\": target, \"detailed\": detailed });\n        }\n    }\n\n    const pop = (label, total, change, target, detailed) =>\n        <Paper className={classes.aspect} onClick={() => { jumpTo(target, detailed) }}>\n            <div className={classes.innerDiv}>\n                <div className={classes.change}>\n                    {change ? change : \"-\"}\n                </div>\n                <div className={classes.total}>\n                    {total}\n                </div>\n                <div className={classes.label}>\n                    {label}\n                </div>\n            </div>\n        </Paper>;\n    return (\n        <div className={classes.container}>\n            {pop(\n                'Confirmed',\n                myShortNumber(summary.confirmed),\n                `+ ${myShortNumber(summary.newcases)}`)}\n            {summary.recovered > 0 &&\n                pop(\n                    'Recovered',\n                    myShortNumber(summary.recovered),\n                    `+${myShortNumber(summary.recoveredNew)}`,\n                    'detailed',\n                    'Recovery'\n                )}\n            {pop(\n                'Deaths',\n                myShortNumber(summary.deaths),\n                `+${myShortNumber(summary.deathsNew)}`,\n                \"peakdeath\")}\n            {maybeHospitals &&\n                pop(\n                    'Beds',\n                    myShortNumber(maybeHospitals.bedCount),\n                    `${maybeHospitals.bedsICU} ICU Beds`)}\n            {maybeHospitalization &&\n                pop(\n                    'Tests',\n                    myShortNumber(maybeHospitalization.totalTests),\n                    `${Math.floor(maybeHospitalization.totalTestPositive / maybeHospitalization.totalTests * 100)}% pos `,\n                    'detailed',\n                    \"Tests\",\n                )}\n            {maybeHospitalization &&\n                pop(\n                    'Hospitalized',\n                    myShortNumber(maybeHospitalization.hospitalized),\n                    `+ ${maybeHospitalization.hospitalizedIncreased}`,\n                    \"peakhospitalization\"\n                )}\n        </div>\n    );\n};\n\nfunction pushChangeTo(history, input) {\n    const params = new URLSearchParams(history.location.search);\n    for (const [key, value] of Object.entries(input)) {\n        console.log(key);\n        console.log(value);\n        if (value) {\n            params.set(key, value);\n        }\n    }\n    history.location.search = params.toString();\n    history.push(history.location)\n    return history.location;\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\n\nconst AntSwitch = withStyles(theme => ({\n    root: {\n        width: 28,\n        height: 16,\n        padding: 0,\n        display: 'flex',\n    },\n    switchBase: {\n        padding: 2,\n        color: theme.palette.grey[500],\n        '&$checked': {\n            transform: 'translateX(12px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                opacity: 1,\n                backgroundColor: \"#00aeef\",\n                borderColor: theme.palette.primary.main,\n                border: `0px solid ${theme.palette.grey[500]}`,\n            },\n        },\n    },\n    thumb: {\n        width: 12,\n        height: 12,\n        boxShadow: 'none',\n    },\n    track: {\n        border: `1px solid ${theme.palette.grey[500]}`,\n        borderRadius: 16 / 2,\n        opacity: 1,\n        height: \"auto\",\n        backgroundColor: theme.palette.common.white,\n    },\n    checked: {},\n}))(Switch);\n\nexport { AntSwitch };","import React from \"react\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Metro } from \"./UnitedStates\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst NO_DATA_COLOR = '#fcfcfc';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  map: {\n    maxHeight: '50vh',\n    stroke: '#DDD',\n    strokeWidth: 1,\n    width: '100vh',\n    minHeight: 300,\n  },\n  small: {\n    // maxHeight: '50vh',\n  },\n}));\n\nconst MapNew = (props) => {\n  const classes = useStyles();\n\n  const source = props.source instanceof Metro ? props.source.state() : props.source;\n  const config = source.countyMapConfig();\n  if (!config) {\n    return null;\n  }\n  // Gross!\n  const isZoomed = !!config.projection.config;\n\n  const setTooltipContent = props.setTooltipContent;\n  return (\n    <ComposableMap\n      className={`${classes.map} ${isZoomed ? classes.small : ''}`}\n      data-tip=\"\"\n      projection={config.projection.projection}\n      projectionConfig={config.projection.config}\n    >\n      <ZoomableGroup zoom={1}>\n      <Geographies geography={config.geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => {\n            const county_id = geo.id ?? geo.properties.STATEFP + geo.properties.COUNTYFP;\n            const county = source.countyForId(county_id);\n            const color = props.colorFunction(county);\n            return (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill={color}\n                onMouseEnter={() => {\n                  setTooltipContent(county);\n                }}\n                onMouseLeave={() => {\n                  setTooltipContent(null);\n                }}\n                onClick={() => {\n                  if (props.selectionCallback) {\n                    props.selectionCallback(county);\n                  }\n                }\n\n                }\n              />\n            );\n          })\n        }\n      </Geographies>\n        </ZoomableGroup>\n    </ComposableMap >\n  );\n};\n\nconst MapCountyGeneric = React.memo((props) => {\n  const [county, setSelectedCounty] = React.useState(\"\");\n  const source = props.source;\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <MapNew setTooltipContent={setSelectedCounty}\n        source={source}\n        selectionCallback={props.selectionCallback}\n        colorFunction={(county) => {\n          if (!county || !props.getCountyDataPoint(county)) {\n            return NO_DATA_COLOR;\n          }\n          let data = props.getCountyDataPoint(county);\n          let population = county.population();\n          return (props.perCapita && !props.skipCapita)\n            ? props.colorFunctionPerMillion(data / population * 1000000)\n            : props.colorFunction(data);\n        }\n        }\n      />\n      {county &&\n        <ReactTooltip>\n          {\n            props.toolip(county)\n          }\n        </ReactTooltip>\n      }\n    </div>\n  );\n});\n\nexport { NO_DATA_COLOR, MapCountyGeneric }\n","import React from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation\n} from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport { geoCentroid } from \"d3-geo\";\nimport { CountyInfo } from 'covidmodule';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21]\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  map: {\n    fontFamily: theme.typography.fontFamily,\n    maxHeight: '100vh',\n    stroke: \"#DDD\",\n    strokeWidth: 0.1,\n    width: '95vw',\n    minHeight: 300,\n  },\n  marker: {\n    fill: '#303030',\n  },\n}));\n\nconst MapStates = (props) => {\n  const classes = useStyles();\n  const setTooltipContent = props.setTooltipContent;\n  return (\n    <ComposableMap className={classes.map} data-tip=\"\" projection=\"geoAlbersUsa\">\n      <Geographies geography={geoUrl}>\n        {({ geographies }) => (\n          <>\n            {geographies.map(geo => {\n              const state_fips = geo.id;\n              const state = props.source.stateForId(state_fips);\n              const color = props.colorFunction(state);\n              return <Geography\n                key={geo.rsmKey}\n                stroke=\"#DDD\"\n                geography={geo}\n                fill={color}\n                onMouseEnter={() => {\n                  setTooltipContent(state);\n                }}\n                onMouseLeave={() => {\n                  setTooltipContent(null);\n                }}\n              />\n            })}\n            {geographies.map(geo => {\n              const centroid = geoCentroid(geo);\n              // const cur = allStates.find(s => s.val === geo.id);\n              let cur = {\n                id: CountyInfo.getStateAbbreviationFromFips(geo.id),\n              }\n              return (\n                <g key={geo.rsmKey + \"-name\"}\n                >\n                  {cur &&\n                    centroid[0] > -160 &&\n                    centroid[0] < -67 &&\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                      <Marker coordinates={centroid} className={classes.marker}>\n                        <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n                          {cur.id}\n                        </text>\n                      </Marker>\n                    ) : (\n                        <Annotation\n                          subject={centroid}\n                          dx={offsets[cur.id][0]}\n                          dy={offsets[cur.id][1]}\n                        >\n                          <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n                            {cur.id}\n                          </text>\n                        </Annotation>\n                      ))}\n                </g>\n              );\n            })}\n          </>\n        )}\n      </Geographies>\n    </ComposableMap>\n  );\n};\n\nconst MapStateGeneric = React.memo((props) => {\n  const [state, setSelectedState] = React.useState(\"\");\n  const source = props.source;\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <MapStates setTooltipContent={setSelectedState}\n        source={source}\n        selectionCallback={props.selectionCallback}\n        stroke={props.stroke ?? \"#FFF\"}\n        colorFunction={(state) => {\n          if (!state || !props.getCountyDataPoint(state)) {\n            return \"#FFF\";\n          }\n          let data = props.getCountyDataPoint(state);\n          let population = state.population();\n          return (props.perCapita && !props.skipCapita)\n            ? props.colorFunctionPerMillion(data / population * 1000000)\n            : props.colorFunction(data);\n        }\n        }\n      />\n      {state &&\n        <ReactTooltip>\n          {\n            props.toolip(state)\n          }\n        </ReactTooltip>\n      }\n    </div>\n  );\n});\n\nexport { MapStateGeneric }\n","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { isMobile } from 'react-device-detect'\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\nconst moment = require(\"moment\");\n\nconst useStyles = makeStyles(theme => ({\n    mobileDiv: {\n    },\n    webDiv: {\n    },\n    container: {\n        height: 35\n    }\n}));\n\nconst DateRangeSlider = (props) => {\n\n    const classes = useStyles();\n    // takes a start date, and current date\n    //\n    // reports an offset from currentdate (eg. current - start - value)\n\n    const startDate = moment(props.startDate);\n    const currentDate = moment(props.currentDate);\n    const daysBetween = currentDate.diff(startDate, 'days');\n\n    let defaultValue = props.defaultValue !== undefined ? (daysBetween - props.defaultValue) : daysBetween - 30\n    defaultValue = (defaultValue > -1) ? defaultValue : 0;\n\n    const defaultMaxValue = (daysBetween > 13) ? daysBetween - 14 : daysBetween;\n    const maxValue = props.minOffset !== undefined ? daysBetween - props.minOffset : defaultMaxValue\n\n    const [valueState, setValueState] = React.useState(defaultValue)\n\n    const constLabelFormat = (value) => {\n        return moment(startDate).add(value, 'days').format(\"MM/DD\");\n    }\n\n    const handleValueChange = (value) => {\n        if (value !== valueState) {\n            setValueState(value);\n            props.valueChanged(daysBetween - value);\n        }\n    }\n\n    const marks = [{ value: (daysBetween - 30 > -1) ? daysBetween - 30 : daysBetween }];\n\n    const sliderPropsShared = {\n        \"aria-label\":\"Start Date\",\n        track: false,\n        \"aria-labelledby\": \"discrete-slider\",\n        valueLabelFormat: constLabelFormat,\n        step: 1,\n        marks: marks,\n        min: 0,\n        max: maxValue,\n        value: valueState,\n        onChange: (event, value) => handleValueChange(value)\n    }\n\n    const sliderPropsMobile = {\n        valueLabelDisplay:\"off\",\n    }\n    const sliderPropsWeb = {\n        valueLabelDisplay:\"auto\",\n    }\n\n    const gridProps = {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-end\"\n    }\n\n    return (isMobile ?\n        <Grid {...gridProps} className={`${classes.mobileDiv} ${classes.container}`}>\n            <IOSSlider {...sliderPropsShared} {...sliderPropsMobile} />\n        </Grid>\n        :\n        <Grid {...gridProps} className={`${classes.webDiv} ${classes.container}`}>\n            <StyledSlider {...sliderPropsShared} {...sliderPropsWeb} />\n        </Grid>);\n}\n\nDateRangeSlider.propTypes = {\n    currentDate: PropTypes.any.isRequired,\n    startDate: PropTypes.any.isRequired,\n    valueChanged: PropTypes.any.isRequired,\n}\n\nconst StyledSlider = withStyles({\n    root: {\n      color: '#00aeef',\n      height: 2,\n      padding: '15px 0',\n    },\n    valueLabel: {\n        left: 'calc(-50% - 4px)',\n    },\n    thumb: {\n        backgroundColor: '#3880ff',\n    },\n    mark: {\n      backgroundColor: '#bfbfbf',\n      height: 8,\n      width: 1,\n      marginTop: -3,\n    },\n})(Slider)\n\nconst iOSBoxShadow =\n  '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst IOSSlider = withStyles({\n  root: {\n    color: '#00aeef',\n    height: 2,\n    padding: '15px 0',\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow,\n      },\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 11px)',\n    top: -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n    },\n  },\n  track: {\n    height: 2,\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#3880ff',\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3,\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);\n\nexport { DateRangeSlider }\n","import React from 'react';\n\nexport const WorldContext = React.createContext(undefined);\n","export class BasicDataComponent {\n\n  constructor(confirmed, active, recovered, died) {\n    this.confirmed_ = confirmed;\n    this.active_ = active;\n    this.recovered_ = recovered;\n    this.died_ = died;\n    this.doublingInterval_ = confirmed.doublingInterval();\n  }\n\n  confirmed() {\n    return this.confirmed_;\n  }\n\n  active() {\n    return this.active_;\n  }\n\n  recovered() {\n    return this.recovered_;\n  }\n\n  died() {\n    return this.died_;\n  }\n\n  doublingInterval() {\n    return this.doublingInterval_;\n  }\n}\n","export class NameComponent {\n  constructor(name) {\n    this.name_ = name;\n  }\n\n  english() {\n    return this.name_;\n  }\n}\n","export class PopulationComponent {\n\n  constructor(population) {\n    this.population_ = population;\n  }\n\n  population() {\n    return this.population_;\n  }\n}\n","/** Paths are the ID type for entities, and encode hierarchical information. */\nexport class Path {\n\n  static parse(path) {\n    if (path === '/') {\n      return Path.root();\n    } else {\n      return new Path(path.substr(1).split('/'));\n    }\n  }\n\n  static root() {\n    return new Path([]);\n  }\n\n  constructor(components) {\n    this.components = components;\n  }\n\n  child(name) {\n    return new Path(this.components.concat(name));\n  }\n\n  equals(other) {\n    return this.string() === other.string();\n  }\n\n  parent() {\n    if (this.level() > 0) {\n      return new Path(this.components.slice(0, this.components.length - 1));\n    } else {\n      return undefined;\n    }\n  }\n\n  lastComponent() {\n    return this.components[this.components.length - 1];\n  }\n\n  level() {\n    return this.components.length;\n  }\n\n  matches(pattern) {\n    if (pattern === '/') {\n      return this.components.length === 0;\n    }\n\n    const components = Path.parse(pattern).components;\n    if (this.components.length !== components.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.components.length; ++i) {\n      if (components[i].startsWith(':') || this.components[i] === components[i]) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  string() {\n    return '/' + this.components.join('/');\n  }\n}\n\n","import React from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Sphere,\n  Graticule,\n  ZoomableGroup,\n  Marker,\n} from \"react-simple-maps\";\nimport { geoCentroid } from \"d3-geo\";\n\nimport ReactTooltip from \"react-tooltip\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { WorldContext } from './WorldContext';\nimport { BasicDataComponent } from './models/BasicDataComponent';\nimport { NameComponent } from './models/NameComponent';\nimport { PopulationComponent } from './models/PopulationComponent';\nimport { Path } from './models/Path';\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  map: {\n    fontFamily: theme.typography.fontFamily,\n    maxHeight: '50vh',\n    stroke: \"#DDD\",\n    strokeWidth: 0.1,\n    width: '95vw',\n    minHeight: 300,\n  },\n}));\n\nconst MapWorld = (props) => {\n  const classes = useStyles();\n  const setTooltipContent = props.setTooltipContent;\n  const world = React.useContext(WorldContext);\n\n  let center = [0, 0];\n  let zoom = 1;\n  if (props.geography) {\n    const pos = props.geography.position();\n    center = [pos.longitude, pos.latitude];\n    zoom = 4;\n  }\n\n  return (\n    <ComposableMap\n      className={classes.map}\n      data-tip=\"\"\n    >\n      <ZoomableGroup zoom={zoom} center={center} >\n        <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\n        <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\n\n\n        <Geographies geography={geoUrl}\n        >\n          {({ geographies }) => (\n            <>\n              {geographies.map(geo => {\n                const path = Path.parse('/' + geo.properties.ISO_A2);\n                let country;\n                try {\n                  country = world.getMultiple(path, [NameComponent, BasicDataComponent, PopulationComponent]);\n                } catch (e) {\n\n                }\n                const color = props.colorFunction(country);\n\n                return <Geography\n                  key={geo.rsmKey}\n                  stroke=\"#000\"\n                  geography={geo}\n                  fill={color}\n                  onMouseEnter={() => {\n                    setTooltipContent(country);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(null);\n                  }}\n                  onClick={() => {\n                    if (props.selectionCallback) {\n                      props.selectionCallback(path);\n                    }\n                  }}\n                />\n              })}\n              {geographies.map(geo => {\n                const centroid = geoCentroid(geo);\n                const path = Path.parse('/' + geo.properties.ISO_A2);\n                let country;\n                try {\n                  country = world.getMultiple(path, [NameComponent, BasicDataComponent, PopulationComponent]);\n                } catch (e) {\n\n                }\n                return (\n                  <g key={geo.rsmKey + \"-name\"}>\n                    {country &&\n                      <Marker coordinates={centroid}>\n                        <text fontSize={3} textAnchor=\"middle\">\n                          {country[0].english()}\n                        </text>\n                      </Marker>\n                    }\n                  </g>);\n              })}\n            </>\n          )}\n        </Geographies>\n      </ZoomableGroup>\n\n    </ComposableMap>\n  );\n};\n\nconst MapWorldGeneric = React.memo((props) => {\n  const [state, setSelectedState] = React.useState(\"\");\n  const source = props.source;\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <MapWorld setTooltipContent={setSelectedState}\n        source={source}\n        geography={props.geography}\n        selectionCallback={props.selectionCallback}\n        stroke={props.stroke ?? \"#000000\"}\n        colorFunction={(country) => {\n          if (!country || !props.getCountyDataPoint(country)) {\n            return \"#FFF\";\n          }\n          let data = props.getCountyDataPoint(country);\n          const [, , pop] = country;\n          let population = pop.population();\n          return (props.perCapita && !props.skipCapita)\n            ? props.colorFunctionPerMillion(data / population * 1000000)\n            : props.colorFunction(data);\n        }\n        }\n      />\n      {state &&\n        <ReactTooltip>\n          {\n            props.toolip(state)\n          }\n        </ReactTooltip>\n      }\n    </div>\n  );\n});\n\nexport { MapWorldGeneric }\n","import React from \"react\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { Typography } from '@material-ui/core';\nimport * as d3 from \"d3-scale\";\n\nimport Button from '@material-ui/core/Button';\n\nimport { AntSwitch } from \"./graphs/AntSwitch\"\nimport { Grid, makeStyles } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom'\nimport { NO_DATA_COLOR, MapCountyGeneric } from \"./MapCountyGeneric\"\nimport { MapStateGeneric } from \"./MapStateGeneric\";\nimport { Country } from \"./UnitedStates\";\nimport { CountryContext } from \"./CountryContext\"\nimport { DateRangeSlider } from \"./DateRangeSlider\"\nimport { MapWorldGeneric } from \"./MapWorldGeneric\";\nimport { BasicDataComponent } from './models/BasicDataComponent';\nimport { NameComponent } from './models/NameComponent';\nimport { County } from './UnitedStates'\nimport { WorldContext } from './WorldContext';\n\nconst moment = require(\"moment\");\n\nconst useStyles = makeStyles(theme => ({\n  gridPadding: {\n    minWidth: '1vw'\n  },\n  container: {\n    minHeight: 45\n  },\n  dateLabel: {\n    width: 45\n  }\n}));\n\nconst logColors = () => {\n  return d3.scaleLog().clamp(true);\n}\n\nconst ColorScale = {\n  confirmed: logColors()\n    .domain([1, 200, 10000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedWorld: logColors()\n    .domain([1000, 10000, 1000000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedPerMillion: logColors()\n    .domain([1000, 20000, 40000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedNew: logColors()\n    .domain([1, 200, 2000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedNewWorld: logColors()\n    .domain([50, 3000, 30000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedNewPerMillion: logColors()\n    .domain([1, 200, 2000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedNewPerMillionWorld: logColors()\n    .domain([1, 30, 130])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  death: logColors()\n    .domain([1, 100, 1000])\n    .range([NO_DATA_COLOR, \"#5d99c6\", \"#002171\"]),\n  deathWorld: logColors()\n    .domain([1, 7000, 70000])\n    .range([NO_DATA_COLOR, \"#5d99c6\", \"#002171\"]),\n  deathPerMillion: logColors()\n    .domain([10, 100, 1000])\n    .range([NO_DATA_COLOR, \"#5d99c6\", \"#002171\"]),\n  deathPerMillionWorld: logColors()\n    .domain([1, 80, 800])\n    .range([NO_DATA_COLOR, \"#5d99c6\", \"#002171\"]),\n  timeToDouble: logColors()\n    .domain([1, 15, 300])\n    .range([\"#004d40\", \"#4db6ac\", NO_DATA_COLOR]),\n  tests: logColors()\n    .domain([10000, 650000])\n    .range([NO_DATA_COLOR, \"#3f51b5\", \"#000051\"]),\n  testsPerMillions: logColors()\n    .domain([7200, 33000])\n    .range([NO_DATA_COLOR, \"#3f51b5\", \"#000051\"]),\n}\n\nconst CountyNavButtons = withRouter((props) => {\n  const county = props.county;\n  const state = county.state();\n  const metro = county.metro();\n  const history = props.history;\n  return <ToggleButtonGroup\n    value={null}\n    exclusive\n    size=\"large\"\n    onChange={(e, route) => {\n      history.push(route);\n    }}\n  >\n    <ToggleButton size=\"small\" value={county.routeTo()} >\n      {county.name}\n    </ToggleButton>\n    {metro &&\n      <ToggleButton value={metro.routeTo()} >\n        {metro.name} </ToggleButton>\n    }\n    <ToggleButton value={state.routeTo()} >\n      {state.name}</ToggleButton>\n  </ToggleButtonGroup>;\n});\n\nconst CountryButton = withRouter((props) => {\n\n  const history = props.history;\n  const world = React.useContext(WorldContext);\n  const [name] = world.getMultiple(props.country, [NameComponent, BasicDataComponent]);\n\n  return (\n    <Button variant=\"contained\" color=\"primary\"\n      onClick={(e, route) => {\n        history.push(\"/country\" + props.country.string());\n      }}\n    >\n      {name.english()}\n    </Button>)\n});\n\nconst MapUS = withRouter((props) => {\n  const classes = useStyles()\n\n  const source = props.source;\n  const [perCapita, setPerCapita] = React.useState(true);\n  const [selectedCounty, setSelectedCounty] = React.useState(null);\n\n  let subtabs = new Map([\n    ['confirmed', {\n      label: \"Confirmed\",\n      map: MapUSConfirmed,\n    }],\n    ['confirmedNew', {\n      label: \"New\",\n      map: MapUSConfirmedNew,\n    }],\n    ['death', {\n      label: \"Death\",\n      map: MapStateDeath,\n    }],\n    ['daysToDouble', {\n      label: \"Growth\",\n      map: MapDaysToDouble,\n    }],\n  ]);\n  if (source instanceof Country) {\n    subtabs.set('testCoverage', {\n      label: \"Tests\",\n      map: MapUSTestCoverage,\n    });\n  }\n\n  if (source instanceof BasicDataComponent) {\n\n    subtabs = new Map([\n      ['confirmed', {\n        label: \"Confirmed\",\n        map: MapWorldConfirmed,\n      }],\n      ['confirmedNew', {\n        label: \"New\",\n        map: MapWorldConfirmedNew,\n      }],\n      ['death', {\n        label: \"Death\",\n        map: MapWorldDeath,\n      }],\n    ]);\n\n  }\n\n  let desired = getURLParam(props.history.location.search, \"detailed\");\n  if (!subtabs.has(desired)) {\n    desired = subtabs.keys().next().value;\n  }\n  const [subtab, setSubtab] = React.useState(desired);\n  const ChosenMap = subtabs.get(desired).map;\n\n  const buttonGroup = <ToggleButtonGroup\n    value={subtab}\n    exclusive\n    size=\"small\"\n    onChange={(e, newvalue) => {\n      setSubtab(newvalue)\n      pushChangeTo(props.history, \"detailed\", newvalue);\n    }}\n  >\n    {[...subtabs].map(([id, { label }]) =>\n      <ToggleButton key={id} value={id}>{label}</ToggleButton>\n    )}\n  </ToggleButtonGroup>;\n\n  const [dataFetched, setDataFetched] = React.useState(null);\n  const [showPastDays, setShowPastDays] = React.useState(0);\n  const oldestMoment = moment(\"03/10/2020\", \"MM/DD/YYYY\");\n\n  const getDate = (isDataFetched, showPastNumDays) => {\n    return isDataFetched ? moment().subtract(showPastNumDays, 'days').format('MM/DD/YYYY') : null\n  }\n\n  const country = React.useContext(CountryContext);\n\n  React.useEffect(() => {\n    if (country) {\n      country.fetchAllUSCountyData().then(() => {\n        setDataFetched(true);\n      });\n    }\n  }, [country]);\n\n\n  if (!dataFetched) {\n    return <div>Loading</div>;\n  }\n\n  return <div>\n    {buttonGroup}\n    <Grid container alignItems=\"center\" spacing={1} className={classes.container}>\n      <Grid item>\n        <AntSwitch checked={perCapita} onClick={() => { setPerCapita(!perCapita) }} />\n      </Grid>\n      <Grid item>\n        <Typography>Per Capita</Typography>\n      </Grid>\n      {dataFetched && oldestMoment && (desired === \"confirmed\" || desired === \"confirmedNew\" || desired === \"death\") &&\n        <Grid item>\n          <Typography align=\"right\" className={classes.dateLabel}>{moment().subtract(showPastDays, 'days').format('M/D')}:</Typography>\n        </Grid>\n      }\n      {dataFetched && oldestMoment && (desired === \"confirmed\" || desired === \"confirmedNew\" || desired === \"death\") &&\n        <Grid item xs sm={3}>\n          <DateRangeSlider\n            startDate={moment(oldestMoment)}\n            currentDate={moment()}\n            minOffset={0}\n            defaultValue={showPastDays}\n            valueChanged={(val) => {\n              setShowPastDays(val);\n            }}\n          />\n        </Grid>\n      }\n      <Grid item sm></Grid>\n      <Grid className={classes.gridPadding}></Grid>\n    </Grid>\n    <ChosenMap {...props} date={getDate(dataFetched, showPastDays)} source={source} perCapita={perCapita} selectionCallback={setSelectedCounty} />\n    {\n      selectedCounty && selectedCounty instanceof County &&\n      <CountyNavButtons county={selectedCounty} />\n    }\n    {\n      selectedCounty && !(selectedCounty instanceof County) &&\n      <CountryButton country={selectedCounty} />\n    }\n  </div >\n});\n\nconst MapDaysToDouble = React.memo((props) => {\n  return (\n    <MapCountyGeneric\n      {...props}\n      skipCapita={true}\n      getCountyDataPoint={(county) => {\n        return county.summary().daysToDouble > 0 ? county.summary().daysToDouble : 0;\n      }}\n      colorFunction={(data) => {\n        return ColorScale.timeToDouble(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.timeToDouble(data);\n      }}\n      toolip={county => {\n        let days = county.summary().daysToDouble;\n        let dailygrowth = Math.exp(Math.log(2) * (1 / days)) - 1;\n        if (!days) {\n          return `${county.name} no data`;\n        }\n        days = days.toFixed(1) + \" days\";\n        return `${county.name}, Daily Growth: ${(dailygrowth * 100).toFixed(1)}%, Days to 2x: \\n${days}`\n      }}\n    />\n  );\n});\n\nconst MapWorldConfirmed = React.memo((props) => {\n  const ts = moment(props.date, \"MM/DD/YYYY\").unix();\n  return (\n    <MapWorldGeneric\n      {...props}\n      getCountyDataPoint={(country) => {\n        if (country) {\n          const [, basic] = country;\n          return basic.confirmed().dateOrLastValue(ts);\n        }\n      }}\n      colorFunction={(data) => {\n        return ColorScale.confirmedWorld(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.confirmedPerMillion(data);\n      }}\n      toolip={country => {\n        const [name, basic, population] = country;\n        let confirmed = basic.confirmed().dateOrLastValue(ts);\n        return `${name.english()}, Confirmed: ${confirmed}, \\n` +\n          `Confirm/Mil: ${(confirmed / population.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapWorldDeath = React.memo((props) => {\n  const ts = moment(props.date, \"MM/DD/YYYY\").unix();\n  return (\n    <MapWorldGeneric\n      {...props}\n      getCountyDataPoint={(country) => {\n        if (country) {\n          const [, basic] = country;\n          return basic.died().dateOrLastValue(ts);\n        }\n      }}\n      colorFunction={(data) => {\n        return ColorScale.deathWorld(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.deathPerMillionWorld(data);\n      }}\n      toolip={country => {\n        const [name, basic, population] = country;\n        let confirmed = basic.died().dateOrLastValue(ts);\n        return `${name.english()}, Deaths: ${confirmed}, \\n` +\n          `Deaths/Mil: ${(confirmed / population.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapWorldConfirmedNew = React.memo((props) => {\n  const ts = moment(props.date, \"MM/DD/YYYY\").unix();\n  return (\n    <MapWorldGeneric\n      {...props}\n      getCountyDataPoint={(country) => {\n        if (country) {\n          const [, basic] = country;\n          return basic.confirmed().dateOrLastValueNew(ts);\n        }\n      }}\n      colorFunction={(data) => {\n        return ColorScale.confirmedNew(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.confirmedNewPerMillionWorld(data);\n      }}\n      toolip={country => {\n        const [name, basic, population] = country;\n        let confirmed = basic.confirmed().dateOrLastValueNew(ts);\n        return `${name.english()}, New: ${confirmed}, \\n` +\n          `New/Mil: ${(confirmed / population.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapUSConfirmed = React.memo((props) => {\n  return (\n    <MapCountyGeneric\n      {...props}\n      getCountyDataPoint={(county) => {\n        return county.getConfirmedByDate(props.date);\n      }}\n      colorFunction={(data) => {\n        return ColorScale.confirmed(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.confirmedPerMillion(data);\n      }}\n      toolip={county => {\n        let confirmed = county.getConfirmedByDate(props.date);\n        return `${county.name}, Confirmed: ${confirmed}, \\n` +\n          `Confirm/Mil: ${(confirmed / county.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapUSConfirmedNew = React.memo((props) => {\n  return (\n    <MapCountyGeneric\n      {...props}\n      getCountyDataPoint={(county) => {\n        return county.getConfirmedNewByDate(props.date);\n      }}\n      colorFunction={(data) => {\n        return ColorScale.confirmedNewWorld(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.confirmedNewPerMillion(data);\n      }}\n      toolip={county => {\n        let newcases = county.getConfirmedNewByDate(props.date);\n        return `${county.name}, New: ${newcases}, \\n` +\n          `New/Mil: ${(newcases / county.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapStateDeath = React.memo((props) => {\n  return (\n    <MapCountyGeneric\n      {...props}\n      getCountyDataPoint={(county) => {\n        return county.getDeathsByDate(props.date);\n      }}\n      colorFunction={(data) => {\n        return ColorScale.death(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.deathPerMillion(data);\n      }}\n      toolip={county => {\n        const deaths = county.getDeathsByDate(props.date);\n        return `${county.name}, Deaths: ${deaths}, \\n` +\n          `Deaths/Mil: ${(deaths / county.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapUSTestCoverage = React.memo((props) => {\n  return (\n    <MapStateGeneric\n      {...props}\n      getCountyDataPoint={(county) => {\n        return county.summary().tests;\n      }}\n      colorFunction={(data) => {\n        return ColorScale.tests(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.testsPerMillions(data);\n      }}\n      toolip={county => {\n        return `${county.name}, Tests: ${county.summary().tests}, \\n` +\n          `Tests % : ${(county.summary().tests / county.population() * 100).toFixed(1)}%`\n      }}\n    />\n  );\n});\n\nfunction getURLParam(url, key) {\n  const params = new URLSearchParams(url);\n  if (params.has(key)) {\n    return params.get(key);\n  } else {\n    return undefined;\n  }\n}\n\nfunction pushChangeTo(history, key, value) {\n  const params = new URLSearchParams(history.location.search);\n  params.set(key, value);\n  history.location.search = params.toString();\n  history.push(history.location)\n}\n\nexport { MapUS }\n","export default {\n    linear: 'Linear',\n    log: 'Log'\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { LineChart, ReferenceLine, ReferenceArea, Label, CartesianGrid, Line, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { scaleSymlog } from 'd3-scale';\nimport { myShortNumber } from '../../Util';\nimport { DateRangeSlider } from \"../../DateRangeSlider\"\nimport { useStickyState } from '../../Util';\nimport { SectionHeader } from \"../../CovidUI\"\nimport Typography from '@material-ui/core/Typography'\n\nimport { DataSeries } from '../../models/DataSeries';\nimport axisScales from '../../graphs/GraphAxisScales'\n\nconst moment = require('moment');\n\nconst baseToggleButtonStyles = {\n  height: 'initial',\n  textTransform: 'initial',\n};\n\n// This scale for logs works consistenly, whereas setting ReCharts to use the\n// scale 'log' only works sometimes under certain mystery situations.\nconst logScale = scaleSymlog().domain([0, 'dataMax']);\n\nconst useStyles = makeStyles(theme => ({\n  options: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginBottom: '16px',\n    '& > *': {\n      margin: '0 8px 8px 0',\n    },\n  },\n  slider: {\n    display: \"flex\",\n    width: 200,\n    alignItems: \"center\",\n  },\n  expand: {\n    flexGrow: 1,\n  },\n}));\n\nconst cookieStaleWhen = (cookie) => !cookie.verticalScale || !cookie.showPastDays;\n\n/** A graph that allows the user to click series on and off. */\nexport const AdvancedGraph = (props) => {\n  const classes = useStyles();\n\n  const [state, setStateSticky] = useStickyState({\n    defaultValue: {\n      verticalScale: axisScales.linear,\n      showPastDays: 30,\n    },\n    cookieId: \"AdvanceGraphPreference1\",\n    isCookieStale: cookieStaleWhen\n  });\n  const handleLogScaleToggle = (newScale) => {\n    setStateSticky({\n      ...state,\n      verticalScale: newScale,\n    });\n  };\n\n  const handleSliderValueChange = (value) => {\n    let newstate = { ...state, showPastDays: value }\n    setStateSticky(newstate)\n  }\n\n  function filterData(data) {\n    const cutoff = moment().subtract(state.showPastDays, 'days').unix();\n    const future = moment().add(14, 'days').unix();\n    return data.filter((p) => p.timestamp >= cutoff && p.timestamp <= future);\n  }\n\n  const scales = new Map([\n    ['Linear', {\n      label: 'Linear',\n      scale: 'Linear',\n    }],\n    ['Log', {\n      label: 'Log',\n      scale: 'Log',\n    }],\n  ]);\n  const scale = state.verticalScale;\n\n  // Expands series that are supposed to have trend lines into an entry for the\n  // original series and one for the trend line.\n  const expandedSerieses = expandSeriesesToMap(props.serieses);\n\n  // Okay, here's where it gets terrible. We have raw serieses and envelopes.\n  // We want the user to be able to toggle serieses and evelopes on and off one\n  // by one, but not to toggle the serieses inside of a envelope. So for the\n  // purposes of Recharts we're going to decompose the envelopes to be raw\n  // serieses. But for our code, we're going to merge them and be confused a\n  // lot.\n\n  const allSerieses = [...expandedSerieses.values()];\n\n  let { data, timestampFormatter } = (props.alignT0)\n    ? DataSeries.alignT0([...allSerieses.values()].map(({ series }) => series))\n    : DataSeries.flatten([...allSerieses.values()].map(({ series }) => series));\n\n  let yAxisFormatter = (props.yAxisFormatter)\n    ? props.yAxisFormatter\n    : myShortNumber;\n\n  const seriesesAndEnvelopes = [...expandedSerieses.entries()];\n  const allLabels = seriesesAndEnvelopes.map(([label,]) => label);\n  const [known, setKnown] = React.useState(allLabels);\n  const [selected, setSelected] =\n    React.useState(\n      () => seriesesAndEnvelopes.filter((item) => item[1].initial !== 'off')\n        .map(([label,]) => label));\n\n  // As the user switches pages, graphs that were previously unknown may become\n  // available. So turn them off if they default to on when they appear.\n  if (known.join() !== allLabels.join()) {\n    const add = [];\n    for (const [key, { initial }] of seriesesAndEnvelopes) {\n      if (!known.includes(key) && !selected.includes(key) && initial !== 'off') {\n        add.push(key);\n      }\n    }\n\n    if (add.length > 0) {\n      // We might as well just do this in here, even though technically we\n      // should probably do it in the else branch too.\n      setKnown(allLabels);\n      setSelected(selected.concat(add));\n    }\n  }\n\n  return (\n    <div className={props.className}>\n      {props.title &&\n        <SectionHeader>\n          <Typography variant=\"h5\" noWrap>\n            {props.title}\n            <Typography variant=\"body1\" noWrap>\n              {props.subtitle}\n            </Typography>\n          </Typography>\n        </SectionHeader>\n      }\n      {props.showControls &&\n        <div className={classes.options}>\n          <Display\n            displays={scales}\n            selected={scale}\n            onChange={handleLogScaleToggle}\n          />\n          <div className={classes.slider} >\n            <div>\n              Date:</div>\n            <DateRangeSlider\n              currentDate={moment()}\n              startDate={moment(\"02/01/2020\", \"MM/DD/YYYY\")}\n              valueChanged={handleSliderValueChange}\n              defaultValue={state.showPastDays}\n            />\n          </div>\n          <div className={classes.expand} />\n          <Legend\n            spec={seriesesAndEnvelopes}\n            selected={selected}\n            onChange={setSelected} />\n        </div>\n      }\n      <Chart\n        data={filterData(data)}\n        scale={scales.get(scale).scale}\n        timestampFormatter={timestampFormatter}\n        yAxisFormatter={yAxisFormatter}\n        specs={\n          seriesesAndEnvelopes\n            .filter(([label,]) => selected.includes(label))\n            .map(([label, s]) => ({ label, ...s }))\n        }\n        vRefLines={props.vRefLines}\n        hRefLines={props.hRefLines}\n      />\n    </div>);\n};\n\nAdvancedGraph.propTypes = {\n  className: PropTypes.string,\n  serieses:\n    PropTypes.arrayOf(\n      PropTypes.exact({\n        series: PropTypes.instanceOf(DataSeries).isRequired,\n        color: PropTypes.string.isRequired,\n        initial: PropTypes.oneOf([undefined, 'off', 'on']),\n        trend: PropTypes.string,\n        stipple: PropTypes.bool,\n        rightAxis: PropTypes.bool,\n        lastDayIncomplete: PropTypes.bool,\n        covidspecial: PropTypes.bool,\n        showMovingAverage: PropTypes.bool,\n      })).isRequired,\n  showControls: PropTypes.bool,\n};\n\nAdvancedGraph.defaultProps = {\n  showControls: true,\n};\n\nfunction expandSeriesesToMap(serieses) {\n  const expanded = serieses.flatMap(s => {\n    const result = [];\n    if (s.covidspecial) {\n\n      let s_for_display;\n      if (s.showMovingAverage) {\n        s_for_display = s.series.nDayAverage(7);\n      } else {\n        s_for_display = s.series;\n      }\n\n      let main = {\n        ...s,\n        series: s_for_display.dropLastPoint(),\n        stipple: false,\n      };\n      let last = {\n        ...s,\n        series: s_for_display.last2PointSeries().suffixLabel(\"*\"),\n        stipple: true,\n        derived: true,\n      }\n      result.push(main);\n      result.push(last);\n\n      if (s.showMovingAverage) {\n        let original = {\n          ...s,\n          series: s.series,\n          // derived: true,\n          stipple: true,\n        }\n        result.push(original);\n      }\n\n    } else {\n      result.push(s);\n    }\n    return result;\n  });\n\n  return new Map(expanded.map((seriesInfo) => {\n    let series = seriesInfo.series;\n    let label = \"empty\";\n    if (series) {\n      label = series.label();\n    }\n    return [label, seriesInfo];\n  }));\n}\n\nconst useDisplayStyles = makeStyles(theme => ({\n  options: {\n    display: 'initial',\n  },\n  option: {\n    ...baseToggleButtonStyles,\n  },\n}));\n\nconst Display = (props) => {\n  const classes = useDisplayStyles();\n\n  return (\n    <ToggleButtonGroup\n      exclusive\n      value={props.selected}\n      onChange={(event, desired) => desired && props.onChange(desired)}\n      className={classes.options}>\n      {[...props.displays.entries()].map(([key, data]) =>\n        <ToggleButton key={key} value={key} className={classes.option}>\n          {data.label}\n        </ToggleButton>\n      )}\n    </ToggleButtonGroup>\n  );\n};\n\nconst useLegendStyles = makeStyles(theme => ({\n  serieses: {\n    border: `1px solid ${fade(theme.palette.action.active, 0.12)}`,\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: '500px',\n  },\n  series: {\n    border: 'none',\n    color: fade(theme.palette.action.active, 0.12),\n    '&.selected': {\n      backgroundColor: 'initial',\n      color: fade(theme.palette.action.active, 0.8),\n      fontWeight: 'initial',\n    },\n    ...baseToggleButtonStyles,\n  },\n  icon: {\n    paddingRight: '4px',\n  },\n}));\n\nconst Legend = (props) => {\n  const classes = useLegendStyles();\n\n  return (\n    <ToggleButtonGroup\n      value={props.selected}\n      onChange={(event, desired) => props.onChange(desired)}\n      className={classes.serieses}>\n      {props.spec\n        .filter(([label, { derived }]) => !derived)\n        .map(([label, { color, stipple }]) =>\n          <ToggleButton\n            key={label}\n            value={label}\n            classes={{ root: classes.series, selected: 'selected' }}>\n            <span\n              className={classes.icon}\n              style={\n                props.selected.includes(label) ? { color } : {}\n              }>\n              {stipple ? '···' : '—'}\n            </span>\n            {label}\n          </ToggleButton>\n        )}\n    </ToggleButtonGroup>\n  );\n};\n\nconst Chart = (props) => {\n  const ordered = (props.specs || []).sort((a, b) => {\n    if (a.derived && !b.derived) {\n      return -1;\n    } else if (!a.derived && b.derived) {\n      return 1;\n    } else {\n      return a.label < b.label ? -1 : 1;\n    }\n  });\n\n  let YAxis0Color = \"black\";\n  let YAxis1Color = undefined;\n  for (const s of ordered) {\n    if (s.rightAxis) {\n      YAxis1Color = s.color;\n    } else {\n      YAxis0Color = s.color;\n    }\n  }\n\n  function getvRefLines(lines) {\n    let result = (lines || []).map((l, idx) => {\n      return <ReferenceLine key={`vrefline${idx}`}\n        x={l.date}\n        stroke=\"#e3e3e3\"\n        strokeWidth={1}\n      >\n        <Label value={l.label} position={\"insideTop\"} fill=\"#b3b3b3\" />\n      </ReferenceLine>\n    }\n    );\n    return result;\n  }\n\n  function getvRefAreas(lines) {\n    let result = (lines || []).map((l, idx) => {\n      const startdate = l.date;\n      const today = moment().unix();\n      let enddate = startdate + 14 * 24 * 60 * 60;\n      while (enddate > today) {\n        enddate -= 24 * 60 * 60;\n      }\n      return <ReferenceArea key={`vrefarea${idx}`}\n        x1={startdate} x2={enddate}\n        // stroke=\"red\"\n        // strokeOpacity={0.3}\n        fillOpacity={0.15}\n      />\n    }\n    );\n    return result;\n  }\n\n\n  function gethRefLines(lines) {\n    let result = (lines || []).map((l, idx) => {\n      return <ReferenceLine key={`hrefline${idx}`}\n        y={l.value}\n        stroke=\"#e3e3e3\"\n        strokeWidth={1}\n      >\n        <Label value={l.label} position={\"insideLeft\"} ></Label>\n      </ReferenceLine>\n    }\n    );\n    return result;\n  }\n\n  let vRefLines = getvRefLines(props.vRefLines);\n  let hRefLines = gethRefLines(props.hRefLines);\n\n  return (\n    <ResponsiveContainer height={300}>\n      <LineChart data={props.data} margin={{ left: -4, right: 8 }}>\n        {vRefLines}\n        {hRefLines}\n        {getvRefAreas(props.vRefLines)}\n        <Tooltip\n          formatter={valueFormatter}\n          labelFormatter={props.timestampFormatter}\n        />\n        <XAxis\n          dataKey=\"timestamp\"\n          tickFormatter={props.timestampFormatter}\n        />\n        <YAxis\n          yAxisId={0}\n          tick={{ fill: YAxis0Color }}\n          scale={props.scale === 'Log' ? logScale : props.scale}\n          width={50}\n          tickFormatter={props.yAxisFormatter}\n        />\n        {YAxis1Color &&\n          <YAxis\n            yAxisId={1}\n            tickFormatter={props.yAxisFormatter}\n            width={35}\n            tick={{ fill: YAxis1Color }}\n            orientation=\"right\"\n          />\n        }\n        <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n\n        {ordered.flatMap(spec => specToElements(spec))}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nfunction specToElements(spec) {\n  return [lineForSpec(spec)];\n};\n\nfunction lineForSpec(spec) {\n  return (\n    <Line\n      key={spec.label}\n      baseLine={10000}\n      type=\"monotone\"\n      dataKey={spec.label}\n      isAnimationActive={false}\n      fill={spec.color}\n      stroke={spec.color}\n      strokeDasharray={spec.stipple ? '1 2' : undefined}\n      dot={false}\n      strokeWidth={2}\n      yAxisId={spec.rightAxis ? 1 : 0}\n    />\n  );\n};\n\nfunction valueFormatter(value) {\n  if (isNaN(value)) {\n    return 'unknown';\n  } else {\n    if (value < 1) {\n      return (value * 100).toFixed(1) + \"%\";\n    }\n    return value.toFixed(1).replace(/\\.?0+$/, '');\n  }\n}\n","import React from 'react';\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { DataSeries } from '../models/DataSeries';\nimport { getRefLines } from \"../Util\"\n\nconst GraphCountyHospitalization = (props) => {\n  let data = props.hospitalization;\n  let hospitalized =\n    DataSeries.fromOldDataSourceDataPoints(\"Hospitalized\", data, \"hospitalized_covid_patients\");\n  let icu =\n    DataSeries.fromOldDataSourceDataPoints(\"In ICU\", data, \"icu_covid_patients\");\n  let icu_avail =\n    DataSeries.fromOldDataSourceDataPoints(\"Available ICU Beds\", data, \"icu_available_beds\");\n  const vKeyRefLines = getRefLines(props.source);\n  let icu_capacity = props.source.hospitals().bedsICU;\n\n  let hrefs = icu_capacity ? [\n    {\n      value: icu_capacity,\n      label: \"100% ICU\",\n    },\n    {\n      value: icu_capacity / 4,\n      label: \"25% ICU\",\n    },\n    {\n      value: icu_capacity / 2,\n      label: \"50% ICU\",\n    },\n    {\n      value: icu_capacity / 4 * 3,\n      label: \"75% ICU\",\n    },\n  ] : null;\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: hospitalized,\n          color: \"blue\",\n          // covidspecial: true,\n        },\n        {\n          series: icu,\n          color: \"red\",\n          // covidspecial: true,\n        },\n        {\n          series: icu_avail,\n          color: \"#387908\",\n          stipple: true,\n          // covidspecial: true,\n        },\n      ]\n    }\n    vRefLines={vKeyRefLines}\n    hRefLines={hrefs}\n  />;\n};\n\nexport {\n  GraphCountyHospitalization,\n}\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"../CountryContext\"\nimport { Country, State, County } from '../UnitedStates';\nimport { GraphCountyHospitalization } from \"./GraphCountyHospitalization\"\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { DataSeries } from '../models/DataSeries';\nimport { getRefLines } from \"../Util\"\n\nconst GraphAllBedProjectionState = (props) => {\n  return <GraphHospitalization {...props} source={props.state} />\n}\n\nconst GraphAllBedProjectionUS = (props) => {\n  const country = useContext(CountryContext);\n  return <GraphHospitalization {...props} source={country} />\n}\n\nconst GraphHospitalization = (props) => {\n  const source = props.source\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    source.hospitalizationAsync().then(data => setData(data));\n  }, [source]);\n\n  if (!data || data.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let hospitalized = DataSeries.fromOldDataSourceDataPoints(\"Hospitalized\", data, \"hospitalizedCurrently\");\n  let icu =\n    DataSeries.fromOldDataSourceDataPoints(\"In ICU\", data, \"inIcuCurrently\");\n  let onVentilatorCurrently =\n    DataSeries.fromOldDataSourceDataPoints(\"On Ventilator\", data, \"onVentilatorCurrently\")\n  let icu_capacity = source.hospitals().bedsICU;\n\n  let hrefs = icu_capacity ? [\n    {\n      value: icu_capacity,\n      label: \"100% ICU\",\n    },\n    {\n      value: icu_capacity / 4,\n      label: \"25% ICU\",\n    },\n    {\n      value: icu_capacity / 2,\n      label: \"50% ICU\",\n    },\n    {\n      value: icu_capacity / 4 * 3,\n      label: \"75% ICU\",\n    },\n  ] : null;\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: hospitalized,\n          color: \"blue\",\n        },\n        {\n          series: icu,\n          color: \"#387908\",\n        },\n        {\n          series: onVentilatorCurrently,\n          color: \"red\",\n        },\n      ]\n    }\n    vRefLines={getRefLines(source)}\n    hRefLines={hrefs}\n  />;\n}\n\nfunction maybeHospitalizationProjectionTabFor(source) {\n  // Fuck this\n  if (source instanceof Country) {\n    return {\n      id: 'peakhospitalization',\n      label: 'Hospitalization',\n      graph: (props) => <GraphAllBedProjectionUS />,\n    };\n  } else if (source instanceof State) {\n    return {\n      id: 'peakhospitalization',\n      label: 'Hospitalization',\n      graph: (props) => <GraphAllBedProjectionState state={props.source} />,\n    };\n  } else if (source instanceof County) {\n    if (source.hospitalization()) {\n      return {\n        id: 'peakhospitalization',\n        label: 'Hospitalization',\n        graph: (props) => <GraphCountyHospitalization\n          hospitalization={source.hospitalization()}\n          source={source}\n        />,\n      };\n    }\n    return undefined;\n  } else {\n    return undefined;\n  }\n}\n\n// cut here ---\n\nconst GraphVaccinationState = (props) => {\n  return <GraphVaccination {...props} source={props.state} />\n}\n\nexport const GraphVaccinationUSA = (props) => {\n  const source = props.source;\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    source.vaccineDataAsync().then(data => setData(data));\n  }, [source]);\n\n  if (!data) {\n    return null;\n  }\n  let administered = DataSeries.fromOldDataSourceDataPoints(\"Vaccines Administered\", data, \"Administered_Cumulative\");\n  let daily = DataSeries.fromOldDataSourceDataPoints(\"Vaccines Daily\", data, \"Administered_Daily\");\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: administered,\n          color: \"blue\",\n        },\n        {\n          series: daily,\n          color: \"green\",\n          rightAxis: true,\n          showMovingAverage: true,\n          covidspecial: true,\n        },\n      ]\n    }\n  />;\n}\n\nexport const GraphVaccinationCounty = (props) => {\n  const source = props.source;\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    source.vaccineDataAsync().then(data => setData(data));\n  }, [source]);\n\n  if (!data) {\n    return null;\n  }\n  let administered = DataSeries.fromOldDataSourceDataPoints(\"Vaccines Administered\", data, \"doses_administered\");\n  let daily = DataSeries.fromOldDataSourceDataPoints(\"Daily\", data, \"new_doses_administered\");\n  let dailymoving = DataSeries.fromOldDataSourceDataPoints(\"Daily (7-day)\", data, \"new_doses_administered_seven_day_average\");\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: administered,\n          color: \"blue\",\n        },\n        {\n          series: daily,\n          color: \"green\",\n          rightAxis: true,\n          stipple: true,\n        },\n        {\n          series: dailymoving,\n          color: \"green\",\n          rightAxis: true,\n          covidspecial: true,\n        },\n      ]\n    }\n  />;\n}\n\nconst GraphVaccination = (props) => {\n  // const source = props.source;\n  // const [data, setData] = React.useState(null);\n  // React.useEffect(() => {\n  //   source.vaccineDataAsync().then(data => setData(data));\n  // }, [source]);\n\n  // if (!data) {\n  //   return null;\n  // }\n\n  let admin = props.source.vaccineAdminSeries();\n  // let shipped = props.source.vaccineShippedSeries();\n  // let alloc = props.source.vaccineAllocSeries();\n  // let given =\n  // DataSeries.fromOldDataSourceDataPoints(\"New admin\", data, \"Doses_Administered\");\n  // let shipped2 =\n  // DataSeries.fromOldDataSourceDataPoints(\"Doses Distributed\", data, \"Doses_Distributed\");\n\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: admin,\n          color: \"blue\",\n        },\n        // {\n        //   series: shipped,\n        //   color: \"grey\",\n        // },\n        {\n          series: admin.change().setLabel(\"Daily\"),\n          color: \"#387908\",\n          rightAxis: true,\n          covidspecial: true,\n          showMovingAverage: true,\n        },\n      ]\n    }\n  // vRefLines={getRefLines(source)}\n  // hRefLines={hrefs}\n  />;\n}\n\nexport {\n  maybeHospitalizationProjectionTabFor,\n  GraphAllBedProjectionState,\n  GraphAllBedProjectionUS,\n  GraphVaccinationState\n}\n","import React from 'react'\nimport { Summary } from './Summary'\nimport { County, Country, State } from \"../UnitedStates\";\nimport { MapUS } from \"../MapUS\"\nimport { GraphAllBedProjectionState, GraphAllBedProjectionUS, GraphVaccinationState, GraphVaccinationUSA, GraphVaccinationCounty } from \"./GraphHospitalizationProjection\"\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { getRefLines } from \"../Util\"\nimport { GraphCountyHospitalization } from \"./GraphCountyHospitalization\"\n\nconst DailyConfirmedNew = (props) => {\n  const [dataSeries, setDataSeries] = React.useState(null);\n  React.useEffect(() => {\n    props.source.confirmDataSeriesAsync().then(data => setDataSeries(data));\n  }, [props.source])\n\n  if (!dataSeries || dataSeries.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  // end of init\n  let doubling = Math.round(dataSeries.daysTo2X());\n  let dailyGrowth = Math.round(dataSeries.dailyGrowthRate() * 100);\n\n  const vKeyRefLines = getRefLines(props.source);\n\n  console.log(dataSeries);\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: dataSeries,\n          color: \"#ff7300\",\n          covidspecial: true,\n        },\n        {\n          series: dataSeries.change().setLabel(\"New\"),\n          color: \"#387908\",\n          rightAxis: true,\n          covidspecial: true,\n          showMovingAverage: true,\n        },\n        {\n          series: dataSeries.trend().setLabel(`${doubling} Days to 2X (+${dailyGrowth}% Daily)`),\n          color: \"#ff7300\",\n          stipple: true,\n          initial: 'off',\n        },\n      ]\n    }\n    vRefLines={vKeyRefLines}\n  />;\n};\n\nconst DailyDeathNew = (props) => {\n  const [dataSeries, setDataSeries] = React.useState(null);\n  React.useEffect(() => {\n    props.source.deathDataSeriesAsync().then(data => setDataSeries(data));\n  }, [props.source])\n\n  if (!dataSeries || dataSeries.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let doubling = Math.round(dataSeries.daysTo2X());\n  let dailyGrowth = Math.round(dataSeries.dailyGrowthRate() * 100);\n  const vKeyRefLines = getRefLines(props.source);\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: dataSeries,\n          color: \"black\",\n          covidspecial: true,\n        },\n        {\n          series: dataSeries.change().setLabel(\"New\"),\n          color: \"red\",\n          rightAxis: true,\n          covidspecial: true,\n          showMovingAverage: true,\n        },\n        {\n          series: dataSeries.trend().setLabel(`${doubling} Days to 2X (+${dailyGrowth}% Daily)`),\n          color: \"black\",\n          stipple: true,\n          initial: 'off',\n        },\n      ]\n    }\n    vRefLines={vKeyRefLines}\n  />;\n};\n\nconst AtAGlance = (props) => {\n\n  const newconfirm = <DailyConfirmedNew\n    source={props.source}\n  />;\n  const newdeath = <DailyDeathNew\n    source={props.source}\n  />;\n\n  if (props.source instanceof Country) {\n    return <div>\n      <Summary source={props.source} />\n      {newconfirm}\n      {newdeath}\n      <GraphVaccinationUSA source={props.source} key=\"USA_vaccine\" />\n      <MapUS source={props.source} />\n      <GraphAllBedProjectionUS />\n    </div >;\n  }\n\n  if (props.source instanceof State) {\n    return <div>\n      <Summary source={props.source} />\n      {newconfirm}\n      {newdeath}\n      <GraphVaccinationState state={props.source} key=\"state_vaccine\" />\n      <MapUS source={props.source} />\n      <GraphAllBedProjectionState state={props.source} />\n    </div >;\n  }\n\n  if (props.source instanceof County) {\n    return <div>\n      <Summary source={props.source} />\n      {newconfirm}\n      {newdeath}\n      {props.source.state().shortName === \"CA\" &&\n        <GraphVaccinationCounty source={props.source} key=\"county_vaccine\" />\n      }\n      {props.source.hospitalization() &&\n        <GraphCountyHospitalization\n          hospitalization={props.source.hospitalization()}\n          source={props.source}\n        />\n      }\n    </div >;\n  }\n\n  return <div>\n    <Summary source={props.source} />\n    {newconfirm}\n    {newdeath}\n  </div >;\n}\n\nexport { AtAGlance };\n","import React from 'react'\nimport { County, Country, State } from \"../UnitedStates\";\nimport { GraphVaccinationState, GraphVaccinationUSA, GraphVaccinationCounty } from \"./GraphHospitalizationProjection\"\n\nexport const GraphVaccination = (props) => {\n    if (props.source instanceof Country) {\n        return <div>\n            <GraphVaccinationUSA source={props.source} key=\"USA_vaccine\" />\n        </div >;\n    }\n\n    if (props.source instanceof State) {\n        return <div>\n            <GraphVaccinationState state={props.source} key=\"state_vaccine\" />\n        </div >;\n    }\n\n    if (props.source instanceof County) {\n        return <div>\n            {props.source.state().shortName === \"CA\" &&\n                <GraphVaccinationCounty source={props.source} key=\"county_vaccine\" />\n            }\n        </div >;\n    }\n\n    return <div> </div >;\n}\n","import React from 'react'\nimport { Summary } from './Summary'\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { getRefLines } from \"../Util\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst DailyConfirmedNew = (props) => {\n  const [dataSeries, setDataSeries] = React.useState(null);\n  React.useEffect(() => {\n    props.source.confirmDataSeriesAsync().then(data => setDataSeries(data));\n  }, [props.source])\n\n  if (!dataSeries || dataSeries.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  const vKeyRefLines = getRefLines(props.source);\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: dataSeries.change().setLabel(\"New\"),\n          color: \"#387908\",\n          covidspecial: true,\n          showMovingAverage: true,\n        },\n      ]\n    }\n    vRefLines={vKeyRefLines}\n    showControls={false}\n    title={props.source.name}\n    subtitle={`Avg ${Math.round(props.source.serverityIndex() * 100000 / 14)}/100K/day past 2 weeks`}\n  />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  graph: {\n    // maxWidth: 400,\n    minWidth: 350,\n  }\n}));\n\nconst ChildrenAtAGlance = (props) => {\n  const classes = useStyles();\n\n  const children_sorted = props.source.children().sort((a, b) => {\n    // return b.summary().confirmed - a.summary().confirmed;\n    return b.serverityIndex() - a.serverityIndex();\n  });\n\n  const display = children_sorted.map(child => {\n    return <div className={classes.graph}>\n      <DailyConfirmedNew\n        source={child}\n      />\n    </div>\n  });\n\n  return <div>\n    <Summary source={props.source} />\n    <div className={classes.container}>\n      {display}\n    </div>\n  </div >;\n}\n\nexport { ChildrenAtAGlance };\n","import React from 'react'\nimport { Summary } from './Summary'\nimport { County } from \"../UnitedStates\";\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { DataSeries } from '../models/DataSeries';\nimport { getRefLines } from \"../Util\"\n\nconst PerCapitaCompare = (props) => {\n  const [USData, setUSdata] = React.useState(null);\n  React.useEffect(() => {\n    props.source.dataPointsAsync().then(data => setUSdata(data));\n  }, [props.source])\n\n  if (!USData || USData.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let all = [props.source];\n  let metro = props.source.metro();\n  if (metro) {\n    all.push(metro);\n  }\n  all.push(props.source.state())\n  all.push(props.source.state().country());\n  const colors = [\n    \"#387908\",\n    \"#ff7300\",\n    \"blue\",\n    \"black\",\n  ]\n  let color_index = 0;\n  const serieses = all.map(s => {\n    let data = (s === props.source) ? USData : s.dataPoints();\n    let series = DataSeries\n      .fromOldDataSourceDataPoints(\"data\", data, props.dataColumn)\n      .change()\n      .nDayAverage(7)\n      .capita(s.population() / 100000)\n      .setLabel(s.name);\n    return {\n      series: series,\n      color: colors[color_index++],\n      stipple: s !== props.source,\n    };\n  })\n\n  const vKeyRefLines = getRefLines(props.source);\n  return <AdvancedGraph\n    title={props.title}\n    serieses={serieses}\n    vRefLines={vKeyRefLines}\n  />\n};\n\nconst CovidCompare = (props) => {\n  if (props.source instanceof County) {\n    return <div>\n      <Summary source={props.source} />\n      <PerCapitaCompare\n        title={\"New Cases/100K (7-day average)\"}\n        source={props.source}\n        dataColumn={\"confirmed\"}\n      />\n      <PerCapitaCompare\n        title={\"Deaths/100K (7-day average)\"}\n        source={props.source}\n        dataColumn={\"death\"}\n      />\n    </div >;\n  }\n\n  return <div>\n    Not Implemented\n  </div >;\n}\n\nexport { CovidCompare };\n","import React from 'react';\nimport { ResponsiveContainer, Tooltip, LineChart, Line, YAxis, XAxis, CartesianGrid, Legend } from 'recharts';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { myShortNumber, filterDataToRecent, getOldestMomentInData, useStickyState } from '../Util';\nimport { DateRangeSlider } from \"../DateRangeSlider\"\n\nconst moment = require(\"moment\");\n\nconst GraphDaysToDoubleOverTime = (props) => {\n\n    const [state, setState] = useStickyState({\n        defaultValue: {\n            showPastDays: 30,\n        },\n        cookieId: \"DaysToDoubleOverTimeGraphPreferences\"\n    });\n\n    const [mydata, setMydata] = React.useState(null);\n    React.useEffect(() => {\n        props.source.daysToDoubleTimeSeries()\n            .then(data => setMydata(data));\n    }, [props.source])\n\n    if (!mydata || mydata.length === 0) {\n        return <div>loading</div>;\n    }\n\n    let data = mydata;\n\n    data = data.map(d => {\n        d.name = moment(d.fulldate, \"MM/DD/YYYY\").format(\"M/D\");\n        d.confirmed = d.confirmed ? parseFloat(d.confirmed.toFixed(1)) : null;\n        d.death = d.death ? parseFloat(d.death.toFixed(1)) : null;\n        return d;\n    });\n\n    const handleSliderValueChange = (value) => {\n        let newstate = { ...state, showPastDays: value }\n        setState(newstate)\n    }\n\n    const oldestMoment = getOldestMomentInData(data);\n    data = filterDataToRecent(data, state.showPastDays)\n\n    const formatYAxis = (tickItem) => {\n        return myShortNumber(tickItem);\n    }\n\n    data = data.sort((a, b) => moment(a.fulldate, \"MM/DD/YYYY\").toDate() - (moment(b.fulldate, \"MM/DD/YYYY\")).toDate());\n\n    return <>\n        <Grid container alignItems=\"center\" spacing={1}>\n            <Grid xs sm=\"auto\"></Grid>\n            <Grid item xs=\"auto\">\n                <Typography>\n                  Date:\n                </Typography>\n            </Grid>\n            <Grid item xs={5} sm={3}>\n              <DateRangeSlider\n                  currentDate={moment()}\n                  startDate={oldestMoment}\n                  valueChanged={handleSliderValueChange}\n                  defaultValue={state.showPastDays}\n              />\n            </Grid>\n            <Grid xs></Grid>\n            <Grid item xs={12} sm=\"auto\">\n                <Typography align=\"center\">\n                    High Days-to-2x means slower spread.\n                </Typography>\n            </Grid>\n        </Grid >\n        <ResponsiveContainer height={300} >\n            <LineChart\n                data={data}\n                margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" />\n                <YAxis yAxisId={0} tickFormatter={formatYAxis} />\n                <Tooltip />\n\n                <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n                <Line type=\"monotone\" dataKey=\"confirmed\" stroke=\"#387908\" yAxisId={0} strokeWidth={2} dot={{ r: 1 }} />\n                <Line type=\"monotone\" dataKey=\"death\" stroke=\"#000000\" yAxisId={0} strokeWidth={3} dot={{ r: 1 }} />\n                <Legend verticalAlign=\"top\" />\n\n            </LineChart></ResponsiveContainer>\n    </>\n}\n\nexport { GraphDaysToDoubleOverTime };\n","import React from 'react';\nimport { ResponsiveContainer, Tooltip, LineChart, Line, YAxis, XAxis, CartesianGrid, Legend } from 'recharts';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { myShortNumber } from '../Util';\nimport { AntSwitch } from \"./AntSwitch.js\"\n\nconst moment = require(\"moment\");\n\nconst GraphGrowthRateOverTime = (props) => {\n\n    const [state, setState] = React.useState({\n        show2weeks: false,\n    });\n\n    const [mydata, setMydata] = React.useState(null);\n    React.useEffect(() => {\n        props.source.growthRateTimeSeries()\n            .then(data => setMydata(data));\n    }, [props.source])\n\n    if (!mydata || mydata.length === 0) {\n        return <div>loading</div>;\n    }\n\n    let data = mydata;\n\n    const handle2WeeksToggle = event => {\n        setState({ ...state, show2weeks: !state.show2weeks });\n    };\n\n    data = data.map(d => {\n        return {\n            fulldate: d.fulldate,\n            name: moment(d.fulldate, \"MM/DD/YYYY\").format(\"M/D\"),\n            confirmed: d.confirmed && isFinite(d.confirmed) ? parseFloat((100 * d.confirmed).toFixed(1)) : null,\n            death: d.death && isFinite(d.death) ? parseFloat((100 * d.death).toFixed(1)) : null,\n        };\n    });\n\n    if (state.show2weeks) {\n        // const cutoff = moment().subtract(14, 'days')\n        // data = data.filter(d => {\n        // return moment(d.fulldate, \"MM/DD/YYYY\").isAfter(cutoff)\n        // });\n    } else {\n        const cutoff = moment().subtract(30, 'days')\n        data = data.filter(d => {\n            return moment(d.fulldate, \"MM/DD/YYYY\").isAfter(cutoff)\n        });\n    }\n    const formatYAxis = (tickItem) => {\n        return myShortNumber(tickItem) + ' %';\n    }\n\n    data = data.sort((a, b) => moment(a.fulldate, \"MM/DD/YYYY\").toDate() - (moment(b.fulldate, \"MM/DD/YYYY\")).toDate());\n\n    return <>\n        <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item >\n                <Typography variant=\"body1\">\n                    Daily Growth Rate\n                </Typography>\n            </Grid>\n            <Grid item xs />\n            <Grid item>\n                <AntSwitch checked={state.show30days} onClick={handle2WeeksToggle} />\n            </Grid>\n            <Grid item onClick={handle2WeeksToggle}>\n                <Typography>\n                    All Dates\n                </Typography>\n            </Grid>\n        </Grid >\n        <ResponsiveContainer height={300} >\n            <LineChart\n                data={data}\n                margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" />\n                <YAxis yAxisId={0} tickFormatter={formatYAxis} />\n                <Tooltip formatter={(value) => `${value}%`} />\n\n                <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n                <Line type=\"monotone\" dataKey=\"confirmed\" stroke=\"#387908\" yAxisId={0} strokeWidth={2} dot={{ r: 1 }} />\n                <Line type=\"monotone\" dataKey=\"death\" stroke=\"#000000\" yAxisId={0} strokeWidth={3} dot={{ r: 1 }} />\n                <Legend verticalAlign=\"top\" />\n\n            </LineChart>\n        </ResponsiveContainer>\n    </>\n}\n\nexport { GraphGrowthRateOverTime };\n","import React from 'react';\nimport { ResponsiveContainer, Tooltip, LineChart, Line, YAxis, XAxis, CartesianGrid } from 'recharts';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { scaleSymlog } from 'd3-scale';\nimport { myShortNumber, filterDataToRecent, getOldestMomentInData, useStickyState } from '../Util';\nimport { AntSwitch } from \"./AntSwitch.js\"\nimport { State } from '../UnitedStates';\nimport { DateRangeSlider } from \"../DateRangeSlider\"\nimport axisScales from './GraphAxisScales'\n\nconst moment = require(\"moment\");\n\nconst scale = scaleSymlog().domain([0, 'dataMax']);\n\nconst BasicGraphRecoveryAndDeath = (props) => {\n    const [state, setState] = useStickyState({\n        defaultValue: {\n            verticalScale: axisScales.linear,\n            showPastDays: 30,\n        },\n        cookieId: \"RecoveryAndDeathGraphPreferences\"\n    });\n\n    const [USData, setUSdata] = React.useState(null);\n    React.useEffect(() => {\n        props.source.dataPointsAsync().then(data => setUSdata(data));\n    }, [props.source])\n\n    if (!USData || USData.length === 0) {\n        return <div> Loading</div>;\n    }\n\n    let data = USData;\n\n    const handleLogScaleToggle = event => {\n        setState({\n            ...state,\n            verticalScale: state.verticalScale === axisScales.log ? axisScales.linear : axisScales.log\n        });\n    };\n\n    data = data.map(d => {\n        d.name = moment(d.fulldate, \"MM/DD/YYYY\").format(\"M/D\");\n        return d;\n    });\n\n\n    const formatYAxis = (tickItem) => {\n        return myShortNumber(tickItem);\n    }\n\n    const handleSliderValueChange = (value) => {\n        let newstate = { ...state, showPastDays: value }\n        setState(newstate)\n    }\n\n    const oldestMoment = getOldestMomentInData(data);\n    data = filterDataToRecent(data, state.showPastDays)\n\n    data = data.sort((a, b) => moment(a.fulldate, \"MM/DD/YYYY\").toDate() - (moment(b.fulldate, \"MM/DD/YYYY\")).toDate());\n\n    return <>\n        <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item>\n                <AntSwitch checked={state.verticalScale === axisScales.log} onClick={handleLogScaleToggle} />\n            </Grid>\n            <Grid item onClick={handleLogScaleToggle}>\n                <Typography>\n                    Log\n                </Typography>\n            </Grid>\n            <Grid item > </Grid>\n            <Grid item>\n                <Typography>\n                  Show Data From:\n                </Typography>\n            </Grid>\n            <Grid item xs>\n              <DateRangeSlider\n                  currentDate={moment()}\n                  startDate={oldestMoment}\n                  valueChanged={handleSliderValueChange}\n                  defaultValue={state.showPastDays}\n              />\n            </Grid>\n            <Grid item > </Grid>\n        </Grid>\n        <ResponsiveContainer height={300} >\n            <LineChart\n                data={data}\n                margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" />\n\n                {\n                    state.verticalScale === axisScales.log ?\n                        <YAxis yAxisId={0} scale={scale} /> :\n                        <YAxis yAxisId={0} tickFormatter={formatYAxis} />\n                }\n\n                <Tooltip />\n\n                <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n                <Line type=\"monotone\" dataKey=\"recovery\" stroke=\"#387908\" yAxisId={0} strokeWidth={2} />\n                <Line type=\"monotone\" dataKey=\"death\" stroke=\"#000000\" yAxisId={0} strokeWidth={3} />\n\n            </LineChart></ResponsiveContainer>\n    </>\n}\n\nconst CaveatStateGraph = (props) => {\n    return (\n        <>\n            <Typography variant=\"body2\">\n                Recovery data collection started on 4/2.\n              {props.source.summary().recovered > 0 ||\n                    \" No recovery data for this state yet.\"\n                }\n            </Typography>\n            <BasicGraphRecoveryAndDeath source={props.source} />\n        </>\n    );\n}\n\nfunction maybeRecoveryAndDeathTabFor(source) {\n    let graph;\n    if (source instanceof State) {\n        graph = CaveatStateGraph;\n    } else if (source.summary().recovered) {\n        graph = BasicGraphRecoveryAndDeath;\n    } else {\n        // Avoid showing hopeless graphs\n        return undefined;\n    }\n\n    return {\n        id: 'recovery',\n        label: 'Recovery',\n        graph,\n    };\n}\n\nexport { maybeRecoveryAndDeathTabFor };\n","import React from 'react';\nimport {\n  ResponsiveContainer, AreaChart, Area, YAxis, XAxis, Tooltip,\n  CartesianGrid, Legend, LineChart, Line\n} from 'recharts';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { myShortNumber } from '../Util.js';\nimport { mergeDataSeries, makeDataSeriesFromTotal, exportColumnFromDataSeries } from \"./DataSeries\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { withRouter } from 'react-router-dom'\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { DataSeries } from '../models/DataSeries';\nimport { getRefLines } from \"../Util\"\n\nconst useStyles = makeStyles(theme => ({\n  customtooltip: {\n    backgroundColor: \"#FFFFFF\",\n  }\n}));\n\nconst CustomTooltip = (props) => {\n  const classes = useStyles();\n  const { active } = props;\n  if (active) {\n    const { payload, label } = props;\n    let tested;\n    let positive;\n    let negative;\n    let totalPositve;\n    let totalTested;\n    let totalNegative;\n    let totalPending;\n\n    payload.map(p => {\n      p = p.payload;\n      if (\"testsThatDay\" in p) {\n        tested = p.testsThatDay;\n      }\n      if (\"positiveThatDay\" in p) {\n        positive = p.positiveThatDay;\n      }\n      if (\"negativeThatDay\" in p) {\n        negative = p.negativeThatDay;\n      }\n      if (\"positive\" in p) {\n        totalPositve = p.positive;\n      }\n      if (\"negative\" in p) {\n        totalNegative = p.negative;\n      }\n      if (\"pending\" in p) {\n        totalPending = p.pending;\n      }\n      if (\"total\" in p) {\n        totalTested = p.total;\n        if (totalTested === 0) {\n          totalTested = p.totalTestResults;\n        }\n      }\n      return null;\n    });\n\n    return (\n      <div className={classes.customtooltip}>\n        <Typography variant=\"body1\" noWrap>\n          {label}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Daily Tested: ${tested}`}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Daily Positve : ${positive}`}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Daily Negative : ${negative}`}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Cumulative Positve Rate : ${(totalPositve / totalTested * 100).toFixed(1)} %`}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Cumulative Negative Rate : ${(totalNegative / totalTested * 100).toFixed(1)} %`}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Pending: ${totalPending ? totalPending : 0}`}\n        </Typography>\n      </div>\n    );\n  }\n  return null;\n}\n\nconst formatYAxis = (tickItem) => {\n  return myShortNumber(tickItem);\n}\n\nfunction maybeFindTesting(source) {\n  let ancestor = source;\n  while (!ancestor.testing && ancestor.parent) {\n    ancestor = ancestor.parent();\n  }\n  return ancestor;\n}\n\n\nconst PostiveRate7Days = (props) => {\n\n  const [sourceData, setSourceData] = React.useState(null);\n\n  React.useEffect(() => {\n    props.source.testingAsync()\n      .then(data => setSourceData(data));\n  }, [props.source])\n\n  if (!sourceData || sourceData.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let totalTestResults_series = DataSeries.fromOldDataSourceDataPoints(\"Tests\", sourceData, \"totalTestResults\");\n  let totalPositve_series = DataSeries.fromOldDataSourceDataPoints(\"Positive\", sourceData, \"positive\");\n\n  let positveDaily = totalPositve_series.change().nDayAverage(7);\n  let testsDialy = totalTestResults_series.change().nDayAverage(7);\n  let rate = positveDaily.divide(testsDialy).setLabel(\"Positive Rate 7-days\");\n\n  const vRefLines = getRefLines();\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: totalPositve_series.change().nDayAverage(7),\n          color: 'red',\n          initial: 'off',\n          rightAxis: true,\n        },\n        {\n          series: totalTestResults_series.change().nDayAverage(7),\n          color: 'blue',\n          initial: 'off',\n          rightAxis: true,\n        },\n        {\n          series: rate,\n          color: 'orange',\n        },\n      ]\n    }\n    vRefLines={vRefLines}\n    yAxisFormatter={(y) => {\n      return y * 100 + \"%\";\n    }}\n  />;\n}\n\nconst GraphTestingWidget = withRouter((props) => {\n  let subtabs = new Map([\n    ['positverate', {\n      label: \"Positive Rate 7-days\",\n      widget: <PostiveRate7Days {...props} />\n    }],\n    ['effort', {\n      label: \"Test Effort\",\n      widget: <GraphTestingWidget1 {...props} />\n    }],\n    ['result', {\n      label: \"Results\",\n      widget: <GraphTestingWidget1 {...props} chart=\"result\" />\n    }],\n  ]);\n\n  let desired = getURLParam(props.history.location.search, \"detailed\");\n  if (!subtabs.has(desired)) {\n    desired = subtabs.keys().next().value;\n  }\n  const [subtab, setSubtab] = React.useState(desired);\n\n  const buttonGroup = <ToggleButtonGroup\n    value={subtab}\n    exclusive\n    size=\"small\"\n    onChange={(e, newvalue) => {\n      setSubtab(newvalue)\n      pushChangeTo(props.history, \"detailed\", newvalue);\n    }}\n  >\n    {[...subtabs].map(([id, { label }]) =>\n      <ToggleButton key={id} value={id}>{label}</ToggleButton>\n    )}\n  </ToggleButtonGroup>;\n\n  return <div>\n    {buttonGroup}\n    {subtabs.get(desired).widget}\n  </div>;\n});\n\nconst GraphTestingWidget1 = (props) => {\n  const [sourceData, setSourceData] = React.useState(null);\n  const useAreaChart = props.chart === \"result\";\n\n  React.useEffect(() => {\n    props.source.testingAsync()\n      .then(data => setSourceData(data));\n  }, [props.source])\n\n  if (!sourceData || sourceData.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let data = sourceData.sort(function (a, b) {\n    return a.date - b.date;\n  });\n\n  let testTotalArray = exportColumnFromDataSeries(data, \"totalTestResults\");\n  let testPostives = exportColumnFromDataSeries(data, \"positive\");\n  // negative field is not reliable, instead of relying on it, let's compute it instead.\n  // let testNegatives = exportColumnFromDataSeries(data, \"negative\");\n  let testNegatives = {};\n  for (let i in testTotalArray) {\n    testNegatives[i] = testTotalArray[i] - testPostives[i];\n  }\n\n  let total = makeDataSeriesFromTotal(testTotalArray, \"total\", \"testsThatDay\", \"testsThatDay_avg\");\n  let pos = makeDataSeriesFromTotal(testPostives, \"postive\", \"positiveThatDay\", \"positiveThatDay_avg\");\n  let neg = makeDataSeriesFromTotal(testNegatives, \"negative\", \"negativeThatDay\", \"negativeThatDay_avg\");\n  data = mergeDataSeries(data, total);\n  data = mergeDataSeries(data, pos);\n  data = mergeDataSeries(data, neg);\n\n  let total_tests = data.reduce((m, a) => { return a.total > m ? a.total : m }, 0);\n  let total_positives = data.reduce((m, a) => { return a.positive > m ? a.positive : m }, 0);\n  let total_negatives = data.reduce((m, a) => { return a.negative > m ? a.negative : m }, 0);\n  if (total_tests === 0) {\n    total_tests = data.reduce((m, a) => { return a.totalTestResults > m ? a.totalTestResults : m }, 0);\n    let testTotalArray = exportColumnFromDataSeries(data, \"totalTestResults\");\n    let total = makeDataSeriesFromTotal(testTotalArray, \"totalTestResults\", \"testsThatDay\", \"testsThatDay_avg\");\n    data = mergeDataSeries(data, total);\n  }\n  // If true, show area chart.\n  // If false, show line chart.\n  let chart = useAreaChart ?\n    <AreaChart\n      data={data}\n      margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n    >\n      <YAxis tickFormatter={formatYAxis} />\n      <XAxis dataKey=\"name\" />\n      <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n      {/* <Line type=\"monotone\" name=\"Total Tested\" dataKey=\"total\" stroke=\"#387908\" yAxisId={0} strokeWidth={3} />\n        <Line type=\"monotone\" name=\"Tested Positive\" dataKey=\"positive\" stroke=\"#ff7300\" yAxisId={0} strokeWidth={3} /> */}\n      <Area stackId=\"1\" type=\"monotone\" name=\"Positive\" dataKey=\"positiveThatDay\" stroke=\"#ff7300\" fill=\"#ff7300\" yAxisId={0} strokeWidth={3} />\n      <Area stackId=\"1\" type=\"monotone\" name=\"Negative\" dataKey=\"negativeThatDay\" stroke=\"#00aeef\" fill=\"#00aeef\" yAxisId={0} strokeWidth={3} />\n      {/* <Area stackId=\"1\" type=\"monotone\" name=\"Pending\" dataKey=\"pendingThatDay\" stroke=\"#387908\" fill=\"#387908\" yAxisId={0} strokeWidth={3} /> */}\n      <Legend verticalAlign=\"top\" />\n      <Tooltip content={<CustomTooltip />} />\n    </AreaChart>\n    :\n    <LineChart\n      data={data}\n      margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n    >\n      <YAxis tickFormatter={formatYAxis} />\n      <XAxis dataKey=\"name\" />\n      <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n      {/* <Line type=\"monotone\" name=\"Total\" dataKey=\"total\" stroke=\"#ff7300\" yAxisId={0} strokeWidth={3} /> */}\n      <Line type=\"monotone\" name=\"Daily\" dataKey=\"testsThatDay\" dot={{ r: 1 }} strokeDasharray=\"2 2\" stroke=\"#387908\" yAxisId={0} strokeWidth={1} />\n      <Line type=\"monotone\" name=\"3d daily avg\" dataKey=\"testsThatDay_avg\" dot={{ r: 1 }} stroke=\"#387908\" yAxisId={0} strokeWidth={2} />\n      <Line type=\"monotone\" name=\"Positive\" dataKey=\"positiveThatDay\" dot={{ r: 1 }} strokeDasharray=\"2 2\" stroke=\"#a3a3a3\" yAxisId={0} strokeWidth={1} />\n      <Line type=\"monotone\" name=\"3d daily avg\" dataKey=\"positiveThatDay_avg\" dot={{ r: 1 }} stroke=\"#a3a3a3\" yAxisId={0} strokeWidth={2} />\n      {/* <Line type=\"monotone\" name=\"Negative\" dataKey=\"negativeThatDay\" stroke=\"#00aeef\" yAxisId={0} strokeWidth={3} /> */}\n      <Legend verticalAlign=\"top\" />\n      <Tooltip content={<CustomTooltip />} />\n    </LineChart>\n\n  return <div>\n    <Grid container alignItems=\"center\" justify=\"space-between\" spacing={1}>\n      <Grid item container xs={12} sm={12} md={6} alignItems=\"center\" justify=\"flex-start\" spacing={1}>\n        <Grid item>\n          <Typography variant=\"body2\" noWrap>\n            {`Total: ${myShortNumber(total_tests)}\n                    Pos.:${(total_positives / total_tests * 100).toFixed(0)}%\n                    Neg.: ${(total_negatives / total_tests * 100).toFixed(0)}%\n                    `}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n    <ResponsiveContainer height={300} >\n      {chart}\n    </ResponsiveContainer>\n    <Typography variant=\"body2\" noWrap>\n      Data source: https://covidtracking.com/api/\n        </Typography>\n  </div>;\n}\n\nfunction maybeTestingTabFor(source) {\n  if (source.testingAsync) {\n    return {\n      id: 'testing',\n      label: 'Tests',\n      graph: GraphTestingWidget,\n    };\n  } else {\n    const maybeAncestor = maybeFindTesting(source);\n    if (maybeAncestor.testing) {\n      return {\n        id: 'testing',\n        label: `${maybeAncestor.name} Testing`,\n        graph: GraphTestingWidget,\n      };\n    } else {\n      return undefined;\n    }\n  }\n}\n\n\nfunction getURLParam(url, key) {\n  const params = new URLSearchParams(url);\n  if (params.has(key)) {\n    return params.get(key);\n  } else {\n    return undefined;\n  }\n}\n\nfunction pushChangeTo(history, key, value) {\n  const params = new URLSearchParams(history.location.search);\n  params.set(key, value);\n  history.location.search = params.toString();\n  history.push(history.location)\n}\n\nexport { maybeTestingTabFor };\n","import React from 'react';\nimport { getRefLines } from \"../Util\"\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\n\nconst GraphDaily = (props) => {\n  const [confirmedSeries, setConfimedSeries] = React.useState(null);\n  const [deathSeries, setDeathSeries] = React.useState(null);\n  const [hosptializationCurrentlySeries, setHospitalizationCurrentSeries] = React.useState(null);\n\n  React.useEffect(() => {\n    props.source.confirmDataSeriesAsync().then(data => setConfimedSeries(data));\n    props.source.deathDataSeriesAsync().then(data => setDeathSeries(data));\n    if (props.source.hospitalizationCurrentlyAsync) {\n      props.source.hospitalizationCurrentlyAsync().then(data => setHospitalizationCurrentSeries(data));\n    }\n  }, [props.source])\n\n  if (\n    !confirmedSeries || confirmedSeries.length === 0 ||\n    (props.source.testingAsync && (!hosptializationCurrentlySeries || hosptializationCurrentlySeries.length === 0)) ||\n    !deathSeries || deathSeries.length === 0\n  ) {\n    return <div> Loading</div>;\n  }\n\n  console.log(hosptializationCurrentlySeries);\n\n  // end of init\n  const vKeyRefLines = getRefLines(props.source);\n\n  const series =\n    [\n      {\n        series: confirmedSeries\n          .change()\n          // .nDayAverage(7)\n          .setLabel(\"New Confirm\"),\n        color: \"#387908\",\n        covidspecial: true,\n        showMovingAverage: true,\n      },\n      {\n        series: deathSeries\n          .change()\n          // .nDayAverage(7)\n          .setLabel(\"New Death\"),\n        color: \"red\",\n        rightAxis: true,\n        covidspecial: true,\n        showMovingAverage: true,\n      },\n    ]\n  if (props.source.hospitalizationCurrentlyAsync) {\n    series.push(\n      {\n        series: hosptializationCurrentlySeries.setLabel(\"Hospitalized (left axis)\"),\n        color: \"blue\",\n        covidspecial: true,\n        // showMovingAverage: true,\n      }\n    );\n  }\n\n  return <AdvancedGraph\n    serieses={series}\n    vRefLines={vKeyRefLines}\n  />;\n};\n\nfunction maybeDailyTabFor(source) {\n  return {\n    id: 'daily',\n    label: 'Daily',\n    graph: GraphDaily\n  };\n}\n\nexport { maybeDailyTabFor };\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Badge from '@material-ui/core/Badge';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom'\nimport { AtAGlance } from './AtAGlance.js'\nimport { GraphVaccination } from \"./GraphVaccination\"\nimport { ChildrenAtAGlance } from './ChildrenAtAGlance.js'\nimport { CovidCompare } from './CovidCompare.js'\nimport { GraphDaysToDoubleOverTime } from './GraphDaysToDoubleOverTime'\nimport { GraphGrowthRateOverTime } from './GraphGrowthRateOverTime'\nimport { maybeHospitalizationProjectionTabFor } from './GraphHospitalizationProjection';\nimport { maybeMapTabFor } from '../Map';\nimport { maybeRecoveryAndDeathTabFor } from './GraphRecoveryAndDeath.js'\nimport { maybeTestingTabFor } from './GraphTestingEffort'\nimport { maybeDailyTabFor } from './GraphDaily'\nimport { Country, State, County, Metro } from \"../UnitedStates\"\n\nconst styles = theme => ({\n  content: {\n    margin: '0 2px 2px 2px',\n  },\n  location: {\n    margin: '2px 0',\n  },\n  detailedToggles: {\n    margin: '12px 0',\n  },\n  tabContent: {\n    padding: '2px',\n  }\n});\n\nconst RibbonBadge = withStyles({\n  badge: {\n    borderRadius: '0px',\n    fontSize: '0.3rem',\n    transform: 'rotate(15deg)',\n    height: '10px',\n    minWidth: '10px',\n    right: '-15px',\n  }\n})(Badge);\n\n\nclass UnhookedGraphSection extends React.Component {\n\n  static getDerivedStateFromProps(props, state) {\n    const desired = UnhookedGraphSection.getDesiredState(props);\n    if (!state || state.tab !== desired.tab) {\n      return desired;\n    } else {\n      return null;\n    }\n  }\n\n  static getDesiredState(props) {\n    return { tab: getUnvalidated(props.location, 'tab') };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = UnhookedGraphSection.getDesiredState(props);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const history = this.props.history;\n    const source = this.props.source;\n    const tabs = new Map();\n\n    tabs.set('glance', {\n      label: \"At a glance\",\n      content: AtAGlance,\n    });\n\n    if (!(source instanceof Metro)) {\n      if (((source instanceof County) && (source.state().shortName === \"CA\")) ||\n        !(source instanceof County)) {\n        tabs.set('vaccination', {\n          label: \"Vaccination\",\n          content: GraphVaccination,\n          showRibbon: true,\n        });\n      }\n    }\n\n    if (!(source instanceof County)) {\n      tabs.set('childrenglance', {\n        label: \"Sub-Regions\",\n        content: ChildrenAtAGlance,\n        showRibbon: true,\n      });\n    }\n\n    const maybeDaily = maybeDailyTabFor(source);\n    if (maybeDaily) {\n      tabs.set(maybeDaily.id, {\n        label: maybeDaily.label,\n        content: maybeDaily.graph,\n      });\n    }\n\n    if (source instanceof County) {\n      tabs.set(\"compare\", {\n        label: \"Compare\",\n        content: CovidCompare,\n        showRibbon: true,\n      });\n    }\n\n    [maybeHospitalizationProjectionTabFor]\n      .map(factory => factory(source))\n      .filter(tab => tab)\n      .forEach(tab =>\n        tabs.set(tab.id, {\n          label: tab.label,\n          content: tab.graph,\n        }));\n\n    if (source instanceof State || source instanceof Country) {\n      const maybeTesting = maybeTestingTabFor(source)\n      if (maybeTesting) {\n        tabs.set(maybeTesting.id, {\n          label: maybeTesting.label,\n          content: maybeTesting.graph,\n        });\n      }\n    }\n    const maybeMap = maybeMapTabFor(source);\n    if (maybeMap) {\n      tabs.set(maybeMap.id, {\n        label: maybeMap.label,\n        content: maybeMap.content,\n        // showRibbon: true,  // TO SHOW THE RIBBON ADD A LINE LIKE THIS\n      });\n    }\n\n    tabs.set('growthRate', {\n      label: \"Growth\",\n      content: GraphGrowthRateOverTime,\n    });\n\n    tabs.set('days2x', {\n      label: \"Doubling\",\n      content: GraphDaysToDoubleOverTime,\n    });\n\n    const maybeRecovery = maybeRecoveryAndDeathTabFor(source);\n    if (maybeRecovery && (source instanceof State || source instanceof Country)) {\n      tabs.set(maybeRecovery.id, {\n        label: \"Recovery\",\n        content: maybeRecovery.graph,\n      });\n    }\n\n    const headings = [...tabs.keys()];\n    let tab;\n    if (headings.includes(this.state.tab)) {\n      tab = this.state.tab;\n    } else {\n      tab = headings[0];\n    }\n\n    const switchTo = (e, index) => {\n      const desire = headings[index];\n      this.setState({ tab: desire });\n      pushChangeTo(history, 'tab', desire);\n    };\n    const TabContent = tabs.get(tab).content;\n\n    return (\n      <div className={classes.content}>\n        <Tabs\n          value={headings.indexOf(tab)}\n          onChange={switchTo}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\">\n          {[...tabs.values()].map(tab => {\n            const label = tab.showRibbon ? <RibbonBadge badgeContent='New' color=\"error\">{tab.label}</RibbonBadge> : tab.label;\n            return <Tab label={label} key={tab.label} />;\n          })}\n        </Tabs>\n        <Paper className={classes.tabContent}>\n          <TabContent source={source} />\n        </Paper>\n      </div>\n    );\n  }\n}\nexport const GraphSection =\n  withRouter(withStyles(styles)(UnhookedGraphSection));\n\nfunction getUnvalidated(location, key) {\n  const params = new URLSearchParams(location.search);\n  if (params.has(key)) {\n    return params.get(key);\n  } else {\n    return undefined;\n  }\n}\n\nfunction pushChangeTo(history, key, value) {\n  const params = new URLSearchParams(history.location.search);\n  params.set(key, value);\n  history.location.search = params.toString();\n  history.push(history.location)\n}\n","import { State, Country, Metro } from './UnitedStates';\nimport { MapUS } from './MapUS'\n\nfunction maybeMapTabFor(source) {\n    if (source instanceof State) {\n        return {\n            id: 'map',\n            label: 'Map',\n            content: MapUS,\n        };\n    } else if (source instanceof Country) {\n        return {\n            id: 'map',\n            label: 'Map',\n            content: MapUS,\n        };\n    } else if (source instanceof Metro) {\n        return {\n            id: 'map',\n            label: 'Map',\n            content: MapUS,\n        };\n    } else {\n        return undefined;\n    }\n}\n\nexport { maybeMapTabFor }\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\n\nfunction descendingComparator(a, b, orderBy) {\n\n  if (isNaN(a[orderBy] && !isNaN(b[orderBy]))) {\n    return 1;\n  }\n  if (isNaN(b[orderBy] && !isNaN(a[orderBy]))) {\n    return -1;\n  }\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction EnhancedTableHead(props) {\n  const { headCells, order, orderBy, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nexport { EnhancedTableHead, stableSort, getComparator }\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport {\n  myShortNumber,\n  myGoodWholeNumber,\n  myGoodShortNumber,\n  getStateNameByStateCode,\n} from \"./Util.js\";\nimport { Link as MaterialLink } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { EnhancedTableHead, stableSort, getComparator } from \"./TableSortHelper\";\nimport { reverse } from 'named-urls';\nimport { CountryContext } from \"./CountryContext\";\nimport { useContext } from 'react';\nimport routes from \"./Routes\"\n\nconst useStyles = makeStyles(theme => ({\n  row: {\n    padding: theme.spacing(1, 1),\n    justifyContent: \"space-between\",\n    display: \"flex\",\n  },\n  tag: {\n    display: \"inline-block\",\n    textAlign: \"center\",\n    backgroundColor: \"#f3f3f3\",\n    padding: theme.spacing(1, 1),\n    flex: 1,\n    margin: 3,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  topTag: {\n    fontSize: \"0.5rem\",\n  },\n  table: {\n    width: \"100%\"\n  }\n}));\n\nconst ListAllStates = (props) => {\n  let list = props.country.allStates()\n    .sort((a, b) => b.confirmed() - a.confirmed());\n  let countySummary =\n    <AllStateListRender states={list} />\n  return countySummary;\n}\n\nconst ListAllStatesPerCapita = (props) => {\n  let list = props.country.allStates()\n    .sort((a, b) => b.confirmed() - a.confirmed());\n  let countySummary =\n    <AllStateListCapita states={list} />\n  return countySummary;\n}\n\nconst ListAllStatesTesting = (props) => {\n  let list = props.country.allStates()\n    .sort((a, b) => b.confirmed() - a.confirmed());\n  let countySummary =\n    <AllStateListTesting states={list} />\n  return countySummary;\n}\n\nfunction prepareDataForDisplay(list) {\n  let extendlist = list.map(state => {\n    const row = state.summary();\n    let newrow = {};\n    newrow.newcases = row.newcases;\n    newrow.confirmed = row.confirmed;\n    newrow.deathsNew = row.deathsNew;\n    newrow.newpercent = row.newpercent;\n    newrow.death = row.deaths;\n    newrow.newEntry = (Number.isNaN(newrow.newpercent) || !isFinite(newrow.newpercent))\n      ? newrow.newcases\n      : `${(newrow.newpercent * 100).toFixed(1)}%`;\n    if (newrow.newcases === 0) {\n      newrow.newEntry = 0;\n    }\n    newrow.pop = state.population();\n    newrow.statename = state.name;\n    newrow.state = state.twoLetterName;\n    newrow.partsPerMil = newrow.confirmed * 1000000 / newrow.pop;\n    newrow.deathsPerMil = newrow.death * 1000000 / newrow.pop;\n    newrow.daysToDouble = row.daysToDouble;\n    newrow.daysToDoubleDeath = row.daysToDoubleDeath;\n    newrow.recovered = row.recovered;\n    return newrow;\n  });\n  return extendlist;\n}\n\nconst AllStateListCapita = (props) => {\n  const list = props.states;\n  const classes = useStyles();\n\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('confirmed');\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const myHeadCells = [\n    { id: 'state', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'confirmed', numeric: true, disablePadding: true, label: 'Total' },\n    { id: 'partsPerMil', numeric: true, disablePadding: false, label: '#/mil' },\n    { id: 'death', numeric: true, disablePadding: false, label: 'Deaths' },\n    { id: 'deathsPerMil', numeric: true, disablePadding: false, label: 'Deaths/mil' },\n    { id: 'pop', numeric: true, disablePadding: false, label: 'Pop.' },\n  ];\n\n  let extendlist = prepareDataForDisplay(list);\n\n  let countySummary =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={myHeadCells}\n      />\n      <TableBody>\n        {\n          stableSort(extendlist, getComparator(order, orderBy))\n            .map(row => {\n              return <TableRow key={row.state}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <MaterialLink component={RouterLink} to={reverse(routes.state, { state: row.state })}>\n                    {row.statename}\n                  </MaterialLink>\n                </TableCell>\n                <TableCell align=\"right\">{row.confirmed}</TableCell>\n                <TableCell align=\"right\">{myGoodWholeNumber(row.partsPerMil)}</TableCell>\n                <TableCell align=\"right\">{myGoodShortNumber(row.death)}</TableCell>\n                <TableCell align=\"right\">{myGoodWholeNumber(row.deathsPerMil)}</TableCell>\n                <TableCell align=\"right\">{(row.pop === 0) ? \"-\" : myGoodShortNumber(row.pop)}</TableCell>\n              </TableRow>;\n            })\n        }\n      </TableBody>\n    </Table>\n  return countySummary;\n};\n\nconst AllStateListRender = (props) => {\n  const list = props.states;\n  const classes = useStyles();\n\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('newcases');\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const myHeadCells = [\n    { id: 'state', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'confirmed', numeric: true, disablePadding: true, label: 'Total' },\n    { id: 'newcases', numeric: true, disablePadding: false, label: 'New' },\n    { id: 'recovered', numeric: true, disablePadding: false, label: 'Recovered' },\n    { id: 'death', numeric: true, disablePadding: false, label: 'Deaths' },\n    { id: 'deathsNew', numeric: true, disablePadding: false, label: 'Deaths New' },\n    { id: 'daysToDouble', numeric: true, disablePadding: false, label: 'Days 2x' },\n    { id: 'daysToDoubleDeath', numeric: true, disablePadding: false, label: 'Deaths 2x' },\n  ];\n\n  let extendlist = prepareDataForDisplay(list);\n\n  let countySummary =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={myHeadCells}\n      />\n      <TableBody>\n        {\n          stableSort(extendlist, getComparator(order, orderBy))\n            .map(row => {\n              let newcolumn = row.newcases ? `${myShortNumber(row.newcases)}(${row.newEntry})` : 0;\n              if (row.newcases === 0) {\n                newcolumn = \"-\";\n              } else {\n                newcolumn = <section>\n                  <div className={classes.topTag}>\n                    +{row.newEntry}\n                  </div>\n                  <div className={classes.mainTag}>\n                    {myShortNumber(row.newcases)} </div>\n                </section>;\n              }\n\n              return <TableRow key={row.state}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <MaterialLink component={RouterLink} to={reverse(routes.state, { state: row.state })}>\n                    {row.statename}\n                  </MaterialLink>\n                </TableCell>\n                <TableCell align=\"right\">{row.confirmed}</TableCell>\n                <TableCell align=\"right\"> {newcolumn} </TableCell>\n                <TableCell align=\"right\">{row.recovered ? myGoodShortNumber(row.recovered) : \"-\"}</TableCell>\n                <TableCell align=\"right\">{myGoodShortNumber(row.death)}</TableCell>\n                <TableCell align=\"right\">{myGoodShortNumber(row.deathsNew)}</TableCell>\n\n                <TableCell align=\"right\">{(!row.daysToDouble) ? \"-\" :\n                  ((row.daysToDouble > 365 || row.daysToDouble < 0) ? \"1 Year+\" : row.daysToDouble.toFixed(1))}</TableCell>\n                <TableCell align=\"right\">{(!row.daysToDoubleDeath) ? \"-\" :\n                  (row.daysToDoubleDeath > 365 ? \"1 Year+\" : row.daysToDoubleDeath.toFixed(1))}</TableCell>\n              </TableRow>;\n            })\n        }\n      </TableBody>\n    </Table>\n  return countySummary;\n};\n\nfunction prepareStatesTestingDataForDisplay(list) {\n  let extendlist = list.map(row => {\n    let newrow = {};\n    let totalTested = row.positive + row.negative;\n    newrow.statename = getStateNameByStateCode(row.state);\n    newrow.positiveNumber = row.positive ?? 0;\n    newrow.positiveRate = row.positive / totalTested * 100;\n    newrow.negativeNumber = row.negative ?? 0;\n    newrow.negativeRate = row.negative / totalTested * 100;\n    newrow.pending = row.pending ?? \"-\";\n    newrow.total = totalTested;\n    newrow.testCoverage = row.testCoverage;\n    return newrow;\n  });\n  return extendlist;\n}\n\nconst AllStateListTesting = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('confirmed');\n\n  const country = useContext(CountryContext);\n  const [sourceData, setSourceData] = React.useState(null);\n  React.useEffect(() => {\n    country.testingStatesTableAsync()\n      .then(data => setSourceData(data));\n  }, [country])\n  if (!sourceData || sourceData.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let states_data = {};\n  for (let i = 0; i < sourceData.length; i++) {\n    let record = sourceData[i];\n    let state = record.state;\n    if ((state in states_data) && (states_data[state].date > record.date)) {\n      continue;\n    }\n    if (record.pending === null) {\n      // have to do this other sort doesn't work\n      record.pending = Number.NEGATIVE_INFINITY;\n    }\n    const stateObject = country.stateForId(record.fips);\n    if (stateObject) {\n      let totalTested = record.positive + record.negative;\n      record.testCoverage = totalTested / stateObject.population();\n    }\n    states_data[state] = record;\n  }\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const myHeadCells = [\n    { id: 'statename', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'positiveNumber', numeric: true, disablePadding: false, label: 'Pos' },\n    { id: 'positiveRate', numeric: true, disablePadding: false, label: 'Pos%' },\n    { id: 'negativeNumber', numeric: true, disablePadding: false, label: 'Neg' },\n    { id: 'negativeRate', numeric: true, disablePadding: false, label: 'Neg%' },\n    { id: 'pending', numeric: true, disablePadding: false, label: 'Pending' },\n    { id: 'testCoverage', numeric: true, disablePadding: false, label: 'Test Coverage' },\n    { id: 'total', numeric: true, disablePadding: false, label: 'Total' },\n  ];\n\n  let list = Object.values(states_data);\n  let extendlist = prepareStatesTestingDataForDisplay(list);\n\n  let table =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={myHeadCells}\n      />\n      <TableBody>\n        {\n          stableSort(extendlist, getComparator(order, orderBy))\n            .map(row => {\n              return <TableRow key={row.state}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <MaterialLink component={RouterLink} to={reverse(routes.state, { state: row.state })}>\n                    {row.statename}\n                  </MaterialLink>\n                </TableCell>\n                <TableCell align=\"right\">{row.positiveNumber}</TableCell>\n                <TableCell align=\"right\">{row.positiveRate.toFixed(1)}%</TableCell>\n                <TableCell align=\"right\">{row.negativeNumber}</TableCell>\n                <TableCell align=\"right\">{row.negativeRate.toFixed(1)}%</TableCell>\n                <TableCell align=\"right\">{!isFinite(row.pending) ? \"-\" : row.pending}</TableCell>\n                <TableCell align=\"right\">{(row.testCoverage * 100).toFixed(1)} %</TableCell>\n                <TableCell align=\"right\">{row.total}</TableCell>\n              </TableRow>;\n            })\n        }\n      </TableBody>\n    </Table>\n  return table;\n};\n\nexport {\n  ListAllStates,\n  ListAllStatesPerCapita,\n  ListAllStatesTesting,\n}\n","import React from \"react\";\nimport {Helmet} from \"react-helmet\";\n\nconst Title = (props) => {\n  const title =\n      props.title\n          ? props.title + \" | COVID-19 Daily Numbers Visualized\"\n          : \"Covid-19.direct | COVID-19 Daily Numbers Visualized\";\n  const desc =\n      props.desc\n          ? props.desc\n          : \"US county-level COVID-19 30-day data visualized: \"\n              + \"confirmed cases, new cases & death curves. \"\n              + \"State-level testing results & hospitalization numbers.\";\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta name=\"description\" content={desc} />\n      <meta property=\"og:description\" content={desc} />\n    </Helmet>\n  );\n};\n\nexport { Title };\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"./CountryContext\";\nimport { withHeader } from \"./ContentWrapping.js\"\nimport { MyTabs } from \"./MyTabs.js\"\nimport * as Util from \"./Util.js\"\nimport { USInfoTopWidget } from './USInfoTopWidget.js'\nimport { GraphSection } from './graphs/Graphs';\nimport {\n    ListAllStates,\n    ListAllStatesPerCapita,\n    ListAllStatesTesting,\n} from \"./ListAllStates.js\"\nimport { logger } from \"./AppModule\"\nimport { Title } from './Title';\n\nconst PageUS = withHeader((props) => {\n    const country = useContext(CountryContext);\n\n    const default_county_info = Util.getDefaultCounty();\n    const state = country.stateForTwoLetterName(default_county_info.state);\n    const county = state.countyForName(default_county_info.county)\n    logger.logEvent(\"PageUS\");\n\n    const tabs = [\n        <ListAllStates country={country} />,\n        <ListAllStatesTesting country={country} />,\n        <ListAllStatesPerCapita country={country} />,\n    ];\n\n    return (\n        <>\n            <Title\n                title={country.name}\n                desc={`${country.name} county-level COVID-19 30-day data visualized: `\n                          + `confirmed cases, new cases & death curves, `\n                          + `testing results & hospitalization numbers.`}\n            />\n            <USInfoTopWidget source={county || state} />\n            <GraphSection source={country} />\n            <MyTabs\n                labels={[\"States of USA\", \"Testing\", \"Capita\"]}\n                urlQueryKey=\"table\"\n                urlQueryValues={['cases', 'testing', 'capita']}\n                tabs={tabs}\n            />\n        </>\n    );\n});\n\nexport { PageUS }\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { myShortNumber, myGoodWholeNumber, myGoodShortNumber } from \"./Util.js\";\nimport { Link as MaterialLink } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { EnhancedTableHead, stableSort, getComparator } from \"./TableSortHelper\";\nimport { reverse } from 'named-urls';\nimport routes from \"./Routes\"\n\nconst useStyles = makeStyles(theme => ({\n  row: {\n    padding: theme.spacing(1, 1),\n    justifyContent: \"space-between\",\n    display: \"flex\",\n  },\n  tag: {\n    display: \"inline-block\",\n    textAlign: \"center\",\n    backgroundColor: \"#f3f3f3\",\n    padding: theme.spacing(1, 1),\n    flex: 1,\n    margin: 3,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  topTag: {\n    fontSize: \"0.5rem\",\n  },\n  table: {\n    width: \"100%\",\n    \"& a\": {\n      display: \"inline-block\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n  },\n}));\n\nconst NearbyCounties = (props) => {\n  const county = props.county;\n  const allNearby = county.nearby();\n  if (allNearby) {\n    const nearby = allNearby.slice(0, 10);\n    return <CountyListRender countylist={nearby} />\n  } else {\n    return <></>;\n  }\n}\n\nconst ListCountiesForMetro = (props) => {\n  return <CountyListRender countylist={props.metro.allCounties()} />\n}\n\nfunction positiveCountiesIn(state) {\n  return state.allCounties().filter(c => c.totalConfirmed() > 0);\n}\n\nconst CountiesForStateWidget = (props) => {\n  return <CountyListRender countylist={positiveCountiesIn(props.state)} />;\n}\n\nconst ListStateCountiesCapita = (props) => {\n  return <CountyListRenderCapita countylist={positiveCountiesIn(props.state)} />;\n}\n\nfunction prepCountyDataForDisplay(list) {\n  let extendlist =\n    list\n      .map(county => [county, county.summary()])\n      .filter(([c, s]) => s)\n      .map(([county, sum]) => {\n        let newrow = {};\n        let newcases = sum.newcases;\n        let confirmed = sum.confirmed;\n        let newpercent = sum.newpercent;\n        let population = county.population();\n\n        newrow.partsPerMil = confirmed * 1000000 / population;\n\n        newrow.newEntry = (Number.isNaN(newpercent) || !isFinite(newpercent)) ? newcases : `${(newpercent * 100).toFixed(1)}%`;\n        if (newcases === 0) {\n          newrow.newEntry = 0;\n        }\n\n        if (county.name === \"Statewide Unallocated\") {\n          population = 0;\n          newrow.newEntry = newcases;\n        }\n        // note. doing this row overwrite can be dangerous... references.\n        newrow.newcases = newcases;\n        newrow.State = county.state().twoLetterName;\n        newrow.confirmed = confirmed;\n        newrow.newpercent = newpercent;\n        newrow.population = population;\n        newrow.County = county.name;\n        newrow.deathsPerMil = sum.deaths * 1000000 / population;\n        newrow.death = sum.deaths;\n        newrow.daysToDouble = sum.daysToDouble;\n        newrow.daysToDoubleDeath = sum.daysToDoubleDeath;\n        return newrow;\n      });\n  return extendlist;\n}\n\nconst CountyListRender = (props) => {\n  const list = props.countylist.sort((a, b) => b.total - a.total);\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('newcases');\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const myHeadCells = [\n    { id: 'County', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'confirmed', numeric: true, disablePadding: true, label: 'Total' },\n    { id: 'newcases', numeric: true, disablePadding: false, label: 'New' },\n    { id: 'partsPerMil', numeric: true, disablePadding: false, label: '#/Mil' },\n    { id: 'death', numeric: true, disablePadding: false, label: 'Deaths' },\n    { id: 'daysToDouble', numeric: true, disablePadding: false, label: 'Days 2x' },\n  ];\n\n  let extendlist = prepCountyDataForDisplay(list);\n\n  let countySummary =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={myHeadCells}\n      />\n      <TableBody>\n        {\n          stableSort(extendlist, getComparator(order, orderBy))\n            .map(row => {\n              let newcolumn = row.newcases ? `+${row.newcases}(${row.newEntry})` : 0;\n              if (row.newcases === 0) {\n                newcolumn = \"-\";\n              } else {\n                newcolumn = <section>\n                  <div className={classes.topTag}>\n                    +{row.newEntry}\n                  </div>\n                  <div className={classes.mainTag}>\n                    {myShortNumber(row.newcases)} </div>\n                </section>;\n              }\n\n              return <TableRow key={row.County}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <MaterialLink component={RouterLink} to={reverse(routes.county, { state: row.State, county: row.County })}>\n                    {row.County}\n                  </MaterialLink>\n                </TableCell>\n                <TableCell align=\"right\">{row.confirmed}</TableCell>\n                <TableCell align=\"right\"> {newcolumn} </TableCell>\n                <TableCell align=\"right\">{myGoodWholeNumber(row.partsPerMil)}</TableCell>\n                <TableCell align=\"right\">{myGoodShortNumber(row.death)}</TableCell>\n                <TableCell align=\"right\">{(!row.daysToDouble) ? \"-\" : ((row.daysToDouble > 10000) ? \"-\" : row.daysToDouble.toFixed(1))}</TableCell>\n              </TableRow>;\n            })\n        }\n      </TableBody>\n    </Table >\n\n  return countySummary;\n}\nconst CountyListRenderCapita = (props) => {\n  const list = props.countylist.sort((a, b) => b.total - a.total);\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('confirmed');\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const myHeadCells = [\n    { id: 'County', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'confirmed', numeric: true, disablePadding: false, label: 'Total' },\n    { id: 'partsPerMil', numeric: true, disablePadding: false, label: '#/Mil' },\n    { id: 'deathsPerMil', numeric: true, disablePadding: false, label: 'D/Mil' },\n    { id: 'death', numeric: true, disablePadding: false, label: 'Deaths' },\n    { id: 'population', numeric: true, disablePadding: false, label: 'Pop.' },\n  ];\n\n  let extendlist = prepCountyDataForDisplay(list);\n\n  let countySummary =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={myHeadCells}\n      />\n      <TableBody>\n        {\n          stableSort(extendlist, getComparator(order, orderBy))\n            .map(row => {\n              return <TableRow key={row.County}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <MaterialLink component={RouterLink} to={reverse(routes.county, { county: row.County, state: row.State })}>\n                    {row.County}\n                  </MaterialLink>\n                </TableCell>\n                <TableCell align=\"right\">{row.confirmed}</TableCell>\n                <TableCell align=\"right\">{myGoodWholeNumber(row.partsPerMil)}</TableCell>\n                <TableCell align=\"right\">{myGoodWholeNumber(row.deathsPerMil)}</TableCell>\n                <TableCell align=\"right\">{myGoodShortNumber(row.death)}</TableCell>\n                <TableCell align=\"right\">{(row.population === 0) ? '-' : myGoodShortNumber(row.population)}</TableCell>\n              </TableRow>;\n            })\n        }\n      </TableBody>\n    </Table >\n\n  return countySummary;\n}\n\nexport {\n  NearbyCounties,\n  CountiesForStateWidget,\n  ListStateCountiesCapita,\n  ListCountiesForMetro,\n}\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"./CountryContext\";\nimport * as Util from \"./Util\"\nimport { withHeader } from \"./ContentWrapping.js\"\nimport { MyTabs } from \"./MyTabs.js\"\nimport { USInfoTopWidget } from './USInfoTopWidget.js'\nimport { CountiesForStateWidget, ListStateCountiesCapita } from \"./CountyListRender.js\"\nimport { GraphSection } from './graphs/Graphs';\nimport { Title } from './Title';\n\nconst PageState = withHeader((props) => {\n    const country = useContext(CountryContext);\n    const state = country.stateForTwoLetterName(props.match.params.state);\n    const county = Util.getDefaultCountyForState(state);\n\n    Util.CookieSetLastCounty(state.twoLetterName, county ? county.name : null);\n\n    const tabs = [\n        <CountiesForStateWidget state={state} />,\n        <ListStateCountiesCapita state={state} />,\n    ];\n\n    return (\n        <>\n            <Title\n                title={`${state.name}`}\n                desc={`${state.name} COVID-19 30-day data visualized: `\n                          + `confirmed cases, new cases & death curves, `\n                          + `testing results & hospitalization numbers.`}\n            />\n            <USInfoTopWidget source={county || state} />\n            <GraphSection source={state} />\n            <MyTabs\n                labels={[`Counties of ${state.name} `, \"Per Capita\"]}\n                urlQueryKey=\"table\"\n                urlQueryValues={['cases', 'capita']}\n                tabs={tabs}\n            />\n        </>);\n});\n\nexport { PageState }\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        width: \"100%\"\n    },\n}));\n\nconst DetailCaseListWidget = (props) => {\n    const classes = useStyles();\n    const hospitals = props.hospitals.sort((a, b) => {\n        return ('' + a.HOSPITAL_NAME).localeCompare(b.HOSPITAL_NAME);\n    });\n\n    let list =\n        <>\n            <Typography variant=\"body1\">\n                Please follow\n                {' '}\n                <Link href=\"https://www.cdc.gov/coronavirus/2019-ncov/if-you-are-sick/steps-when-sick.html\">\n                    CDC guidance.\n                </Link>\n                {' '}\n                Make contact\n                with your doctor to make arrangments if\n                you suspect you are sick. Do not show up at a hospital unannounced\n                as that would overwhelm the hospital system.\n        </Typography>\n            <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell > Name</TableCell>\n                        <TableCell align=\"center\">City</TableCell>\n                        <TableCell align=\"left\">Licensed Beds</TableCell>\n                        <TableCell align=\"left\">Staffed Beds</TableCell>\n                        <TableCell align=\"left\">ICU Beds</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {hospitals.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.HOSPITAL_NAME}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.HQ_CITY}</TableCell>\n                            <TableCell align=\"left\">{row.NUM_LICENSED_BEDS ? row.NUM_LICENSED_BEDS : \"-\"}</TableCell>\n                            <TableCell align=\"left\">{row.NUM_STAFFED_BEDS ? row.NUM_STAFFED_BEDS : \"-\"}</TableCell>\n                            <TableCell align=\"left\">{row.NUM_ICU_BEDS ? row.NUM_ICU_BEDS : \"-\"}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table >\n            <Typography variant=\"body2\" noWrap>\n                <Link href=\"https://www.arcgis.com/apps/opsdashboard/index.html#/8c4dcccd9e3845eb89f6401f919007f2\">\n                    Source: Definitive Health\n                </Link>\n            </Typography>\n        </>\n    return list;\n}\n\nfunction snapshotToArray(snapshot) {\n    var returnArr = []\n    snapshot.forEach(function (childSnapshot) {\n        returnArr.push(childSnapshot.data());\n    });\n    return returnArr;\n};\n\nasync function fetchCountyHospitals(county) {\n    const firebase = require(\"firebase\");\n    const db = firebase.firestore();\n    return await db.collection(\"DEFINITIVE_HOSPITALS\")\n        .where(\"COUNTY_NAME\", \"==\", county.name)\n        .where(\"STATE_NAME\", \"==\", county.state().name)\n        .get().then(querySnapshot => snapshotToArray(querySnapshot));\n}\n\nconst CountyHospitalsWidget = (props) => {\n    const [county_hospitals, setHospitals] = React.useState(null);\n    React.useEffect(() => {\n        fetchCountyHospitals(props.county).then((result, b) => {\n            setHospitals(result);\n        });\n    }, [props.state, props.county]);\n\n    if (!county_hospitals) {\n        return <div> Loading</div>;\n    }\n    return <DetailCaseListWidget hospitals={county_hospitals} />;\n}\n\nexport {\n    CountyHospitalsWidget,\n}\n","import React, { useContext } from 'react';\nimport { NearbyCounties } from \"./CountyListRender.js\"\nimport { withHeader } from \"./ContentWrapping.js\"\nimport { MyTabs } from \"./MyTabs.js\"\nimport { CountryContext } from \"./CountryContext\";\nimport { USInfoTopWidget } from './USInfoTopWidget.js'\nimport { CountyHospitalsWidget } from \"./Hospitals\"\nimport * as Util from \"./Util\"\nimport { GraphSection } from './graphs/Graphs';\nimport { SectionHeader } from \"./CovidUI\"\nimport { Title } from \"./Title\";\nimport { Link } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst CA_statusMap = {\n  \"high\": {\n    text: \"Widespread\",\n    color: \"purple\",\n  },\n  \"substantial\": {\n    text: \"Substantial\",\n    color: \"red\",\n  },\n  \"moderate\": {\n    text: \"Moderate\",\n    color: \"orange\",\n  },\n  \"low\": {\n    text: \"Minimal\",\n    color: \"orange\",\n  },\n  \"4\": {\n    text: \"Widespread\",\n    color: \"purple\",\n  },\n  \"3\": {\n    text: \"Substantial\",\n    color: \"red\",\n  },\n  \"2\": {\n    text: \"Moderate\",\n    color: \"orange\",\n  },\n  \"1\": {\n    text: \"Minimal\",\n    color: \"yellow\",\n  },\n}\n\nconst useStyles = makeStyles(theme => ({\n  CA: {\n    margin: 4,\n  },\n}));\n\nconst CountySpecificNew = (props) => {\n  const classes = useStyles();\n\n  const [countyData, setCountyData] = React.useState(null);\n  React.useEffect(() => {\n    props.source.fetchNewCountyInfo().then(data => setCountyData(data[0]));\n  }, [props.source])\n\n  if (!countyData) {\n    return <div> Loading</div>;\n  }\n\n  console.log(countyData);\n  let level = CA_statusMap[countyData.community] || {\n    text: \"Unknown\",\n    color: \"blue\",\n  };\n  const textStyle = {\n    color: level && level.color,\n    fontSize: 'x-large',\n  }\n  return <div className={classes.CA}>\n    Level:<span style={textStyle}> {level.text}. </span>\n    {countyData.school}\n    {countyData.healthwebsites &&\n      countyData.healthwebsites.map(site =>\n        <span className={classes.CA} >\n          <Link target=\"_blank\" href={site} className={props.className}>\n            {site}\n          </Link>\n        </span>\n      )\n    }\n  </div>;\n};\n\nconst PageCounty = withHeader((props) => {\n  const country = useContext(CountryContext);\n  const state = country.stateForTwoLetterName(props.match.params.state);\n  const county = state.countyForName(props.match.params.county);\n\n  Util.CookieSetLastCounty(state.twoLetterName, county.name);\n\n  const tabs = [\n    <NearbyCounties county={county} />,\n    <CountyHospitalsWidget county={county} />,\n  ];\n  return (\n    <>\n      <Title\n        title={`${county.name}, ${state.twoLetterName}`}\n        desc={`${county.name} County COVID-19 30-day data visualized: `\n          + `confirmed cases, new cases & death curves.`}\n      />\n      <USInfoTopWidget source={county} />\n      <CountySpecificNew source={county} />\n      <GraphSection source={county} />\n      <BonusDashboards county={county} />\n      <MyTabs\n        labels={[\"Nearby\", \"Hospitals\"]}\n        urlQueryKey=\"table\"\n        urlQueryValues={['nearby', 'hospitals']}\n        tabs={tabs}\n      />\n    </>\n  );\n});\n\nconst BonusDashboards = (props) => {\n  const fips = props.county.fips();\n\n  if (fips === \"06085\") {\n    return (\n      <SectionHeader>\n        <a target=\"_blank\" href=\"https://www.sccgov.org/sites/phd/DiseaseInformation/novel-coronavirus/Pages/dashboard.aspx\" rel=\"noopener noreferrer\" >\n          Santa Clara County Coronavirus Data Dashboard\n               </a>\n      </SectionHeader>\n    );\n  } else if (fips === \"06081\") {\n    return (\n      <SectionHeader>\n        <a target=\"_blank\" href=\"https://www.smchealth.org/post/san-mateo-county-covid-19-data-1\" rel=\"noopener noreferrer\" >\n          San Mateo County COVID-19 Data\n                </a>\n      </SectionHeader>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport { PageCounty }\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"./CountryContext\";\nimport { ListCountiesForMetro } from \"./CountyListRender.js\"\nimport { withHeader } from \"./ContentWrapping.js\"\nimport { MyTabs } from \"./MyTabs.js\"\nimport { USInfoTopWidget } from './USInfoTopWidget.js'\nimport { getDefaultCounty } from \"./Util\"\nimport { GraphSection } from \"./graphs/Graphs\"\nimport { Title } from \"./Title\";\n\nconst PageMetro = withHeader((props) => {\n    const country = useContext(CountryContext);\n    const metroByStates = country.metroByStatesForId(props.match.params.metro);\n\n    // The metro may span multiple states, so we have to see if the user's\n    // preferred county is a county in the metro and then figure out which metro\n    // object corresponds to the right state. Everything is awesome.\n    const def = getDefaultCounty();\n    // All the metro objects have all the counties, even if those counties are\n    // across state lines.\n    const any = metroByStates.values().next().value;\n    let county;\n    for (const candidate of any.allCounties()) {\n        if (def.county === candidate.name\n                && def.state === candidate.state().twoLetterName) {\n            county = candidate;\n            break;\n        }\n    }\n\n    // Can't find the preferred county, just pick the best one.\n    if (!county) {\n        county =\n            any\n                .allCounties()\n                .sort((a, b) => b.totalConfirmed() - a.totalConfirmed())[0];\n    }\n\n    const metro = county.metro();\n    const state = metro.state();\n\n    const tabs = [\n        <ListCountiesForMetro metro={metro} />,\n    ];\n\n    return (\n        <>\n            <Title\n                title={`${metro.name}, ${state.twoLetterName}`}\n                desc={`${metro.name} COVID-19 30-day data visualized: `\n                          + `confirmed cases, new cases & death curves, `\n                          + `testing results & hospitalization numbers.`}\n            />\n            <USInfoTopWidget source={county} />\n            <GraphSection source={metro} />\n            <MyTabs\n                labels={[metro.name]}\n                urlQueryKey=\"table\"\n                urlQueryValues={['cases']}\n                tabs={tabs}\n            />\n        </>\n    );\n});\nexport { PageMetro }\n","export class ChildrenComponent {\n\n  constructor(children) {\n    this.children_ = children;\n  }\n\n  children() {\n    return this.children_;\n  }\n}\n","export class DivisionTypesComponent {\n\n  constructor(divisions) {\n    this.divisions_ = divisions;\n  }\n\n  types() {\n    return this.divisions_;\n  }\n}\n","const geolib = require('geolib');\n\nexport class GeographyComponent {\n\n  constructor(latitude, longitude) {\n    this.position_ = {latitude, longitude};\n  }\n\n  distance(other) {\n    return geolib.getDistance(this.position_, other.position_);\n  }\n\n  position() {\n    return this.position_;\n  }\n}\n","export class ProjectionsComponent {\n\n  constructor(confirmed) {\n    this.confirmed_ = confirmed;\n  }\n\n  confirmed() {\n    return this.confirmed_;\n  }\n}\n","export class SearchIndexComponent {\n\n  constructor(termsToNames, namesToPaths) {\n    this.termsToNames_ = termsToNames;\n    this.namesToPaths_ = namesToPaths;\n    this.lettersToTerms_ = new Map();\n\n    for (const term of this.termsToNames_.keys()) {\n      const first = term[0].toLowerCase();\n      if (!this.lettersToTerms_.has(first)) {\n        this.lettersToTerms_.set(first, new Set());\n      }\n      this.lettersToTerms_.get(first).add(term);\n    }\n  }\n\n  search(query) {\n    const terms =\n        query.split(',').map(t => t.trim().toLowerCase()).filter(t => !!t);\n    \n    let whitelist = undefined;\n    for (const term of terms) {\n      whitelist = this.matchTerm_(term, whitelist);\n    }\n    \n    if (!whitelist) {\n      return [];\n    }\n\n    const results = [];\n    for (const name of whitelist) {\n      results.push({\n        name,\n        path: this.namesToPaths_.get(name),\n      });\n    }\n    return results;\n  }\n\n  matchTerm_(term, opt_whitelist) {\n    const matchingTerms = this.lettersToTerms_.get(term[0]);\n    const matchingNames = new Set();\n    if (!matchingTerms) {\n      return matchingNames;\n    }\n\n    for (const possibleTerm of matchingTerms) {\n      if (!possibleTerm.toLowerCase().startsWith(term)) {\n        continue;\n      }\n\n      for (const name of this.termsToNames_.get(possibleTerm)) {\n        if (opt_whitelist && !opt_whitelist.has(name)) {\n          continue;\n        }\n\n        matchingNames.add(name);\n      }\n    }\n\n    return matchingNames;\n  }\n}\n","/** A world contains all the entities and their components. */\nexport class World {\n\n  constructor(source) {\n    this.componentsByPath = new Map();\n    this.frontier = new Set();\n    this.source = source;\n  }\n\n  get(path, componentType) {\n    this.ensure_(path);\n\n    const asStr = path.string();\n    if (!this.componentsByPath.has(asStr)) {\n      return undefined;\n    } else {\n      return this.componentsByPath.get(asStr).get(componentType);\n    }\n  }\n\n  getMultiple(path, componentTypes) {\n    this.ensure_(path);\n\n    const asStr = path.string();\n    if (!this.componentsByPath.has(asStr)) {\n      return [];\n    } else {\n      const components = this.componentsByPath.get(asStr);\n      return componentTypes.map(c => components.get(c));\n    }\n  }\n\n  has(path, componentType) {\n    this.ensure_(path);\n\n    const asStr = path.string();\n    if (!this.componentsByPath.has(asStr)) {\n      return false;\n    } else {\n      return !!this.componentsByPath.get(asStr).get(componentType);\n    }\n  }\n\n  set(path, component) {\n    const asStr = path.string();\n    if (!this.componentsByPath.has(asStr)) {\n      this.componentsByPath.set(asStr, new Map());\n      this.frontier.add(asStr);\n    }\n    this.componentsByPath.get(asStr).set(component.constructor, component);\n  }\n\n  ensure_(target, componentType) {\n    const asStr = target.string();\n    const haveTarget = this.componentsByPath.has(asStr);\n    if (!this.frontier.has(asStr) && haveTarget) {\n      // We have fully loaded it\n      return;\n    } else if (haveTarget) {\n      // We have something for the target\n      const components = this.componentsByPath.get(asStr);\n      if (components.has(componentType)) {\n        // We at least have the component, so don't load more\n        return;\n      }\n    }\n\n    let fetched;\n    if (haveTarget) {\n      fetched =\n          this.source.fetch(\n              target,\n              new Set(this.componentsByPath.get(asStr).keys()));\n    } else {\n      fetched = this.source.fetch(target, new Set());\n    }\n\n    for (const [path, components] of fetched) {\n      this.frontier.add(path.string());\n      components.forEach(c => {\n        this.set(path, c);\n      });\n    }\n\n    this.frontier.delete(asStr);\n  }\n}\n","import { BasicDataComponent } from './BasicDataComponent';\nimport { ChildrenComponent } from './ChildrenComponent';\nimport { DataSeries } from './DataSeries';\nimport { DivisionTypesComponent } from './DivisionTypesComponent';\nimport { GeographyComponent } from './GeographyComponent';\nimport { NameComponent } from './NameComponent';\nimport { Path } from './Path';\nimport { PopulationComponent } from './PopulationComponent';\nimport { ProjectionsComponent } from './ProjectionsComponent';\nimport { SearchIndexComponent } from './SearchIndexComponent';\nimport { World } from './World';\nimport { fetchWorldData } from \"../PublicAllData\"\n\n// const earthBaseData = require('../data/WorldData.json');\nconst dataKeys = ['data'];\nvar cachedData = null;\n\nexport const SEARCH_INDEX_PATH = Path.parse('/_search_index');\n\n// export function createBasicEarth() {\n//   return new World(new BasicEarthSource(earthBaseData));\n// }\n\nexport async function createBasicEarthAsync() {\n  if (!cachedData) {\n    cachedData = await fetchWorldData();\n  }\n  console.log(cachedData);\n  return new World(new BasicEarthSource(cachedData));\n}\n\nclass BasicEarthSource {\n\n  constructor(baseData) {\n    this.baseData = baseData;\n  }\n\n  fetch(path, have) {\n    if (SEARCH_INDEX_PATH.equals(path)) {\n      return [[path, [this.buildSearchIndex_()]]];\n    } else if (path.matches('/:country/:division')\n      || path.matches('/:country/:division/:province/:division')) {\n      // We don't know anything about ourselves, so just return\n      return [];\n    }\n\n    const ourComponents = [];\n\n    const data = resolve(path, this.baseData);\n    if (!have.has(BasicDataComponent)) {\n      ourComponents.push(...this.basicComponentsFor_(data['data']));\n    }\n    if (!have.has(ProjectionsComponent)) {\n      ourComponents.push(\n        ...this.projectionsComponentsFor_(data['data']['projections']));\n    }\n\n    if (have.has(DivisionTypesComponent)) {\n      return [[path, ourComponents]];\n    }\n\n    const children =\n      Object.entries(data).filter(([child,]) => !dataKeys.includes(child));\n    const division = divisionUnder(path);\n    if (!division) {\n      if (children.length > 0) {\n        throw new Error(`Unknown division for ${path.string()}`);\n      } else {\n        return [[path, ourComponents]];\n      }\n    } else if (children.length === 0) {\n      return [[path, ourComponents]];\n    }\n\n    ourComponents.push(new DivisionTypesComponent([division]));\n    const divisionRoot = division.id ? path.child(division.id) : path;\n    const childrenPaths = [];\n    const childrenComponents = [];\n    for (const [child, data] of children) {\n      const childPath = divisionRoot.child(child);\n      childrenPaths.push(childPath);\n      childrenComponents.push([childPath, this.basicComponentsFor_(data['data'])]);\n    }\n\n    return [\n      [path, ourComponents],\n      [divisionRoot, [new ChildrenComponent(childrenPaths)]],\n      ...childrenComponents,\n    ];\n  }\n\n  basicComponentsFor_(data) {\n    const components = [\n      new NameComponent(data['name']),\n      new BasicDataComponent(\n        DataSeries.fromTimestamps(\"Confirmed\", data['Confirmed']),\n        DataSeries.fromTimestamps(\"Active\", data['Active']),\n        DataSeries.fromTimestamps(\"Recovered\", data['Recovered']),\n        DataSeries.fromTimestamps(\"Deaths\", data['Deaths'])),\n    ];\n    if (data['latitude'] && data['longitude']) {\n      components.push(new GeographyComponent(data['latitude'], data['longitude']));\n    }\n    if (data['population']) {\n      components.push(new PopulationComponent(data['population']));\n    }\n    return components;\n  }\n\n  projectionsComponentsFor_(projections) {\n    if (!projections) {\n      return [];\n    }\n\n    return [\n      new ProjectionsComponent(\n        DataSeries.fromTimestamps(\n          \"Confirmed (Projected)\", projections['Confirmed'])),\n    ];\n  }\n\n  buildSearchIndex_() {\n    const termsToNames = new Map();\n    const namesToPath = new Map();\n\n    const frontier = [[Path.root(), [], this.baseData]];\n    while (frontier.length > 0) {\n      const [path, ancestorTerms, data] = frontier.pop();\n\n      const name = data.data.name;\n      if (!termsToNames.has(name)) {\n        termsToNames.set(name, []);\n      }\n\n      const terms = [name].concat(ancestorTerms);\n      const fullName = terms.join(', ');\n      namesToPath.set(fullName, path);\n\n      for (const term of terms) {\n        termsToNames.get(term).push(fullName);\n      }\n\n      const division = divisionUnder(path);\n      const divisionPath =\n        division && division.id ? path.child(division.id) : path;\n      let passTerms;\n      if (path.matches('/')) {\n        passTerms = [];\n      } else {\n        passTerms = terms;\n      }\n\n      for (const key in data) {\n        if (dataKeys.includes(key)) {\n          continue;\n        }\n\n        frontier.push([divisionPath.child(key), passTerms, data[key]]);\n      }\n    }\n\n    return new SearchIndexComponent(termsToNames, namesToPath);\n  }\n}\n\nfunction resolve(path, baseData) {\n  if (path.matches('/')) {\n    return baseData;\n  } else if (path.matches('/:country')) {\n    return baseData[path.components[0]];\n  } else if (path.matches('/:country/:division/:province')) {\n    return baseData[path.components[0]][path.components[2]];\n  } else if (path.matches('/:country/:division/:province/:division/:county')) {\n    return baseData[path.components[0]][path.components[2]][path.components[4]];\n  } else {\n    return undefined;\n  }\n}\n\nfunction divisionUnder(path) {\n  if (path.matches('/')) {\n    return {\n      id: '',\n      singular: 'Country',\n      plural: 'Countries',\n    };\n  } else if (path.matches('/US')) {\n    return {\n      id: 'state',\n      singular: 'State',\n      plural: 'States',\n    };\n  } else if (path.matches('/:country')) {\n    return {\n      id: 'province',\n      singular: 'Province',\n      plural: 'Provinces',\n    };\n  } else if (path.matches('/US/state/:state')) {\n    return {\n      id: 'county',\n      singular: 'County',\n      plural: 'Counties',\n    };\n  } else if (path.matches('/US/state/:state/county/:county')) {\n    return {\n      id: 'source',\n      singular: 'Source',\n      plural: 'Sources',\n    };\n  } else if (path.matches('/:country/:division/:province')) {\n    return {\n      id: 'city',\n      singular: 'City',\n      plural: 'Cities',\n    };\n  } else {\n    return undefined;\n  }\n}\n","import PropTypes from 'prop-types';\nimport React, {useContext} from 'react';\nimport {AutoSizer, List} from 'react-virtualized';\nimport {ClickAwayListener, InputBase, Link as MaterialLink, Paper } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport {fade, makeStyles} from '@material-ui/core/styles';\n\nimport {SEARCH_INDEX_PATH} from '../../models/Earth';\nimport {Path} from '../../models/Path';\nimport {SearchIndexComponent} from '../../models/SearchIndexComponent';\nimport {WorldContext} from '../../WorldContext';\n\nconst RESULT_HEIGHT = 28;\nconst RESULTS_MAX_HEIGHT = 150;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    alignItems: 'center',\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    borderRadius: theme.shape.borderRadius,\n    display: 'flex',\n    height: '2em',\n    position: 'relative',\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: 0,\n      marginBottom: theme.spacing(1),\n    },\n  },\n  searchIcon: {\n    height: '100%',\n    padding: theme.spacing(0, 1),\n    pointerEvents: 'none',\n    position: 'absolute',\n  },\n  input: {\n    color: 'inherit',\n    flexGrow: 1,\n    paddingLeft: `calc(1em + ${theme.spacing(2.5)}px)`,\n    position: 'relative',\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '20ch',\n    },\n  },\n  divider: {\n    backgroundColor: `rgba(255, 255, 255, 0.7)`,\n    height: '70%',\n    marginLeft: theme.spacing(1),\n    position: 'relative',\n    width: '1px',\n  },\n  iconButton: {\n    color: theme.palette.common.white,\n    height: '100%',\n    padding: theme.spacing(0, 1),\n    position: 'relative',\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  resultsContainer: {\n    alignSelf: 'flex-start',\n    borderRadius: '4px',\n    color: theme.palette.text.primary,\n    marginTop: '4px',\n    maxHeight: '150px',\n    maxWidth: '100vh',\n    padding: '4px',\n    position: 'absolute',\n    top: '100%',\n    userSelect: 'none',\n    width: '350px',\n    zIndex: 9999,\n    '&.hide': {\n      display: 'none',\n    },\n  },\n  resultsList: {\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n  result: {\n    background: '#fff',\n    lineHeight: RESULT_HEIGHT + 'px',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n}));\n\nexport const SearchInput = (props) => {\n  const classes = useStyles();\n  const world = useContext(WorldContext);\n\n  const [results, setResults] = React.useState([]);\n\n  // Force the search index to lazy load\n  React.useEffect(() => {\n    world.get(Path.root(), SearchIndexComponent);\n  });\n\n  const onClose = () => {\n    setResults([]);\n  };\n\n  const onChange = (e) => {\n    const search = world.get(SEARCH_INDEX_PATH, SearchIndexComponent);\n    if (!search) {\n      return;\n    }\n\n    setResults(search.search(e.target.value));\n  };\n\n  const onChoice = (e, path) => {\n    e.preventDefault();\n    setResults([]);\n    props.onChoice(path);\n  };\n\n  const resultRenderer = ({index, key, style}) => {\n    const {name, path} = results[index];\n\n    return (\n      <div key={key} style={style} className={classes.result}>\n        <MaterialLink href=\"#\" onClick={(e) => onChoice(e, path)}>\n          {name}\n        </MaterialLink>\n      </div>\n    );\n  };\n\n  return (\n    <ClickAwayListener onClickAway={onClose}>\n      <div className={`${classes.root} ${props.className || ''}`}>\n        <SearchIcon className={classes.searchIcon} />\n        <InputBase\n            className={classes.input}\n            onChange={onChange}\n            placerholder=\"Search...\" />\n        {props.onGeolocate &&\n            <Divider className={classes.divider} />\n        }\n        {props.onGeolocate &&\n            <IconButton\n                size=\"small\"\n                className={classes.iconButton}\n                onClick={props.onGeolocate}>\n              <LocationSearchingIcon />\n            </IconButton>\n        }\n        <Paper\n            className={\n              `${classes.resultsContainer} `\n                  + (results.length === 0 ? 'hide' : '')\n            }\n            elevation={3}>\n          <AutoSizer disableHeight>\n            {({width}) => (\n              <List\n                  className={classes.resultsList}\n                  rowCount={results.length}\n                  rowHeight={RESULT_HEIGHT}\n                  rowRenderer={resultRenderer}\n                  width={width}\n                  height={Math.min(RESULTS_MAX_HEIGHT, RESULT_HEIGHT * results.length)}\n              />\n            )}\n          </AutoSizer>\n        </Paper>\n      </div>\n    </ClickAwayListener>\n  );\n};\nSearchInput.propTypes = {\n  className: PropTypes.string,\n  onChoice: PropTypes.func.isRequired,\n  onGeolocate: PropTypes.func,\n};\n","import React, { useContext } from 'react';\nimport {fade, makeStyles, useTheme} from '@material-ui/core/styles';\nimport {useHistory} from 'react-router-dom'\nimport {AppBar as MaterialAppBar, Toolbar, Typography} from '@material-ui/core';\n\nimport {DonateLink} from './DonateLink';\nimport {SEARCH_INDEX_PATH} from '../../models/Earth';\nimport {SearchIndexComponent} from '../../models/SearchIndexComponent';\nimport {SearchInput} from './SearchInput';\nimport {SocialMediaButtons} from './SocialMediaButtons';\nimport {WorldContext} from '../../WorldContext';\nimport {fetchPrecisePoliticalLocation} from '../../GeoLocation'\n\nconst RELIEF_COLOR = '#fff';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    color: RELIEF_COLOR,\n    display: 'flex',\n  },\n  nameAndSearch: {\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      display: 'initial',\n    },\n  },\n  appName: {\n    overflow: 'visible',\n  },\n  search: {\n    marginLeft: theme.spacing(4),\n  },\n  donations: {\n    background: RELIEF_COLOR,\n    borderRadius: '8px',\n    display: 'block',\n    marginLeft: '16px',\n    padding: '6px 8px',\n    textAlign: 'center',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      filter: `drop-shadow(0 0 2px ${fade(RELIEF_COLOR, 0.95)})`,\n      textDecoration: 'none',\n      transform: 'translateY(-1px)',\n    },\n  },\n  expander: {\n    flexGrow: 1,\n  },\n  socialButtons: {\n    fontSize: '1.5625em',\n    lineHeight: '1em',\n    whiteSpace: 'nowrap',\n    '& > *': {\n      marginLeft: '4px',\n      verticalAlign: 'middle',\n    }\n  },\n  socialButton: {\n    '&:hover': {\n      filter: `drop-shadow(0 0 2px ${fade(RELIEF_COLOR, 0.95)})`,\n      transform: 'translateY(-1px)',\n    },\n  },\n  actions: {\n    alignItems: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexShrink: 2,\n    justifyContent: 'flex-end',\n    textAlign: 'end',\n  },\n}));\n\nexport const AppBar = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <MaterialAppBar position=\"relative\">\n      <Toolbar className={classes.appBar}>\n        <div className={classes.nameAndSearch}>\n          <Typography noWrap className={classes.appName} variant=\"h6\">\n            COVID-19.direct\n          </Typography>\n          <NavigatingSearchInput className={`${classes.search} ${classes.expander}`} />\n        </div>\n\n        <div className={classes.expander} />\n\n        <div className={classes.actions}>\n          <SocialMediaButtons\n            backgroundColor=\"#fff\"\n            buttonClassName={classes.socialButton}\n            className={classes.socialButtons}\n            iconColor={theme.palette.primary.main}\n          />\n\n          <DonateLink className={classes.donations} message=\"Buy us a coffee!\" />\n        </div>\n      </Toolbar>\n    </MaterialAppBar>\n  );\n};\n\nconst NavigatingSearchInput = (props) => {\n  const history = useHistory();\n  const world = useContext(WorldContext);\n\n  const navigate = (path) => {\n    history.push(\"/country\" + path.string());\n  };\n\n  const locationLookup = async () => {\n    const search = world.get(SEARCH_INDEX_PATH, SearchIndexComponent);\n    const location = await fetchPrecisePoliticalLocation();\n    if (!search) {\n      return;\n    }\n    let terms = [];\n    if (location.county && location.stateName) {\n      terms.push(location.county, location.stateName);\n    }\n    terms.push(location.country)\n    const allMatches = search.search(terms.join(\", \"));\n    if (allMatches && allMatches.length > 0) {\n      history.push(\"/country\" + allMatches[0].path.string())\n    }\n  }\n\n  return (\n    <SearchInput\n        onChoice={navigate}\n        onGeolocate={locationLookup}\n        {...props} />\n  );\n};\n","import Disqus from \"disqus-react\"\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FacebookProvider, Comments as FacebookComments} from 'react-facebook';\nimport {Paper, Tab, Tabs} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst disqusConfig = {\n  url: \"https://covid-19.direct/country/\",\n  identifier: \"world-frontpage\",\n  title: \"world page\"\n};\n\n// Facebook comments are lazily loaded, so we have to render it ahead of time\n// even though it'd be better to not.\nconst useStyles = makeStyles(theme => ({\n  'scrollPane': {\n    overflow: 'scroll',\n    maxHeight: '80vh',\n  },\n  'hide': {\n    display: 'none',\n  },\n}));\n\nexport const Discussion = (props) => {\n  const classes = useStyles();\n\n  const sources = [{\n    'label': 'Disqus comments',\n    'content':\n        <Disqus.DiscussionEmbed\n            shortname={\"covid19direct-world\"}\n            config={disqusConfig}\n        />\n  }, {\n    'label': 'Facebook',\n    'content':\n      <FacebookProvider appId=\"201788627783795\">\n        <FacebookComments href=\"https://covid-19.direct/\" />\n      </FacebookProvider>,\n  }];\n\n  const [source, setSource] = React.useState(0);\n  const change = (e, to) => {\n    setSource(to);\n  };\n\n  return (\n    <Paper className={props.className}>\n      <Tabs value={source} onChange={change}>\n        {sources.map(({label}, i) =>\n          <Tab key={label} label={label} value={i} />\n        )}\n      </Tabs>\n\n      <div className={classes.scrollPane}>\n        {sources.map(({label, content}, i) =>\n          <div key={label} className={source !== i ? classes.hide : ''}>\n            {content}\n          </div>\n        )}\n      </div>\n    </Paper>\n  );\n};\n\nDiscussion.propTypes = {\n  className: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, useMediaQuery} from '@material-ui/core';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport { myShortNumber } from \"../../Util.js\";\n\nconst useStyles = makeStyles(theme => ({\n  squishText: {\n    hyphens: 'auto',\n  },\n}));\n\n/** A table that is sortable by its columns. */\nexport const SortableTable = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const squish = useMediaQuery(theme.breakpoints.down('xs'));\n  const {columns, rows, defaultSortColumn} = props;\n\n  const [orderingBy, setOrderingBy] = React.useState(defaultSortColumn);\n  const [direction, setDirection] = React.useState(orderingBy.defaultDirection);\n\n  const sortFn = (a, b) =>\n      compareStable(\n          a, b, orderingBy.key, columns, direction === orderingBy.defaultDirection);\n  const sorted = [...rows].sort((a, b) =>\n      direction === 'asc' ? sortFn(a, b) : sortFn(b, a));\n\n  const createUpdateSort = (column) => () => {\n    setOrderingBy(column);\n    setDirection(\n        orderingBy === column\n            ? opposite(direction) : column.defaultDirection);\n  };\n\n  return (\n    <Table size=\"small\" className={squish ? classes.squishText : ''}>\n      <TableHead>\n        <TableRow>\n          {columns.map((column) =>\n            <TableCell key={column.key}>\n              <TableSortLabel\n                  active={orderingBy.key === column.key}\n                  direction={\n                    orderingBy === column ? direction : column.defaultDirection}\n                  hideSortIcon={squish}\n                  onClick={createUpdateSort(column)}\n              >\n                {squish ? column.shortLabel || column.label : column.label}\n              </TableSortLabel>\n            </TableCell>\n          )}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {sorted.map((row) =>\n          <TableRow key={row.id}>\n            {columns.map(({key, contextKey, renderShortNumber}) =>\n              <TableCell key={key}>\n                {render(row[key], renderShortNumber)}\n                {row[contextKey] && ` (${row[contextKey]})`}\n              </TableCell>\n            )}\n          </TableRow>\n        )}\n      </TableBody>\n    </Table>\n  );\n};\n\nconst columnPropType =\n    PropTypes.exact({\n        // The attribute in the object to lookup\n        key: PropTypes.string.isRequired,\n        // The label of the column\n        label: PropTypes.string.isRequired,\n        // The label to show when on a small screen\n        shortLabel: PropTypes.string,\n        // The default sort direction for the column\n        defaultDirection: PropTypes.oneOf(['desc', 'asc']).isRequired,\n        // An optional key of something to show inside parenthesis next to the\n        // main value, as context\n        contextKey: PropTypes.string,\n    });\n\nSortableTable.propTypes = {\n  columns: PropTypes.arrayOf(columnPropType).isRequired,\n  rows: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  })).isRequired,\n  defaultSortColumn: columnPropType.isRequired,\n};\n\nfunction opposite(direction) {\n  return direction === 'desc' ? 'asc' : 'desc';\n}\n\nfunction render(value, short) {\n  if (typeof value === 'number') {\n    if (short) {\n      return isNaN(value) ? '' : myShortNumber(value);\n    }\n    return isNaN(value) ? '' : value.toFixed(1).replace(/\\.?0*$/, '');\n  } else {\n    return value || '';\n  }\n}\n\nfunction valueFor(row, key) {\n  // First check if there even is a value\n  if (row[key] === undefined || row[key] === null) {\n    return undefined;\n  }\n\n  // Check if the value itself has a key object, this lets us compare React\n  // components.\n  if (row[key].key) {\n    return row[key].key;\n  } else {\n    return row[key];\n  }\n};\n\nfunction compareOn(a, b, key, emptyLast) {\n  const ak = valueFor(a, key);\n  const bk = valueFor(b, key);\n\n  if (isNaN(ak) && !isNaN(bk)) {\n    return emptyLast ? 1 : -1;\n  } else if (!isNaN(ak) && isNaN(bk)) {\n    return emptyLast ? -1 : 1;\n  } else if (ak < bk) {\n    return -1;\n  } else if (ak > bk) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\n\nfunction compareStable(a, b, key, columns, emptyLast) {\n  const preferred = compareOn(a, b, key, emptyLast);\n  if (preferred !== 0) {\n    return preferred;\n  }\n\n  // The preferred key exactly matched, so find a differentiating column\n  for (const column of columns) {\n    const attempt = compareOn(a, b, column.key);\n    if (attempt !== 0) {\n      return attempt;\n    }\n  }\n\n  return compareOn(a, b, 'id');\n};\n\n","import PropTypes from 'prop-types';\nimport React, {useContext} from 'react';\nimport {Link as MaterialLink} from '@material-ui/core';\nimport {Link as RouterLink} from 'react-router-dom';\n\nimport {BasicDataComponent} from '../../models/BasicDataComponent';\nimport {ChildrenComponent} from '../../models/ChildrenComponent';\nimport {NameComponent} from '../../models/NameComponent';\nimport {PopulationComponent} from '../../models/PopulationComponent';\nimport {Path} from '../../models/Path';\nimport {SortableTable} from './SortableTable';\nimport {WorldContext} from '../../WorldContext';\nimport { MyTabs } from \"../../MyTabs.js\"\n\n/** A table for showing basic data about children of a division entity. */\nexport const DivisionTableMain = (props) => {\n  const world = useContext(WorldContext);\n  const children =\n      world.get(props.parent, ChildrenComponent).children();\n\n  const columns = [\n    {key: 'name', label: 'Name', defaultDirection: 'asc'},\n    { key: 'confirmed', label: 'Confirmed', defaultDirection: 'desc' },\n    { key: 'confirmedNew', label: 'New', defaultDirection: 'desc' },\n    { key: 'active', label: 'Active', defaultDirection: 'desc' },\n    { key: 'recovered', label: 'Recovered', defaultDirection: 'desc' },\n    {key: 'died', label: 'Died',  defaultDirection: 'desc'},\n  ];\n  const defaultSortColumn = columns[1];\n\n  let picked;\n  if (props.pickLowest) {\n    const {count, quantifier} = props.pickLowest;\n    picked =\n        children.sort((a, b) => quantifier(a) - quantifier(b))\n            .slice(0, count);\n  } else {\n    picked = children;\n  }\n\n  const rows = [];\n  for (const child of picked) {\n    if (props.filter && !props.filter(child)) {\n      continue;\n    }\n\n    const [name, basic] =\n        world.getMultiple(child, [NameComponent, BasicDataComponent]);\n    if (!name || !basic) {\n      continue;\n    }\n\n    const confirmed = basic.confirmed().lastValue();\n    const active = basic.active().lastValue();\n    const recovered = basic.recovered().lastValue();\n    const newConfirmed = basic.confirmed().change().lastValue();\n    const confirmedChange =\n      !newConfirmed || newConfirmed === confirmed\n        ? ''\n        : Math.round(newConfirmed / confirmed * 1000) / 10 + '%';\n    rows.push({\n      id: child.string(),\n      name: \n          <MaterialLink key={name.english()} component={RouterLink} to={'/country' + child.string()}>\n            {name.english()}\n          </MaterialLink>,\n      confirmed: confirmed,\n      confirmedNew: newConfirmed,\n      confirmedChange, // unused for now\n      active: active,\n      recovered: recovered,\n      died: basic.died().lastValue(),\n    });\n  }\n\n  return (\n    <div className={props.className}>\n      {/* <Typography variant=\"h6\">{props.plural}</Typography> */}\n      <SortableTable\n          columns={columns}\n          rows={rows}\n          defaultSortColumn={defaultSortColumn}\n      />\n    </div>\n  );\n};\n\nDivisionTableMain.propTypes = {\n  parent: PropTypes.instanceOf(Path).isRequired,\n  plural: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  filter: PropTypes.func,\n  pickLowest: PropTypes.exact({\n    count: PropTypes.number.isRequired,\n    quantifier: PropTypes.func.isRequired,\n  }),\n};\n\nexport const DivisionTableCapita = (props) => {\n  const world = useContext(WorldContext);\n  const children =\n      world.get(props.parent, ChildrenComponent).children();\n\n  const columns = [\n    {key: 'name', label: 'Name', defaultDirection: 'asc'},\n    {key: 'confirmedPerMillion', label: 'Confirmed/mil', shortLabel: 'Conf. / mil', defaultDirection: 'desc'},\n    {key: 'deathsPerMillion', label: 'Deaths/mil', shortLabel: 'D/m', defaultDirection: 'desc'},\n    {key: 'activePerMillion', label: 'Active/mil', shortLabel: 'A/m', defaultDirection: 'desc'},\n    {key: 'recoveredPerMillion', label: 'Recovered/mil', shortLabel: 'R/m', defaultDirection: 'desc'},\n    { key: 'population', label: 'Population', shortLabel: 'Pop.', defaultDirection: 'desc', renderShortNumber:true},\n  ];\n  const defaultSortColumn = columns[1];\n\n  let picked;\n  if (props.pickLowest) {\n    const {count, quantifier} = props.pickLowest;\n    picked =\n        children.sort((a, b) => quantifier(a) - quantifier(b))\n            .slice(0, count);\n  } else {\n    picked = children;\n  }\n\n  const rows = [];\n  for (const child of picked) {\n    if (props.filter && !props.filter(child)) {\n      continue;\n    }\n\n    const [name, basic, population] =\n        world.getMultiple(child, [NameComponent, BasicDataComponent, PopulationComponent]);\n    if (!name || !basic) {\n      continue;\n    }\n\n    const pop = population.population();\n    const confirmed = basic.confirmed().lastValue();\n    const confirmedPerMillion =\n        population\n            ? Math.round(confirmed /pop  * 1000000)\n            : '';\n\n    const deaths = basic.died().lastValue();\n    const deathsPerMillion =\n        population\n            ? Math.round(deaths / pop * 1000000)\n            : '';\n    const active = basic.active().lastValue();\n    const activePerMillion =\n        population\n            ? Math.round(active / pop * 1000000)\n            : '';\n    const recovered = basic.recovered().lastValue();\n    const recoveredPerMillion =\n        population\n            ? Math.round(recovered / pop * 1000000)\n            : '';\n\n    rows.push({\n      id: child.string(),\n      name: \n          <MaterialLink key={name.english()} component={RouterLink} to={'/country' + child.string()}>\n            {name.english()}\n          </MaterialLink>,\n      confirmedPerMillion,\n      deathsPerMillion,\n      activePerMillion,\n      recoveredPerMillion,\n      population: pop,\n    });\n  }\n\n  return (\n    <div className={props.className}>\n      {/* <Typography variant=\"h6\">{props.plural}</Typography> */}\n      <SortableTable\n          columns={columns}\n          rows={rows}\n          defaultSortColumn={defaultSortColumn}\n      />\n    </div>\n  );\n};\n\nDivisionTableCapita.propTypes = DivisionTableMain.propTypes;\n\nexport const DivisionTableDaysToDouble = (props) => {\n  const world = useContext(WorldContext);\n  const children =\n      world.get(props.parent, ChildrenComponent).children();\n\n  const columns = [\n    {key: 'name', label: 'Name', defaultDirection: 'asc'},\n    {key: 'confirmedDoublingInterval', label: 'Confirmed', shortLabel: 'Conf.', defaultDirection: 'asc'},\n    {key: 'deathsDoublingInterval', label: 'Deaths',  defaultDirection: 'asc'},\n    {key: 'recoveredDoublingInterval', label: 'Recovered',  defaultDirection: 'asc'},\n  ];\n  const defaultSortColumn = columns[1];\n\n  let picked;\n  if (props.pickLowest) {\n    const {count, quantifier} = props.pickLowest;\n    picked =\n        children.sort((a, b) => quantifier(a) - quantifier(b))\n            .slice(0, count);\n  } else {\n    picked = children;\n  }\n\n  const rows = [];\n  for (const child of picked) {\n    if (props.filter && !props.filter(child)) {\n      continue;\n    }\n\n    const [name, basic] =\n        world.getMultiple(child, [NameComponent, BasicDataComponent]);\n    if (!name || !basic) {\n      continue;\n    }\n    rows.push({\n      id: child.string(),\n      name: \n          <MaterialLink key={name.english()} component={RouterLink} to={'/country' + child.string()}>\n            {name.english()}\n          </MaterialLink>,\n      confirmedDoublingInterval: basic.confirmed().doublingInterval().lastValue(),\n      deathsDoublingInterval: basic.died().doublingInterval().lastValue(),\n      recoveredDoublingInterval: basic.recovered().doublingInterval().lastValue(),\n    });\n  }\n\nDivisionTableDaysToDouble.propTypes = DivisionTableMain.propTypes;\n\n  return (\n    <div className={props.className}>\n      {/* <Typography variant=\"h6\">{props.plural}</Typography> */}\n      <SortableTable\n          columns={columns}\n          rows={rows}\n          defaultSortColumn={defaultSortColumn}\n      />\n    </div>\n  );\n};\n\nexport const DivisionTab = (props) => {\n  const tabs = [\n    <DivisionTableMain {...props} />,\n    <DivisionTableCapita {...props} />,\n    <DivisionTableDaysToDouble {...props} />,\n  ];\n\n  return (\n    <MyTabs\n    labels={[props.plural, \"Capita\", \"Days to 2x\"]}\n    urlQueryKey=\"table\"\n    urlQueryValues={['main', 'capita', \"daysto2x\"]}\n    tabs={tabs}\n  />);\n}","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { Chip, Paper, Typography } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link as MaterialLink } from '@material-ui/core';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph';\nimport { AppBar } from '../components/chrome/AppBar';\nimport { BasicDataComponent } from '../models/BasicDataComponent';\nimport { Discussion } from '../components/chrome/Discussion';\nimport { DivisionTab } from '../components/tables/DivisionTable';\nimport { DivisionTypesComponent } from '../models/DivisionTypesComponent';\nimport { ChildrenComponent } from '../models/ChildrenComponent';\nimport { Footer } from '../Footer';\nimport { GeographyComponent } from '../models/GeographyComponent';\nimport { NameComponent } from '../models/NameComponent';\nimport { Path } from '../models/Path';\nimport { ProjectionsComponent } from '../models/ProjectionsComponent';\nimport { SearchInput } from '../components/chrome/SearchInput';\nimport { WorldContext } from '../WorldContext';\nimport { MapUS } from \"../MapUS\"\nimport { myShortNumber } from \"../Util.js\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { PopulationComponent } from '../models/PopulationComponent';\n\nconst shortNumber = require('short-number');\n\nconst HORIZONTAL_MARGIN = '16px';\nconst NEARBY_TO_SHOW = 10;\n\nconst useStyles = makeStyles(theme => ({\n  body: {\n    background: '#fafafa',\n  },\n  content: {\n    padding: HORIZONTAL_MARGIN,\n    //margin: HORIZONTAL_MARGIN,\n  },\n  section: {\n    margin: '16px 0 24px 0',\n    overflow: 'scroll',\n  },\n  tag: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    backgroundColor: \"#f3f3f3\",\n    borderRadius: 10,\n    flexGrow: \"1\",\n    margin: 3,\n    color: \"black\",\n    textDecoration: \"none\",\n  },\n  tagSelected: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#00aeef\",\n  },\n  tagTitle: {\n    marginTop: 5,\n  },\n  tagSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    alignContent: \"flex-end\",\n  },\n  topTag: {\n    fontSize: \"0.5rem\",\n  },\n  smallTag: {\n    fontSize: \"0.5rem\",\n  },\n  mainTag: {\n    fontSize: \"1.0rem\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  row: {\n    padding: theme.spacing(1, 1),\n    justifyContent: \"space-between\",\n    display: \"flex\",\n  },\n  rowNoBeds: {\n    justifyContent: \"center\",\n  },\n}));\n\nconst MapWorld = withRouter((props) => {\n  return <MapUS  {...props} />;\n});\n\nexport const PageRegion = withRouter((props) => {\n  const classes = useStyles();\n  const world = useContext(WorldContext);\n  const path = Path.parse('/' + props.match.params[0]);\n\n  if (path.matches('/US')) {\n    return <Redirect to=\"/US\" />;\n  } else if (path.matches('/US/state/:state')) {\n    return <Redirect to={\"/state/\" + path.components[2]} />;\n  } else if (path.matches('/US/state/:state/county/:county')) {\n    return <Redirect to={\"/county/\" + path.components[2] + '/' + path.components[4]} />;\n  }\n\n  const [basic, divisions, geography] =\n    world.getMultiple(\n      path, [\n      BasicDataComponent,\n      DivisionTypesComponent,\n      GeographyComponent,\n      ProjectionsComponent,\n    ]);\n  if (!basic) {\n    throw new Error(`${path.string()} has no basic component`);\n  }\n\n  const parentDivision = path.parent();\n  const showNearby = geography && parentDivision;\n  const couldBeNearby = (candidate) =>\n    !path.equals(candidate) && world.has(candidate, GeographyComponent);\n  const distanceTo = (candidate) => {\n    const theirGeography = world.get(candidate, GeographyComponent);\n    // This is kind of garbage, we're comparing a point to a point. Really\n    // should be comparing bounds, but we don't have those.\n    return geography.distance(theirGeography);\n  };\n  const showMap = geography || !parentDivision;\n\n  return (\n    <div className={classes.body}>\n      <AppBar />\n\n      <Paper className={classes.content}>\n        <Title className={classes.section} path={path} />\n        <LocationSummaryTitle className={classes.section} path={path} />\n\n        <Graphs className={classes.section} path={path} />\n        {\n          showMap &&\n          <MapWorld source={basic} geography={geography} />\n        }\n\n        <a href=\"#division\" name=\"division\" >\n        </a>\n        {divisions &&\n          divisions.types().map(({ id, plural }) =>\n            <DivisionTab\n              key={id}\n              plural={plural}\n              parent={id ? path.child(id) : path}\n              className={classes.section}\n            />\n          )}\n\n        {showNearby &&\n          <DivisionTab\n            parent={parentDivision}\n            plural=\"Nearby\"\n            className={classes.section}\n            filter={couldBeNearby}\n            pickLowest={{\n              count: NEARBY_TO_SHOW,\n              quantifier: distanceTo,\n            }}\n          />}\n      </Paper>\n\n\n      <Discussion className={classes.content} />\n\n      <Footer />\n    </div>\n  );\n});\n\nconst useTitleStyles = makeStyles(theme => ({\n  noOverflow: {\n    overflow: 'hidden',\n  },\n  container: {\n    alignItems: 'flex-end',\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: '0 -12px',\n    width: 'calc(100% - 24px)',\n  },\n  tagSticky: {\n    backgroundColor: \"#FFFFFF\",\n    position: \"sticky\",\n    top: 0,\n    left: 0,\n    zIndex: \"1\",\n  },\n  tagContainer: {\n    alignItems: 'flex-end',\n    display: 'flex',\n    flexWrap: 'nowrap',\n    // margin: '0 -12px', // ??\n    width: 'calc(100% - 24px)',\n  },\n  node: {\n    margin: '0 12px 16px 12px',\n  },\n  text: {\n    padding: '0 8px',\n    marginLeft: '-8px',\n    marginRight: '8px',\n  },\n  parentLink: {\n    borderRadius: '8px',\n    color: fade(theme.palette.text.primary, 0.5),\n    textDecoration: 'none',\n    '&:hover': {\n      background: '#efefef',\n    },\n  },\n  numbers: {\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    flexWrap: 'wrap',\n\n    [theme.breakpoints.down('xs')]: {\n      display: 'initial',\n    },\n  },\n  number: {\n    borderLeft: '2px solid',\n    borderTop: '2px solid',\n    flexGrow: 1,\n    padding: '4px 0 4px 4px',\n    '&:not(:last-child)': {\n      paddingRight: '4px',\n    },\n  },\n}));\n\nconst Tag = withRouter((props) => {\n  let title = props.title;\n\n  const routeTo = props.link;\n  const selected = props.selected; // match.url === routeTo;\n  const confirmNumbers = props.numbers.find(s => s.plural === \"cases\");\n  const confirmed = confirmNumbers.value;\n  const confirmedNew = confirmNumbers.change;\n\n  const deathsNumbers = props.numbers.find(s => s.plural === \"deaths\");\n  const deaths = deathsNumbers.value;\n  const deathsNew = deathsNumbers.change;\n\n  const classes = useStyles();\n  return <RouterLink className={`${classes.tag} ${selected ? classes.tagSelected : ''}`} href={routeTo} to={routeTo}>\n    <div className={classes.tagTitle}> {title} </div>\n    <div className={`${classes.row} `} >\n      <section className={classes.tagSection}>\n        <div className={classes.topTag}>\n          +{myShortNumber(confirmedNew)}\n        </div>\n        <div className={classes.mainTag}>\n          {myShortNumber(confirmed)} </div>\n        <div className={classes.smallTag}>\n          Confirmed </div>\n      </section>\n      <section className={classes.tagSection}>\n        <div className={classes.topTag}>\n          +{myShortNumber(deathsNew)}\n        </div>\n        <div className={classes.main1GTag}>\n          {myShortNumber(deaths)} </div>\n        <div className={classes.smallTag}>\n          Deaths </div>\n      </section>\n    </div>\n  </RouterLink>;\n});\n\n\nconst WilsonTitle = (props) => {\n  const classes = useTitleStyles();\n  const tagclasses = useStyles();\n  const world = useContext(WorldContext);\n  const names = props.names;\n  const divisions = world.get(props.path, DivisionTypesComponent);\n  const first = divisions && divisions.types()[0];\n  const children =\n    first && world.get(\n      first.id ? props.path.child(first.id) : props.path,\n      ChildrenComponent);\n\n  return (\n    <div className={classes.tagSticky} >\n      <div className={classes.tagContainer}>\n        {\n          first && children &&\n          <MaterialLink className={tagclasses.tag} href=\"#division\">\n            <div className={tagclasses.tagTitle}> Dive in </div>\n            <div className={`${tagclasses.row} ${tagclasses.rowNoBeds}`} >\n              <section className={tagclasses.tagSection}>\n                <div className={tagclasses.topTag}>\n                </div>\n                <div className={tagclasses.mainTag}>\n                  {children.children().length}\n                </div>\n                <div className={tagclasses.smallTag}>\n                  {first.plural}\n                </div>\n              </section>\n            </div>\n          </MaterialLink>\n        }\n        {names.map(({ path, text, numbers, squish, link }, i) =>\n          <Tag\n            key={path.string()}\n            title={text}\n            selected={!squish}\n            numbers={numbers}\n            link={link}\n          >\n          </Tag>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction getNames(world, path) {\n  const name = world.get(path, NameComponent);\n  if (!name) {\n    return \"\";\n  }\n\n  const names = [{\n    path: path,\n    text: name.english(),\n  }];\n\n  let parentCursor = path.parent();\n  while (parentCursor) {\n    const parentName = world.get(parentCursor, NameComponent);\n    if (parentName) {\n      names.push({\n        path: parentCursor,\n        text: parentName.english(),\n        link: '/country' + parentCursor.string(),\n        squish: true,\n      });\n    }\n    parentCursor = parentCursor.parent();\n  }\n\n  for (const name of names) {\n    const basic = world.get(name.path, BasicDataComponent);\n    name.numbers = [\n      {\n        plural: 'cases',\n        color: '#00aeef',\n        value: basic.confirmed().lastValue(),\n        change: basic.confirmed().change().lastValue(),\n      },\n      {\n        plural: 'deaths',\n        color: 'red',\n        value: basic.died().lastValue(),\n        change: basic.died().change().lastValue(),\n      },\n    ];\n\n    if (!name.squish) {\n      name.numbers.push({\n        plural: 'active',\n        color: 'purple',\n        value: basic.active().lastValue(),\n        change: basic.active().change().lastValue(),\n      }, {\n        plural: 'recovered',\n        color: 'green',\n        value: basic.recovered().lastValue(),\n        change: basic.recovered().change().lastValue(),\n      });\n    }\n  }\n  return names;\n};\n\nconst Title = (props) => {\n  const world = useContext(WorldContext);\n  const names = getNames(world, props.path);\n\n  return <WilsonTitle names={names} path={props.path} />;\n};\n\nconst useSummaryStyle = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    justifyContent: \"space-around\",\n  },\n  aspect: {\n    flexDirection: \"column\",\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: '4px',\n    margin: '5px 5px',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  innerDiv: {\n    flexDirection: \"column\",\n    alignContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n    // padding: '4px',\n    // margin: '5px 5px',\n    flexGrow: 1,\n  },\n  label: {\n    fontSize: '.7em',\n  },\n  total: {\n    flexGrow: 1,\n    fontSize: '1.1em',\n  },\n  change: {\n    flexGrow: 1,\n    fontSize: '0.5em',\n    minHeight: \"0.5em\"\n  },\n}));\n\nconst LocationSummaryTitle = (props) => {\n  const world = useContext(WorldContext);\n  const names = getNames(world, props.path);\n\n  const numbers = names[0].numbers;\n  const classes = useSummaryStyle();\n\n  return (\n    <div className={classes.container}>\n      {numbers.map(({ plural, color, value, change }) =>\n        value > 0 && (\n          <Paper className={classes.aspect} >\n            <div className={classes.innerDiv} style={{ color: color }}>\n              <div className={classes.change}>\n                {change > 0 && `+${shortNumber(change)}`}\n              </div>\n              <div className={classes.total}>\n                {shortNumber(value)}\n              </div>\n              <div className={classes.label}>\n                {plural}\n              </div>\n            </div>\n          </Paper>\n        )\n      )}\n    </div>\n  );\n};\n\nTitle.propTypes = {\n  className: PropTypes.string,\n  path: PropTypes.instanceOf(Path).isRequired,\n};\n\nconst useGraphStyles = makeStyles(theme => ({\n  graph: {\n    border: '1px solid',\n    borderColor: theme.palette.divider,\n    borderRadius: '4px',\n    padding: '8px',\n  },\n  comparisons: {\n    alignItems: 'center',\n    display: 'flex',\n    margin: theme.spacing(1, 0),\n  },\n  comparisonSearch: {\n    backgroundColor: theme.palette.action.hover,\n    margin: theme.spacing(0, 2),\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  chip: {\n    margin: theme.spacing(0, 1),\n  },\n}));\n\nconst Graphs = (props) => {\n  const classes = useGraphStyles();\n  const world = useContext(WorldContext);\n  const name = world.get(props.path, NameComponent);\n  const basic = world.get(props.path, BasicDataComponent);\n  const population = world.get(props.path, PopulationComponent);\n\n  const [comparingWith, setComparingWith] = React.useState(() => []);\n  const addComparison = (path) => {\n    const name = world.get(path, NameComponent);\n    const basic = world.get(path, BasicDataComponent);\n    const population = world.get(path, PopulationComponent);\n    setComparingWith(comparingWith.concat([{\n      path,\n      name,\n      basic,\n      population\n    }]));\n  };\n  const removeComparison = (i) => {\n    const copied = [...comparingWith];\n    copied.splice(i, 1);\n    setComparingWith(copied);\n  };\n\n  return (\n    <div className={props.className}>\n      <div className={classes.comparisons}>\n        <Typography>Compare with: </Typography>\n        <SearchInput\n          className={classes.comparisonSearch}\n          onChoice={addComparison}\n        />\n        {comparingWith.map(({ path, name }, i) => {\n          return (\n            <Chip\n              key={path.string()}\n              className={classes.chip}\n              onDelete={() => removeComparison(i)}\n              label={name.english()}\n            />\n          );\n        })}\n      </div>\n\n      {[DailyChangeGraph, DailyTotalGraph, DoublingGraph].map((Graph, i) => (\n        <Graph\n          key={i}\n          name={name}\n          basic={basic}\n          population={population}\n          comparingWith={comparingWith}\n          className={classes.graph}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst baseToggleButtonStyles = {\n  height: 'initial',\n  textTransform: 'initial',\n};\n\nconst useLegendStyles = makeStyles(theme => ({\n  serieses: {\n    border: `1px solid ${fade(theme.palette.action.active, 0.12)}`,\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: '500px',\n  },\n  series: {\n    border: 'none',\n    color: fade(theme.palette.action.active, 0.12),\n    '&.selected': {\n      backgroundColor: 'initial',\n      color: fade(theme.palette.action.active, 0.8),\n      fontWeight: 'initial',\n    },\n    ...baseToggleButtonStyles,\n  },\n  icon: {\n    paddingRight: '4px',\n  },\n}));\n\nconst Legend = (props) => {\n  const classes = useLegendStyles();\n  console.log(props.spec)\n  return (\n    <ToggleButtonGroup\n      exclusive={true}\n      value={props.selected}\n      onChange={(event, desired) => props.onChange(desired)}\n      className={classes.serieses}>\n      {props.spec.map(series => {\n        console.log(series.key);\n        return <ToggleButton\n          key={series.key}\n          value={series.key}\n          classes={{ root: classes.series, selected: 'selected' }}>\n          {series.series.label_}\n        </ToggleButton>\n      }\n      )}\n    </ToggleButtonGroup>\n  );\n};\n\nconst useDisplayStyles = makeStyles(theme => ({\n  options: {\n    display: 'initial',\n  },\n  option: {\n    ...baseToggleButtonStyles,\n  },\n}));\n\nconst Display = (props) => {\n  const classes = useDisplayStyles();\n\n  return (\n    <ToggleButtonGroup\n      exclusive\n      value={props.selected}\n      onChange={(event, desired) => desired && props.onChange(desired)}\n      className={classes.options}>\n      {[...props.displays.entries()].map(([key, data]) =>\n        <ToggleButton key={key} value={key} className={classes.option}>\n          {data.label}\n        </ToggleButton>\n      )}\n    </ToggleButtonGroup>\n  );\n};\n\nconst DailyChangeGraph = (props) => {\n  const name = props.name;\n  const basic = props.basic;\n  const population = props.population.population();;\n  const isCompareMode = props.comparingWith.length > 0;\n  const aligned = false;  // hard coding for now, provide GUI later\n\n  const scales = new Map([\n    ['capita', {\n      label: 'Capita',\n      capita: true,\n    }],\n    ['value', {\n      label: 'Value',\n      capita: false,\n    }],\n  ]);\n  const [scale, setScale] = React.useState(scales.keys().next().value)\n  const perCapita = scales.get(scale).capita;\n\n  const serieseDef = [\n    {\n      seriesGen: (source) => source.confirmed().change(),\n      color: '#7ed0d0',\n      key: \"confirm\",\n    },\n    {\n      seriesGen: (source) => source.confirmed().fitVirusCV19Prediction().change().dropFirst(),\n      color: 'pink',\n      key: \"trend\",\n    },\n    {\n      seriesGen: (source) => source.recovered().change(),\n      color: 'green',\n      key: \"recovery\",\n    },\n    {\n      seriesGen: (source) => source.died().change(),\n      color: 'red',\n      key: \"death\",\n    },\n  ];\n\n  let t0point = basic.confirmed().pointLargerEqualThan(100);\n\n  const serieses = serieseDef.map(s => {\n    let series = s.seriesGen(basic);\n    if (t0point && aligned) {\n      series.setT0(t0point[0].unix())\n    }\n    return {\n      ...s,\n      series: series,\n    }\n  })\n\n  let graphSeries = serieses.map(s => s);\n\n  const [selected, setSelected] = React.useState(serieses[0].key);\n\n  let compareSeriesSelector = null;\n\n  if (isCompareMode) {\n    compareSeriesSelector =\n      <div>\n        <Legend\n          spec={serieses}\n          selected={selected}\n          onChange={setSelected}\n        />\n        <Display\n          displays={scales}\n          selected={scale}\n          onChange={setScale}\n        ></Display>\n\n      </div>\n    const colors = [\n      '#7ed0d0',\n      'pink',\n      'green',\n      'red',\n      'purple',\n      'black',\n    ];\n    let colorIndex = 0;\n\n    let compareserieses = serieseDef.map(s => {\n      let series = s.seriesGen(basic);\n      if (perCapita) {\n        series = series.capita(population / 1000000).suffixLabel(`${name.english()} (per mil)`);\n      }\n      if (t0point && aligned) {\n        series.setT0(t0point[0].unix())\n      }\n      return {\n        ...s,\n        color: \"#ff7300\",\n        series: series,\n      }\n    })\n    graphSeries = compareserieses.filter(s => {\n      return s.key === selected;\n    });\n    for (const { name, basic, population } of props.comparingWith) {\n      basic.confirmed().points();\n      let t0point = basic.confirmed().pointLargerEqualThan(100);\n      let series = serieseDef.find(s => s.key === selected).seriesGen(basic).suffixLabel(`${name.english()}`);\n      if (perCapita) {\n        series = series.capita(population.population() / 1000000).suffixLabel(\"(per mil)\");\n      }\n      if (t0point && aligned) {\n        series.setT0(t0point[0].unix())\n      }\n      graphSeries.push({\n        series: series,\n        color: colors[colorIndex++],\n        stipple: true,\n      });\n    }\n  }\n\n  return (\n    <div>\n      {compareSeriesSelector}\n      <AdvancedGraph\n        className={props.className}\n        serieses={graphSeries}\n        alignT0={aligned}\n      />\n    </div>\n  );\n};\n\nconst DailyTotalGraph = (props) => {\n  const basic = props.basic;\n\n  return (\n    <AdvancedGraph\n      className={props.className}\n      serieses={[{\n        series: basic.confirmed(),\n        color: 'teal',\n        trend: 'orange',\n        initial: 'off',\n      }, {\n        series: basic.died(),\n        color: 'red',\n        trend: '#ce889f',\n      }, {\n        series: basic.recovered(),\n        color: 'green',\n        trend: '#668000',\n      }, {\n        series: basic.active(),\n        color: 'purple',\n        initial: 'off',\n      }, {\n        series: basic.confirmed().fitVirusCV19Prediction(),\n        color: 'pink',\n        initial: 'off',\n      },\n      ]}\n    />\n  );\n};\n\nconst DoublingGraph = (props) => {\n  const basic = props.basic;\n\n  return (\n    <AdvancedGraph\n      className={props.className}\n      serieses={[{\n        series: basic.confirmed().doublingInterval(),\n        color: 'teal',\n        trend: '#7ed0d0',\n      }, {\n        series: basic.died().doublingInterval(),\n        color: 'red',\n        trend: '#ce889f',\n      },\n      ]}\n    />\n  );\n};\n","import React, { useContext } from 'react';\nimport { withHeader } from \"./ContentWrapping.js\"\nimport { CountryContext } from \"./CountryContext\";\nimport { USInfoTopWidget } from './USInfoTopWidget.js'\nimport * as Util from \"./Util.js\"\nimport { Box } from '@material-ui/core';\nimport { Title } from './Title';\n\nconst textStyle = {\n    color: 'white',\n    fontSize: 'x-large',\n}\n\nconst Page404 = withHeader(() => {\n    const country = useContext(CountryContext);\n    const default_county_info = Util.getDefaultCounty();\n    const state = country.stateForTwoLetterName(default_county_info.state)\n    const county = state.countyForName(default_county_info.county)\n    return (\n        <>\n            <Title\n                title=\"Page not found\"\n                desc={`${country.name} county-level COVID-19 30-day data visualized: `\n                          + `confirmed cases, new cases & death curves, `\n                          + `testing results & hospitalization numbers.`}\n            />\n            <USInfoTopWidget source={county || state} />\n            <Box\n                display=\"flex\"\n                height={80}\n                bgcolor=\"#00aeef\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <h1 style={textStyle}>\n                    Oops! That page couldn&apos;t be found.\n                </h1>\n            </Box>\n        </>\n    );\n});\n\nexport { Page404 }\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const compactTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00aeef',\n        },\n        secondary: {\n            main: '#00aeef',\n        },\n    },\n    overrides: {\n        MuiTableCell: {\n            sizeSmall: {  //This can be referred from Material UI API documentation.\n                padding: '1px 1px 1px 1px',\n            },\n        },\n        MuiToggleButton: {\n            sizeSmall: {\n                //This can be referred from Material UI API documentation.\n                maxHeight: 24,\n            }\n        }\n    },\n});\n","import React from 'react';\nimport { Switch, Redirect, Route, withRouter } from 'react-router-dom'\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Splash } from './Splash.js';\nimport { fetchApproximatePoliticalLocation } from \"./GeoLocation\"\nimport { logger } from \"./AppModule\"\nimport { PageUS } from \"./PageUS\"\nimport { PageState } from \"./PageState\"\nimport { PageCounty } from \"./PageCounty\"\nimport { PageMetro } from \"./PageMetro\"\nimport { PageRegion } from \"./pages/PageRegion\";\nimport { Page404 } from \"./Page404\"\nimport { Country } from \"./UnitedStates\";\nimport { CountryContext } from \"./CountryContext\";\nimport { Title } from \"./Title\";\nimport { compactTheme } from \"./Theme.js\";\nimport { reverse } from 'named-urls';\nimport routes from \"./Routes\";\nimport { makeCountyFromDescription } from \"./Util\"\n\nimport { WorldContext } from './WorldContext';\nimport { createBasicEarthAsync } from './models/Earth';\nimport { SearchIndexComponent } from './models/SearchIndexComponent';\nimport { SEARCH_INDEX_PATH } from './models/Earth';\n\nconst App = (props) => {\n  return <BrowserRouter>\n    <Title />\n    <ThemeProvider theme={compactTheme}>\n      <MainApp  {...props} />\n    </ThemeProvider>\n  </BrowserRouter>;\n};\n\nconst MainApp = withRouter((props) => {\n  const [earth, setEarth] = React.useState(null);\n  const [country, setCountry] = React.useState(null);\n  const [myCounty, setMyCounty] = React.useState(null);\n  const [nonUSCountry, setNonUSCountry] = React.useState(null);\n  const ROW_special = props.location.pathname.startsWith(\"/country\")\n    && !props.location.pathname.startsWith(\"/country/US\");\n  React.useEffect(() => {\n    if (ROW_special) {\n      createBasicEarthAsync().then(data => setEarth(data));\n    }\n    const myCountry = new Country();\n    setCountry(myCountry);\n\n    fetchApproximatePoliticalLocation().then(countyDescr => {\n      if (countyDescr.country === \"United States of America\" || countyDescr.county) {\n        const county = makeCountyFromDescription(myCountry, countyDescr);\n        setMyCounty(county);\n        logger.logEvent(\"AppStart\", {\n          myCounty: county,\n        });\n      } else {\n        setNonUSCountry(countyDescr.country);\n      }\n    });\n  }, [ROW_special]);\n\n  if ((ROW_special && earth === null) || country === null) {\n    return <Splash />\n  }\n\n  if (props.location.pathname === \"/\") {\n    if (myCounty) {\n      return <Redirect to={reverse(routes.county, {\n        state: myCounty.state().twoLetterName,\n        county: myCounty.name,\n      })} />;\n    }\n\n    if (nonUSCountry) {\n      const search = earth.get(SEARCH_INDEX_PATH, SearchIndexComponent);\n      console.log(\"----------------------------:\" + nonUSCountry);\n      console.log(nonUSCountry);\n      const allMatches = search.search(nonUSCountry);\n\n      if (allMatches && allMatches.length > 0) {\n        return <Redirect to={\"/country\" + allMatches[0].path.string()} />;\n      }\n    }\n    return <Splash />\n  }\n\n  if (ROW_special) {\n    return (\n      <WorldContext.Provider value={earth}>\n        <CountryContext.Provider value={country}>\n          <SafeRoutes />\n        </CountryContext.Provider>\n      </WorldContext.Provider>\n    );\n  };\n\n  return (\n    <CountryContext.Provider value={country}>\n      <SafeRoutes />\n    </CountryContext.Provider>\n  );\n\n});\n\nclass UnhookedSafeRoutes extends React.Component {\n\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return UnhookedSafeRoutes.successStateFor(props);\n    } else {\n      return null;\n    }\n  }\n\n  static successStateFor(props) {\n    return { errored: false, location: props.location };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = UnhookedSafeRoutes.successStateFor(props);\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ errored: true });\n  }\n\n  render() {\n    if (this.state.errored) {\n      // Is lying really so bad in this situation? It's probably a 404 anyway...\n      return <Page404 />;\n    } else {\n      return (\n        <Switch>\n          <Route exact path={routes.county} component={PageCounty} />\n          <Route exact path={routes.state} component={PageState} />\n          <Route exact path={routes.united_states} component={PageUS} />\n          <Route exact path={routes.metro} component={PageMetro} />\n          <Route exact path={routes.united_states_recovery} component={PageUS} />\n          <Route exact path={routes.region} component={PageRegion} />\n          <Route exact path=\"*\" component={Page404} status={404} />\n        </Switch>\n      );\n    }\n  }\n}\nconst SafeRoutes = withRouter(UnhookedSafeRoutes);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const { CountyInfo } = require('./CountyInfo.js');\nconst { Util } = require('./Util.js');\n\nexports.CountyInfo = CountyInfo;\nexports.Util = Util;","const superagent = require(\"superagent\");\n\nasync function fetchPublicCountyData(state_short, county_fips) {\n  return superagent\n    .get(`/AllData/${state_short}/${county_fips}.json`)\n    .then(res => {\n      return res.body;\n    });\n}\n\n\n\n\nasync function fetchPublicCountyDataNew(county_fips) {\n  return superagent\n    // .get(`https://gowatchit.net/data/county/${county_fips}.json`)\n    .get(`https://raw.githubusercontent.com/xunhuang/random/gh-pages/data/county/${county_fips}.json`)\n    .then(res => {\n      // console.log(res.text);\n      // console.log(res.body);\n      return JSON.parse(res.text);\n      // return res.body;\n    });\n}\n\nasync function fetchPublicCountyDataNewTimeSeries(county_fips) {\n  return superagent\n    // .get(`https://gowatchit.net/data/county-details/${county_fips}.json`)\n    .get(`https://raw.githubusercontent.com/xunhuang/random/gh-pages/data/county-details/${county_fips}.json`)\n    .then(res => {\n      return JSON.parse(res.text);\n      // return res.body;\n    });\n}\n\nvar request = require('request'), zlib = require('zlib');\n\nfunction streamToString(stream) {\n  const chunks = []\n  return new Promise((resolve, reject) => {\n    stream.on('data', chunk => chunks.push(chunk))\n    stream.on('error', reject)\n    stream.on('end', () => resolve(Buffer.concat(chunks).toString('utf8')))\n  })\n}\n\nasync function fetchAllUSData() {\n  var headers = {\n    'Accept-Encoding': 'gzip'\n  };\n\n  let unzippedStream = request({\n    url: window.location.origin + `/AllData/AllData.json.gz`,\n    'headers': headers\n  })\n    .pipe(zlib.createGunzip());\n  let jsonString = await streamToString(unzippedStream);\n  return JSON.parse(jsonString);\n}\n\nasync function fetchWorldData() {\n  return superagent\n    .get(`/AllData/WorldData.json`)\n    .then(res => {\n      return res.body;\n    });\n}\n\nexport {\n  fetchPublicCountyData,\n  fetchPublicCountyDataNew,\n  fetchPublicCountyDataNewTimeSeries,\n  fetchAllUSData,\n  fetchWorldData\n}","const CountyGeoData = require('../src/data/county_gps.json');\n\nfunction findCountyStrict(state_two_letter, countyname) {\n  return CountyGeoData.find(s => s.State == state_two_letter && s.County === countyname);\n}\n\nfunction getFipsFromStateCountyName(state_two_letter, countyname) {\n\n  const methods = [\n    () => findCountyStrict(state_two_letter, countyname),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" County\", \"\")),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" Parish\", \"\")),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" city\", \"\")),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" city\", \" City\")),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" City\", \"\")),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" Borough\", \"\")),\n  ];\n\n\n  let county;\n  for (const method of methods) {\n    try {\n      county = method();\n      if (county)\n        break;\n    } catch (err) {\n      continue;\n    }\n  }\n  if (county) {\n    return county.FIPS.padStart(5, \"0\");\n  }\n  return null;\n}\n\nconst STATE_TWO_LETTER_TO_POPULATIONS = {\n  \"CA\": 39937489,\n  \"TX\": 29472295,\n  \"FL\": 21992985,\n  \"NY\": 19440469,\n  \"PA\": 12820878,\n  \"IL\": 12659682,\n  \"OH\": 11747694,\n  \"GA\": 10736059,\n  \"NC\": 10611862,\n  \"MI\": 10045029,\n  \"NJ\": 8936574,\n  \"VA\": 8626207,\n  \"WA\": 7797095,\n  \"AZ\": 7378494,\n  \"MA\": 6976597,\n  \"TN\": 6897576,\n  \"IN\": 6745354,\n  \"MO\": 6169270,\n  \"MD\": 6083116,\n  \"WI\": 5851754,\n  \"CO\": 5845526,\n  \"MN\": 5700671,\n  \"SC\": 5210095,\n  \"AL\": 4908621,\n  \"LA\": 4645184,\n  \"KY\": 4499692,\n  \"OR\": 4301089,\n  \"OK\": 3954821,\n  \"CT\": 3563077,\n  \"UT\": 3282115,\n  \"IA\": 3179849,\n  \"NV\": 3139658,\n  \"AR\": 3038999,\n  \"PR\": 3032165,\n  \"MS\": 2989260,\n  \"KS\": 2910357,\n  \"NM\": 2096640,\n  \"NE\": 1952570,\n  \"ID\": 1826156,\n  \"WV\": 1778070,\n  \"HI\": 1412687,\n  \"NH\": 1371246,\n  \"ME\": 1345790,\n  \"MT\": 1086759,\n  \"RI\": 1056161,\n  \"DE\": 982895,\n  \"SD\": 903027,\n  \"ND\": 761723,\n  \"AK\": 734002,\n  \"DC\": 720687,\n  \"VT\": 628061,\n  \"WY\": 567025,\n  \"GU\": 164229,\n  \"VI\": 107268,\n  \"AS\": 55641,\n  \"MP\": 55144,\n};\nconst STATE_FIPS_TO_NAME = {\n  \"10\": \"Delaware\",\n  \"11\": \"District of Columbia\",\n  \"12\": \"Florida\",\n  \"13\": \"Georgia\",\n  \"15\": \"Hawaii\",\n  \"16\": \"Idaho\",\n  \"17\": \"Illinois\",\n  \"18\": \"Indiana\",\n  \"19\": \"Iowa\",\n  \"20\": \"Kansas\",\n  \"21\": \"Kentucky\",\n  \"22\": \"Louisiana\",\n  \"23\": \"Maine\",\n  \"24\": \"Maryland\",\n  \"25\": \"Massachusetts\",\n  \"26\": \"Michigan\",\n  \"27\": \"Minnesota\",\n  \"28\": \"Mississippi\",\n  \"29\": \"Missouri\",\n  \"30\": \"Montana\",\n  \"31\": \"Nebraska\",\n  \"32\": \"Nevada\",\n  \"33\": \"New Hampshire\",\n  \"34\": \"New Jersey\",\n  \"35\": \"New Mexico\",\n  \"36\": \"New York\",\n  \"37\": \"North Carolina\",\n  \"38\": \"North Dakota\",\n  \"39\": \"Ohio\",\n  \"40\": \"Oklahoma\",\n  \"41\": \"Oregon\",\n  \"42\": \"Pennsylvania\",\n  \"44\": \"Rhode Island\",\n  \"45\": \"South Carolina\",\n  \"46\": \"South Dakota\",\n  \"47\": \"Tennessee\",\n  \"48\": \"Texas\",\n  \"49\": \"Utah\",\n  \"50\": \"Vermont\",\n  \"51\": \"Virginia\",\n  \"53\": \"Washington\",\n  \"54\": \"West Virginia\",\n  \"55\": \"Wisconsin\",\n  \"56\": \"Wyoming\",\n  \"01\": \"Alabama\",\n  \"02\": \"Alaska\",\n  \"04\": \"Arizona\",\n  \"05\": \"Arkansas\",\n  \"06\": \"California\",\n  \"08\": \"Colorado\",\n  \"09\": \"Connecticut\",\n  \"72\": \"Puerto Rico\",\n  \"66\": \"Guam\",\n  \"78\": \"Virgin Islands\",\n  \"60\": \"American Samoa\",\n  \"69\": \"Northern Mariana Islands\",\n  \"88\": \"Grand Princess\",\n  \"96\": \"US Military\",\n  \"97\": \"Federal Prison\",\n  \"99\": \"Diamond Princess\",\n};\n\nconst fipsToState =\n{\n  \"96\": {\n    \"abbreviation\": \"AY\",\n    \"name\": \"US Military\"\n  },\n  \"97\": {\n    \"abbreviation\": \"FP\",\n    \"name\": \"Federal Prison\"\n  },\n  \"88\": {\n    \"abbreviation\": \"GP\",\n    \"name\": \"Grand Princess\"\n  },\n  \"99\": {\n    \"abbreviation\": \"DP\",\n    \"name\": \"Diamond Princess\"\n  },\n  \"01\": {\n    \"abbreviation\": \"AL\",\n    \"name\": \"Alabama\"\n  },\n  \"02\": {\n    \"abbreviation\": \"AK\",\n    \"name\": \"Alaska\"\n  },\n  \"03\": {\n    \"abbreviation\": \"AS\",\n    \"name\": \"American Samoa\"\n  },\n  \"04\": {\n    \"abbreviation\": \"AZ\",\n    \"name\": \"Arizona\"\n  },\n  \"05\": {\n    \"abbreviation\": \"AR\",\n    \"name\": \"Arkansas\"\n  },\n  \"06\": {\n    \"abbreviation\": \"CA\",\n    \"name\": \"California\"\n  },\n  \"07\": {\n    \"abbreviation\": \"CZ\",\n    \"name\": \"Canal Zone\"\n  },\n  \"08\": {\n    \"abbreviation\": \"CO\",\n    \"name\": \"Colorado\"\n  },\n  \"09\": {\n    \"abbreviation\": \"CT\",\n    \"name\": \"Connecticut\"\n  },\n  \"10\": {\n    \"abbreviation\": \"DE\",\n    \"name\": \"Delaware\"\n  },\n  \"11\": {\n    \"abbreviation\": \"DC\",\n    \"name\": \"District Of Columbia\"\n  },\n  \"12\": {\n    \"abbreviation\": \"FL\",\n    \"name\": \"Florida\"\n  },\n  \"13\": {\n    \"abbreviation\": \"GA\",\n    \"name\": \"Georgia\"\n  },\n  \"14\": {\n    \"abbreviation\": \"GU\",\n    \"name\": \"Guam\"\n  },\n  \"15\": {\n    \"abbreviation\": \"HI\",\n    \"name\": \"Hawaii\"\n  },\n  \"16\": {\n    \"abbreviation\": \"ID\",\n    \"name\": \"Idaho\"\n  },\n  \"17\": {\n    \"abbreviation\": \"IL\",\n    \"name\": \"Illinois\"\n  },\n  \"18\": {\n    \"abbreviation\": \"IN\",\n    \"name\": \"Indiana\"\n  },\n  \"19\": {\n    \"abbreviation\": \"IA\",\n    \"name\": \"Iowa\"\n  },\n  \"20\": {\n    \"abbreviation\": \"KS\",\n    \"name\": \"Kansas\"\n  },\n  \"21\": {\n    \"abbreviation\": \"KY\",\n    \"name\": \"Kentucky\"\n  },\n  \"22\": {\n    \"abbreviation\": \"LA\",\n    \"name\": \"Louisiana\"\n  },\n  \"23\": {\n    \"abbreviation\": \"ME\",\n    \"name\": \"Maine\"\n  },\n  \"24\": {\n    \"abbreviation\": \"MD\",\n    \"name\": \"Maryland\"\n  },\n  \"25\": {\n    \"abbreviation\": \"MA\",\n    \"name\": \"Massachusetts\"\n  },\n  \"26\": {\n    \"abbreviation\": \"MI\",\n    \"name\": \"Michigan\"\n  },\n  \"27\": {\n    \"abbreviation\": \"MN\",\n    \"name\": \"Minnesota\"\n  },\n  \"28\": {\n    \"abbreviation\": \"MS\",\n    \"name\": \"Mississippi\"\n  },\n  \"29\": {\n    \"abbreviation\": \"MO\",\n    \"name\": \"Missouri\"\n  },\n  \"30\": {\n    \"abbreviation\": \"MT\",\n    \"name\": \"Montana\"\n  },\n  \"31\": {\n    \"abbreviation\": \"NE\",\n    \"name\": \"Nebraska\"\n  },\n  \"32\": {\n    \"abbreviation\": \"NV\",\n    \"name\": \"Nevada\"\n  },\n  \"33\": {\n    \"abbreviation\": \"NH\",\n    \"name\": \"New Hampshire\"\n  },\n  \"34\": {\n    \"abbreviation\": \"NJ\",\n    \"name\": \"New Jersey\"\n  },\n  \"35\": {\n    \"abbreviation\": \"NM\",\n    \"name\": \"New Mexico\"\n  },\n  \"36\": {\n    \"abbreviation\": \"NY\",\n    \"name\": \"New York\"\n  },\n  \"37\": {\n    \"abbreviation\": \"NC\",\n    \"name\": \"North Carolina\"\n  },\n  \"38\": {\n    \"abbreviation\": \"ND\",\n    \"name\": \"North Dakota\"\n  },\n  \"39\": {\n    \"abbreviation\": \"OH\",\n    \"name\": \"Ohio\"\n  },\n  \"40\": {\n    \"abbreviation\": \"OK\",\n    \"name\": \"Oklahoma\"\n  },\n  \"41\": {\n    \"abbreviation\": \"OR\",\n    \"name\": \"Oregon\"\n  },\n  \"42\": {\n    \"abbreviation\": \"PA\",\n    \"name\": \"Pennsylvania\"\n  },\n  \"43\": {\n    \"abbreviation\": \"PR\",\n    \"name\": \"Puerto Rico\"\n  },\n  \"44\": {\n    \"abbreviation\": \"RI\",\n    \"name\": \"Rhode Island\"\n  },\n  \"45\": {\n    \"abbreviation\": \"SC\",\n    \"name\": \"South Carolina\"\n  },\n  \"46\": {\n    \"abbreviation\": \"SD\",\n    \"name\": \"South Dakota\"\n  },\n  \"47\": {\n    \"abbreviation\": \"TN\",\n    \"name\": \"Tennessee\"\n  },\n  \"48\": {\n    \"abbreviation\": \"TX\",\n    \"name\": \"Texas\"\n  },\n  \"49\": {\n    \"abbreviation\": \"UT\",\n    \"name\": \"Utah\"\n  },\n  \"50\": {\n    \"abbreviation\": \"VT\",\n    \"name\": \"Vermont\"\n  },\n  \"51\": {\n    \"abbreviation\": \"VA\",\n    \"name\": \"Virginia\"\n  },\n  \"52\": {\n    \"abbreviation\": \"VI\",\n    \"name\": \"Virgin Islands\"\n  },\n  \"53\": {\n    \"abbreviation\": \"WA\",\n    \"name\": \"Washington\"\n  },\n  \"54\": {\n    \"abbreviation\": \"WV\",\n    \"name\": \"West Virginia\"\n  },\n  \"55\": {\n    \"abbreviation\": \"WI\",\n    \"name\": \"Wisconsin\"\n  },\n  \"56\": {\n    \"abbreviation\": \"WY\",\n    \"name\": \"Wyoming\"\n  },\n  \"72\": {\n    \"abbreviation\": \"PR\",\n    \"name\": \"Puerto Rico\",\n  },\n  \"66\": {\n    \"abbreviation\": \"GU\",\n    \"name\": \"Guam\",\n  },\n  \"78\": {\n    \"abbreviation\": \"VI\",\n    \"name\": \"Virgin Islands\",\n  },\n  \"60\": {\n    \"abbreviation\": \"AS\",\n    \"name\": \"American Samoa\",\n  },\n  \"69\": {\n    \"abbreviation\": \"MP\",\n    \"name\": \"Northern Mariana Islands\",\n  },\n}\n\nconst STATE_SHORTNAME_TO_FIPS = (() => {\n  return Object.keys(fipsToState).reduce((m, k) => {\n    m[fipsToState[k].abbreviation] = k;\n    return m;\n  }, {});\n})();\n\nconst STATE_Name_To_FIPS = (() => {\n  return Object.keys(STATE_FIPS_TO_NAME).reduce((m, k) => {\n    m[STATE_FIPS_TO_NAME[k]] = k\n    return m;\n  }, {});\n})();\n\nfunction getStatePopulation(two_letter_state_name) {\n  return STATE_TWO_LETTER_TO_POPULATIONS[two_letter_state_name];\n}\n\nfunction getStateNameFromFips(state_fips) {\n  return STATE_FIPS_TO_NAME[state_fips];\n}\n\nfunction getStateAbbreviationFromFips(state_fips) {\n  // console.log(state_fips)\n  if (state_fips === '00') {\n    return \"NN\";\n  }\n  return fipsToState[state_fips].abbreviation;\n}\n\nfunction getFipsFromStateName(state_name) {\n  return STATE_Name_To_FIPS[state_name];\n}\n\nfunction getFipsFromStateShortName(state_name_short) {\n  return STATE_SHORTNAME_TO_FIPS[state_name_short];\n}\n\nfunction getAllStateFips() {\n  return Object.keys(STATE_FIPS_TO_NAME);\n}\n\nconst CountyInfo = {\n  getStatePopulation,\n  getStateNameFromFips,\n  getStateAbbreviationFromFips,\n  getFipsFromStateName,\n  getFipsFromStateShortName,\n  getAllStateFips,\n  getFipsFromStateCountyName,\n}\n\nexports.CountyInfo = CountyInfo;\n","\nconst moment = require(\"moment\");\nfunction pad(n) { return n < 10 ? '0' + n : n }\n\n//    3/26/20 ===> 03/26/2020\nfunction normalize_date(k) {\n  let p = k.split(\"/\");\n  if (p.length !== 3) {\n    return null;\n  }\n  let m = pad(parseInt(p[0]));\n  let d = pad(parseInt(p[1]));\n  let y = p[2];\n  if (y.length === 2) {\n    y = \"20\" + y;\n  }\n  return `${m}/${d}/${y}`;\n}\n\nfunction getValueFromLastDate(v, comment) {\n  if (!v || Object.keys(v).length === 0) {\n    return { num: 0, newnum: 0 }\n  }\n  if (Object.keys(v).length === 1) {\n    let ret = {\n      num: Object.values(v)[0],\n      newnum: Object.values(v)[0],\n    }\n    return ret;\n  }\n  let nv = Object.keys(v).sort((a, b) => moment(b, \"MM/DD/YYYY\").toDate() - moment(a, \"MM/DD/YYYY\").toDate());\n\n  let last = v[nv[0]]\n  let newnum = v[nv[0]] - v[nv[1]];\n  if (newnum < 0) {\n    newnum = 0;\n  }\n  return { num: last, newnum: newnum };\n}\n\nfunction mergeTwoMapValues(m1, m2) {\n  for (let i in m2) {\n    let a = m1[i];\n    if (isNaN(a)) {\n      a = 0;\n    }\n    if (!isNaN(m2[i])) {\n      a += m2[i];\n    }\n    m1[i] = a;\n  }\n}\n\nconst Util = {\n  normalize_date,\n  getValueFromLastDate,\n  mergeTwoMapValues,\n}\n\nexports.Util = Util;\n"],"sourceRoot":""}